<?xml version="1.0" encoding="utf-8"?>
<Assembly Name="System.Core" FullName="System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Path="C:\Windows\Microsoft.NET\Framework\v4.0.30319\System.Core.dll">
  <Reference Name="mscorlib" FullName="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <Reference Name="System" FullName="System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <Reference Name="System.Xml" FullName="System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <Reference Name="System.Numerics" FullName="System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <Reference Name="System.Security" FullName="System.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <Namespace Name="Microsoft.Win32.SafeHandles">
    <Class Name="SafeMemoryMappedFileHandle" Type="Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
      <ImplementedInterface Type="System.IDisposable" />
    </Class>
    <Class Name="SafeMemoryMappedViewHandle" Type="Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle" BaseName="SafeBuffer" BaseType="System.Runtime.InteropServices.SafeBuffer">
      <ImplementedInterface Type="System.IDisposable" />
    </Class>
    <Class Name="SafeNCryptHandle" Type="Microsoft.Win32.SafeHandles.SafeNCryptHandle" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
      <ImplementedInterface Type="System.IDisposable" />
    </Class>
    <Class Name="SafeNCryptKeyHandle" Type="Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" BaseName="SafeNCryptHandle" BaseType="Microsoft.Win32.SafeHandles.SafeNCryptHandle">
      <ImplementedInterface Type="System.IDisposable" />
      <Constructor>
        <Parameter Name="handle" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="parentHandle" Type="System.Runtime.InteropServices.SafeHandle" BaseName="CriticalFinalizerObject" BaseType="System.Runtime.ConstrainedExecution.CriticalFinalizerObject" />
      </Constructor>
    </Class>
    <Class Name="SafeNCryptProviderHandle" Type="Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" BaseName="SafeNCryptHandle" BaseType="Microsoft.Win32.SafeHandles.SafeNCryptHandle">
      <ImplementedInterface Type="System.IDisposable" />
    </Class>
    <Class Name="SafeNCryptSecretHandle" Type="Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" BaseName="SafeNCryptHandle" BaseType="Microsoft.Win32.SafeHandles.SafeNCryptHandle">
      <ImplementedInterface Type="System.IDisposable" />
    </Class>
    <Class Name="SafePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
      <ImplementedInterface Type="System.IDisposable" />
      <Constructor>
        <Parameter Name="preexistingHandle" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="ownsHandle" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
  </Namespace>
  <Namespace Name="System">
    <Class Name="Action`10" Type="System.Action`10" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Action`10+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Action`10+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <GenericTypeParameter Type="System.Action`10+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
      <GenericTypeParameter Type="System.Action`10+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
      <GenericTypeParameter Type="System.Action`10+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
      <GenericTypeParameter Type="System.Action`10+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
      <GenericTypeParameter Type="System.Action`10+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
      <GenericTypeParameter Type="System.Action`10+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
      <GenericTypeParameter Type="System.Action`10+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
      <GenericTypeParameter Type="System.Action`10+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Action`10+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Action`10+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Action`10+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Action`10+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Action`10+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Action`10+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Action`10+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Action`10+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Action`10+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Action`10+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Action`10+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Action`10+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Action`10+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Action`10+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Action`10+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Action`10+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Action`10+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Action`10+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Action`10+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Action`10+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
      </Method>
    </Class>
    <Class Name="Action`11" Type="System.Action`11" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Action`11+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Action`11+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <GenericTypeParameter Type="System.Action`11+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
      <GenericTypeParameter Type="System.Action`11+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
      <GenericTypeParameter Type="System.Action`11+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
      <GenericTypeParameter Type="System.Action`11+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
      <GenericTypeParameter Type="System.Action`11+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
      <GenericTypeParameter Type="System.Action`11+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
      <GenericTypeParameter Type="System.Action`11+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
      <GenericTypeParameter Type="System.Action`11+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
      <GenericTypeParameter Type="System.Action`11+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Action`11+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Action`11+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Action`11+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Action`11+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Action`11+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Action`11+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Action`11+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Action`11+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Action`11+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Action`11+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Action`11+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Action`11+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Action`11+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Action`11+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Action`11+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Action`11+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Action`11+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Action`11+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Action`11+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Action`11+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Action`11+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Action`11+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
      </Method>
    </Class>
    <Class Name="Action`12" Type="System.Action`12" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Action`12+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Action`12+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <GenericTypeParameter Type="System.Action`12+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
      <GenericTypeParameter Type="System.Action`12+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
      <GenericTypeParameter Type="System.Action`12+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
      <GenericTypeParameter Type="System.Action`12+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
      <GenericTypeParameter Type="System.Action`12+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
      <GenericTypeParameter Type="System.Action`12+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
      <GenericTypeParameter Type="System.Action`12+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
      <GenericTypeParameter Type="System.Action`12+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
      <GenericTypeParameter Type="System.Action`12+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
      <GenericTypeParameter Type="System.Action`12+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Action`12+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Action`12+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Action`12+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Action`12+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Action`12+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Action`12+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Action`12+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Action`12+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Action`12+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Action`12+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Action`12+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Action`12+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Action`12+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Action`12+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Action`12+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Action`12+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Action`12+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Action`12+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Action`12+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Action`12+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Action`12+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Action`12+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Action`12+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Action`12+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
      </Method>
    </Class>
    <Class Name="Action`13" Type="System.Action`13" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Action`13+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Action`13+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <GenericTypeParameter Type="System.Action`13+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
      <GenericTypeParameter Type="System.Action`13+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
      <GenericTypeParameter Type="System.Action`13+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
      <GenericTypeParameter Type="System.Action`13+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
      <GenericTypeParameter Type="System.Action`13+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
      <GenericTypeParameter Type="System.Action`13+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
      <GenericTypeParameter Type="System.Action`13+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
      <GenericTypeParameter Type="System.Action`13+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
      <GenericTypeParameter Type="System.Action`13+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
      <GenericTypeParameter Type="System.Action`13+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
      <GenericTypeParameter Type="System.Action`13+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Action`13+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Action`13+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Action`13+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Action`13+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Action`13+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Action`13+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Action`13+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Action`13+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Action`13+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Action`13+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Action`13+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Action`13+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
        <Parameter Name="arg13" Type="System.Action`13+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Action`13+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Action`13+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Action`13+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Action`13+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Action`13+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Action`13+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Action`13+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Action`13+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Action`13+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Action`13+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Action`13+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Action`13+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
        <Parameter Name="arg13" Type="System.Action`13+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
      </Method>
    </Class>
    <Class Name="Action`14" Type="System.Action`14" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Action`14+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Action`14+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <GenericTypeParameter Type="System.Action`14+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
      <GenericTypeParameter Type="System.Action`14+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
      <GenericTypeParameter Type="System.Action`14+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
      <GenericTypeParameter Type="System.Action`14+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
      <GenericTypeParameter Type="System.Action`14+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
      <GenericTypeParameter Type="System.Action`14+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
      <GenericTypeParameter Type="System.Action`14+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
      <GenericTypeParameter Type="System.Action`14+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
      <GenericTypeParameter Type="System.Action`14+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
      <GenericTypeParameter Type="System.Action`14+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
      <GenericTypeParameter Type="System.Action`14+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
      <GenericTypeParameter Type="System.Action`14+T14" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Action`14+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Action`14+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Action`14+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Action`14+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Action`14+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Action`14+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Action`14+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Action`14+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Action`14+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Action`14+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Action`14+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Action`14+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
        <Parameter Name="arg13" Type="System.Action`14+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
        <Parameter Name="arg14" Type="System.Action`14+T14" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Action`14+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Action`14+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Action`14+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Action`14+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Action`14+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Action`14+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Action`14+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Action`14+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Action`14+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Action`14+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Action`14+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Action`14+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
        <Parameter Name="arg13" Type="System.Action`14+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
        <Parameter Name="arg14" Type="System.Action`14+T14" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
      </Method>
    </Class>
    <Class Name="Action`15" Type="System.Action`15" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Action`15+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Action`15+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <GenericTypeParameter Type="System.Action`15+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
      <GenericTypeParameter Type="System.Action`15+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
      <GenericTypeParameter Type="System.Action`15+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
      <GenericTypeParameter Type="System.Action`15+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
      <GenericTypeParameter Type="System.Action`15+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
      <GenericTypeParameter Type="System.Action`15+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
      <GenericTypeParameter Type="System.Action`15+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
      <GenericTypeParameter Type="System.Action`15+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
      <GenericTypeParameter Type="System.Action`15+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
      <GenericTypeParameter Type="System.Action`15+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
      <GenericTypeParameter Type="System.Action`15+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
      <GenericTypeParameter Type="System.Action`15+T14" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
      <GenericTypeParameter Type="System.Action`15+T15" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="14" />
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Action`15+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Action`15+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Action`15+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Action`15+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Action`15+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Action`15+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Action`15+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Action`15+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Action`15+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Action`15+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Action`15+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Action`15+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
        <Parameter Name="arg13" Type="System.Action`15+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
        <Parameter Name="arg14" Type="System.Action`15+T14" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
        <Parameter Name="arg15" Type="System.Action`15+T15" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="14" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Action`15+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Action`15+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Action`15+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Action`15+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Action`15+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Action`15+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Action`15+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Action`15+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Action`15+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Action`15+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Action`15+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Action`15+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
        <Parameter Name="arg13" Type="System.Action`15+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
        <Parameter Name="arg14" Type="System.Action`15+T14" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
        <Parameter Name="arg15" Type="System.Action`15+T15" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="14" />
      </Method>
    </Class>
    <Class Name="Action`16" Type="System.Action`16" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Action`16+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Action`16+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <GenericTypeParameter Type="System.Action`16+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
      <GenericTypeParameter Type="System.Action`16+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
      <GenericTypeParameter Type="System.Action`16+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
      <GenericTypeParameter Type="System.Action`16+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
      <GenericTypeParameter Type="System.Action`16+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
      <GenericTypeParameter Type="System.Action`16+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
      <GenericTypeParameter Type="System.Action`16+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
      <GenericTypeParameter Type="System.Action`16+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
      <GenericTypeParameter Type="System.Action`16+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
      <GenericTypeParameter Type="System.Action`16+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
      <GenericTypeParameter Type="System.Action`16+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
      <GenericTypeParameter Type="System.Action`16+T14" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
      <GenericTypeParameter Type="System.Action`16+T15" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="14" />
      <GenericTypeParameter Type="System.Action`16+T16" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="15" />
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Action`16+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Action`16+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Action`16+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Action`16+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Action`16+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Action`16+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Action`16+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Action`16+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Action`16+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Action`16+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Action`16+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Action`16+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
        <Parameter Name="arg13" Type="System.Action`16+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
        <Parameter Name="arg14" Type="System.Action`16+T14" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
        <Parameter Name="arg15" Type="System.Action`16+T15" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="14" />
        <Parameter Name="arg16" Type="System.Action`16+T16" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="15" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Action`16+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Action`16+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Action`16+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Action`16+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Action`16+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Action`16+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Action`16+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Action`16+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Action`16+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Action`16+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Action`16+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Action`16+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
        <Parameter Name="arg13" Type="System.Action`16+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
        <Parameter Name="arg14" Type="System.Action`16+T14" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
        <Parameter Name="arg15" Type="System.Action`16+T15" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="14" />
        <Parameter Name="arg16" Type="System.Action`16+T16" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="15" />
      </Method>
    </Class>
    <Class Name="Action`9" Type="System.Action`9" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Action`9+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Action`9+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <GenericTypeParameter Type="System.Action`9+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
      <GenericTypeParameter Type="System.Action`9+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
      <GenericTypeParameter Type="System.Action`9+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
      <GenericTypeParameter Type="System.Action`9+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
      <GenericTypeParameter Type="System.Action`9+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
      <GenericTypeParameter Type="System.Action`9+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
      <GenericTypeParameter Type="System.Action`9+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Action`9+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Action`9+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Action`9+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Action`9+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Action`9+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Action`9+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Action`9+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Action`9+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Action`9+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Action`9+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Action`9+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Action`9+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Action`9+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Action`9+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Action`9+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Action`9+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Action`9+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Action`9+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
      </Method>
    </Class>
    <Class Name="Func`10" Type="System.Func`10" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Func`10+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Func`10+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <GenericTypeParameter Type="System.Func`10+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
      <GenericTypeParameter Type="System.Func`10+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
      <GenericTypeParameter Type="System.Func`10+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
      <GenericTypeParameter Type="System.Func`10+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
      <GenericTypeParameter Type="System.Func`10+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
      <GenericTypeParameter Type="System.Func`10+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
      <GenericTypeParameter Type="System.Func`10+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
      <GenericTypeParameter Type="System.Func`10+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Func`10+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Func`10+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Func`10+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Func`10+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Func`10+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Func`10+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Func`10+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Func`10+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Func`10+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Func`10+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" ContainsGenericMethodParameters="True">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Func`10+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Func`10+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Func`10+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Func`10+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Func`10+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Func`10+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Func`10+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Func`10+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Func`10+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Func`10+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
      </Method>
    </Class>
    <Class Name="Func`11" Type="System.Func`11" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Func`11+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Func`11+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <GenericTypeParameter Type="System.Func`11+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
      <GenericTypeParameter Type="System.Func`11+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
      <GenericTypeParameter Type="System.Func`11+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
      <GenericTypeParameter Type="System.Func`11+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
      <GenericTypeParameter Type="System.Func`11+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
      <GenericTypeParameter Type="System.Func`11+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
      <GenericTypeParameter Type="System.Func`11+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
      <GenericTypeParameter Type="System.Func`11+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
      <GenericTypeParameter Type="System.Func`11+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Func`11+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Func`11+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Func`11+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Func`11+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Func`11+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Func`11+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Func`11+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Func`11+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Func`11+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Func`11+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Func`11+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" ContainsGenericMethodParameters="True">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Func`11+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Func`11+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Func`11+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Func`11+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Func`11+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Func`11+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Func`11+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Func`11+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Func`11+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Func`11+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Func`11+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
      </Method>
    </Class>
    <Class Name="Func`12" Type="System.Func`12" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Func`12+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Func`12+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <GenericTypeParameter Type="System.Func`12+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
      <GenericTypeParameter Type="System.Func`12+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
      <GenericTypeParameter Type="System.Func`12+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
      <GenericTypeParameter Type="System.Func`12+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
      <GenericTypeParameter Type="System.Func`12+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
      <GenericTypeParameter Type="System.Func`12+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
      <GenericTypeParameter Type="System.Func`12+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
      <GenericTypeParameter Type="System.Func`12+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
      <GenericTypeParameter Type="System.Func`12+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
      <GenericTypeParameter Type="System.Func`12+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Func`12+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Func`12+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Func`12+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Func`12+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Func`12+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Func`12+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Func`12+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Func`12+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Func`12+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Func`12+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Func`12+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Func`12+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" ContainsGenericMethodParameters="True">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Func`12+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Func`12+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Func`12+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Func`12+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Func`12+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Func`12+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Func`12+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Func`12+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Func`12+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Func`12+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Func`12+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Func`12+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
      </Method>
    </Class>
    <Class Name="Func`13" Type="System.Func`13" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Func`13+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Func`13+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <GenericTypeParameter Type="System.Func`13+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
      <GenericTypeParameter Type="System.Func`13+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
      <GenericTypeParameter Type="System.Func`13+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
      <GenericTypeParameter Type="System.Func`13+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
      <GenericTypeParameter Type="System.Func`13+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
      <GenericTypeParameter Type="System.Func`13+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
      <GenericTypeParameter Type="System.Func`13+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
      <GenericTypeParameter Type="System.Func`13+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
      <GenericTypeParameter Type="System.Func`13+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
      <GenericTypeParameter Type="System.Func`13+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
      <GenericTypeParameter Type="System.Func`13+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Func`13+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Func`13+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Func`13+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Func`13+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Func`13+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Func`13+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Func`13+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Func`13+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Func`13+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Func`13+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Func`13+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Func`13+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Func`13+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" ContainsGenericMethodParameters="True">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Func`13+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Func`13+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Func`13+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Func`13+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Func`13+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Func`13+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Func`13+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Func`13+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Func`13+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Func`13+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Func`13+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Func`13+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Func`13+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
      </Method>
    </Class>
    <Class Name="Func`14" Type="System.Func`14" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Func`14+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Func`14+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <GenericTypeParameter Type="System.Func`14+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
      <GenericTypeParameter Type="System.Func`14+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
      <GenericTypeParameter Type="System.Func`14+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
      <GenericTypeParameter Type="System.Func`14+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
      <GenericTypeParameter Type="System.Func`14+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
      <GenericTypeParameter Type="System.Func`14+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
      <GenericTypeParameter Type="System.Func`14+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
      <GenericTypeParameter Type="System.Func`14+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
      <GenericTypeParameter Type="System.Func`14+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
      <GenericTypeParameter Type="System.Func`14+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
      <GenericTypeParameter Type="System.Func`14+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
      <GenericTypeParameter Type="System.Func`14+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Func`14+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Func`14+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Func`14+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Func`14+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Func`14+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Func`14+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Func`14+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Func`14+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Func`14+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Func`14+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Func`14+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Func`14+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
        <Parameter Name="arg13" Type="System.Func`14+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Func`14+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" ContainsGenericMethodParameters="True">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Func`14+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Func`14+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Func`14+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Func`14+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Func`14+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Func`14+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Func`14+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Func`14+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Func`14+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Func`14+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Func`14+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Func`14+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Func`14+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
        <Parameter Name="arg13" Type="System.Func`14+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
      </Method>
    </Class>
    <Class Name="Func`15" Type="System.Func`15" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Func`15+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Func`15+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <GenericTypeParameter Type="System.Func`15+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
      <GenericTypeParameter Type="System.Func`15+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
      <GenericTypeParameter Type="System.Func`15+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
      <GenericTypeParameter Type="System.Func`15+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
      <GenericTypeParameter Type="System.Func`15+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
      <GenericTypeParameter Type="System.Func`15+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
      <GenericTypeParameter Type="System.Func`15+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
      <GenericTypeParameter Type="System.Func`15+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
      <GenericTypeParameter Type="System.Func`15+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
      <GenericTypeParameter Type="System.Func`15+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
      <GenericTypeParameter Type="System.Func`15+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
      <GenericTypeParameter Type="System.Func`15+T14" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
      <GenericTypeParameter Type="System.Func`15+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="14" />
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Func`15+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Func`15+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Func`15+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Func`15+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Func`15+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Func`15+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Func`15+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Func`15+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Func`15+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Func`15+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Func`15+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Func`15+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
        <Parameter Name="arg13" Type="System.Func`15+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
        <Parameter Name="arg14" Type="System.Func`15+T14" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Func`15+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="14" ContainsGenericMethodParameters="True">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Func`15+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="14" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Func`15+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Func`15+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Func`15+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Func`15+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Func`15+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Func`15+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Func`15+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Func`15+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Func`15+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Func`15+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Func`15+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Func`15+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
        <Parameter Name="arg13" Type="System.Func`15+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
        <Parameter Name="arg14" Type="System.Func`15+T14" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
      </Method>
    </Class>
    <Class Name="Func`16" Type="System.Func`16" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Func`16+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Func`16+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <GenericTypeParameter Type="System.Func`16+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
      <GenericTypeParameter Type="System.Func`16+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
      <GenericTypeParameter Type="System.Func`16+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
      <GenericTypeParameter Type="System.Func`16+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
      <GenericTypeParameter Type="System.Func`16+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
      <GenericTypeParameter Type="System.Func`16+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
      <GenericTypeParameter Type="System.Func`16+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
      <GenericTypeParameter Type="System.Func`16+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
      <GenericTypeParameter Type="System.Func`16+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
      <GenericTypeParameter Type="System.Func`16+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
      <GenericTypeParameter Type="System.Func`16+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
      <GenericTypeParameter Type="System.Func`16+T14" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
      <GenericTypeParameter Type="System.Func`16+T15" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="14" />
      <GenericTypeParameter Type="System.Func`16+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="15" />
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Func`16+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Func`16+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Func`16+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Func`16+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Func`16+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Func`16+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Func`16+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Func`16+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Func`16+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Func`16+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Func`16+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Func`16+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
        <Parameter Name="arg13" Type="System.Func`16+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
        <Parameter Name="arg14" Type="System.Func`16+T14" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
        <Parameter Name="arg15" Type="System.Func`16+T15" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="14" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Func`16+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="15" ContainsGenericMethodParameters="True">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Func`16+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="15" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Func`16+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Func`16+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Func`16+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Func`16+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Func`16+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Func`16+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Func`16+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Func`16+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Func`16+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Func`16+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Func`16+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Func`16+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
        <Parameter Name="arg13" Type="System.Func`16+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
        <Parameter Name="arg14" Type="System.Func`16+T14" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
        <Parameter Name="arg15" Type="System.Func`16+T15" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="14" />
      </Method>
    </Class>
    <Class Name="Func`17" Type="System.Func`17" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Func`17+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Func`17+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <GenericTypeParameter Type="System.Func`17+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
      <GenericTypeParameter Type="System.Func`17+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
      <GenericTypeParameter Type="System.Func`17+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
      <GenericTypeParameter Type="System.Func`17+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
      <GenericTypeParameter Type="System.Func`17+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
      <GenericTypeParameter Type="System.Func`17+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
      <GenericTypeParameter Type="System.Func`17+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
      <GenericTypeParameter Type="System.Func`17+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
      <GenericTypeParameter Type="System.Func`17+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
      <GenericTypeParameter Type="System.Func`17+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
      <GenericTypeParameter Type="System.Func`17+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
      <GenericTypeParameter Type="System.Func`17+T14" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
      <GenericTypeParameter Type="System.Func`17+T15" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="14" />
      <GenericTypeParameter Type="System.Func`17+T16" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="15" />
      <GenericTypeParameter Type="System.Func`17+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="16" />
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Func`17+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Func`17+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Func`17+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Func`17+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Func`17+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Func`17+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Func`17+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Func`17+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Func`17+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Func`17+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Func`17+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Func`17+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
        <Parameter Name="arg13" Type="System.Func`17+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
        <Parameter Name="arg14" Type="System.Func`17+T14" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
        <Parameter Name="arg15" Type="System.Func`17+T15" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="14" />
        <Parameter Name="arg16" Type="System.Func`17+T16" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="15" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Func`17+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="16" ContainsGenericMethodParameters="True">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Func`17+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="16" ContainsGenericMethodParameters="True">
        <Parameter Name="arg1" Type="System.Func`17+T1" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="arg2" Type="System.Func`17+T2" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="arg3" Type="System.Func`17+T3" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" />
        <Parameter Name="arg4" Type="System.Func`17+T4" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" />
        <Parameter Name="arg5" Type="System.Func`17+T5" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="4" />
        <Parameter Name="arg6" Type="System.Func`17+T6" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="5" />
        <Parameter Name="arg7" Type="System.Func`17+T7" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="6" />
        <Parameter Name="arg8" Type="System.Func`17+T8" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="7" />
        <Parameter Name="arg9" Type="System.Func`17+T9" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="8" />
        <Parameter Name="arg10" Type="System.Func`17+T10" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="9" />
        <Parameter Name="arg11" Type="System.Func`17+T11" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="10" />
        <Parameter Name="arg12" Type="System.Func`17+T12" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="11" />
        <Parameter Name="arg13" Type="System.Func`17+T13" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="12" />
        <Parameter Name="arg14" Type="System.Func`17+T14" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="13" />
        <Parameter Name="arg15" Type="System.Func`17+T15" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="14" />
        <Parameter Name="arg16" Type="System.Func`17+T16" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="15" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.Collections.Generic">
    <Class Name="HashSet`1&lt;T&gt;" Type="System.Collections.Generic.HashSet`1&lt;System.Collections.Generic.HashSet`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.HashSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Collections.Generic.HashSet`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.HashSet`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.Serialization.IDeserializationCallback" />
      <ImplementedInterface Type="System.Collections.Generic.ISet`1&lt;System.Collections.Generic.HashSet`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Collections.Generic.HashSet`1+T&gt;" />
      <Property Name="Comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Collections.Generic.HashSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsReadable="True">
        <GenericTypeArgument Type="System.Collections.Generic.HashSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Property>
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Collections.Generic.HashSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.HashSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.HashSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Collections.Generic.HashSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Collections.Generic.HashSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Method Name="Add" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Collections.Generic.HashSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Collections.Generic.HashSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="array" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Generic.HashSet`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="arrayIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="array" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Generic.HashSet`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="array" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Generic.HashSet`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="arrayIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CreateSetComparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Collections.Generic.HashSet`1&lt;System.Collections.Generic.HashSet`1+T&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.HashSet`1&lt;System.Collections.Generic.HashSet`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ExceptWith" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.HashSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Generic.HashSet`1&lt;System.Collections.Generic.HashSet`1+T&gt;+Enumerator" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.HashSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="GetObjectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IntersectWith" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.HashSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="IsProperSubsetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.HashSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="IsProperSupersetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.HashSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="IsSubsetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.HashSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="IsSupersetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.HashSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="OnDeserialization" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="sender" Type="System.Object" />
      </Method>
      <Method Name="Overlaps" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.HashSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Remove" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Collections.Generic.HashSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="RemoveWhere" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="match" Type="System.Predicate`1&lt;System.Collections.Generic.HashSet`1+T&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SetEquals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.HashSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SymmetricExceptWith" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.HashSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="TrimExcess" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="TryGetValue" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="equalValue" Type="System.Collections.Generic.HashSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="actualValue" Type="T&amp;" IsByRef="True" ElementType="System.Collections.Generic.HashSet`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="UnionWith" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.HashSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
    </Class>
    <Struct Name="HashSet`1&lt;T&gt;.Enumerator" Type="System.Collections.Generic.HashSet`1&lt;System.Collections.Generic.HashSet`1+Enumerator+T&gt;+Enumerator" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.HashSet`1+Enumerator+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerator`1&lt;System.Collections.Generic.HashSet`1+Enumerator+T&gt;" />
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Collections.IEnumerator" />
      <Property Name="Current" Type="System.Collections.Generic.HashSet`1+Enumerator+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" IsReadable="True" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="MoveNext" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
    </Struct>
  </Namespace>
  <Namespace Name="System.Diagnostics">
    <Class Name="EventSchemaTraceListener" Type="System.Diagnostics.EventSchemaTraceListener" BaseName="TextWriterTraceListener" BaseType="System.Diagnostics.TextWriterTraceListener">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="BufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsThreadSafe" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MaximumFileSize" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MaximumNumberOfFiles" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TraceLogRetentionOption" Type="System.Diagnostics.TraceLogRetentionOption" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="bufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="bufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="logRetentionOption" Type="System.Diagnostics.TraceLogRetentionOption" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="bufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="logRetentionOption" Type="System.Diagnostics.TraceLogRetentionOption" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="maximumFileSize" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="bufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="logRetentionOption" Type="System.Diagnostics.TraceLogRetentionOption" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="maximumFileSize" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="maximumNumberOfFiles" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Fail" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="detailMessage" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Flush" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="TraceData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="data" Type="System.Object" />
      </Method>
      <Method Name="TraceData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="data" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="TraceEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="TraceEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="TraceTransfer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="relatedActivityId" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Enumeration Name="TraceLogRetentionOption" Type="System.Diagnostics.TraceLogRetentionOption" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="LimitedCircularFiles" Type="System.Diagnostics.TraceLogRetentionOption" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="LimitedSequentialFiles" Type="System.Diagnostics.TraceLogRetentionOption" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="SingleFileBoundedSize" Type="System.Diagnostics.TraceLogRetentionOption" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="SingleFileUnboundedSize" Type="System.Diagnostics.TraceLogRetentionOption" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="UnlimitedSequentialFiles" Type="System.Diagnostics.TraceLogRetentionOption" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="UnescapedXmlDiagnosticData" Type="System.Diagnostics.UnescapedXmlDiagnosticData" BaseName="Object" BaseType="System.Object">
      <Property Name="UnescapedXml" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="xmlPayload" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
  </Namespace>
  <Namespace Name="System.Diagnostics.Eventing">
    <Struct Name="EventDescriptor" Type="System.Diagnostics.Eventing.EventDescriptor" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
      <Property Name="Channel" Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="EventId" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Keywords" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Level" Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Opcode" Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Task" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Version" Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="version" Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="channel" Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="level" Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="opcode" Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="task" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="keywords" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Struct>
    <Class Name="EventProvider" Type="System.Diagnostics.Eventing.EventProvider" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Constructor>
        <Parameter Name="providerGuid" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="CreateActivityId" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetLastWriteEventError" Type="System.Diagnostics.Eventing.EventProvider+WriteEventErrorCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsStatic="True" />
      <Method Name="IsEnabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsEnabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="level" Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="keywords" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SetActivityId" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="id" Type="System.Guid&amp;" IsByRef="True" ElementType="System.Guid" />
      </Method>
      <Method Name="WriteEvent" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventDescriptor" Type="System.Diagnostics.Eventing.EventDescriptor&amp;" IsByRef="True" ElementType="System.Diagnostics.Eventing.EventDescriptor" />
        <Parameter Name="eventPayload" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="WriteEvent" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventDescriptor" Type="System.Diagnostics.Eventing.EventDescriptor&amp;" IsByRef="True" ElementType="System.Diagnostics.Eventing.EventDescriptor" />
        <Parameter Name="data" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteMessageEvent" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventMessage" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventLevel" Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="eventKeywords" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WriteMessageEvent" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventMessage" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteTransferEvent" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventDescriptor" Type="System.Diagnostics.Eventing.EventDescriptor&amp;" IsByRef="True" ElementType="System.Diagnostics.Eventing.EventDescriptor" />
        <Parameter Name="relatedActivityId" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="eventPayload" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
    </Class>
    <Enumeration Name="EventProvider.WriteEventErrorCode" Type="System.Diagnostics.Eventing.EventProvider+WriteEventErrorCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="EventTooBig" Type="System.Diagnostics.Eventing.EventProvider+WriteEventErrorCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="NoError" Type="System.Diagnostics.Eventing.EventProvider+WriteEventErrorCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="NoFreeBuffers" Type="System.Diagnostics.Eventing.EventProvider+WriteEventErrorCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="EventProviderTraceListener" Type="System.Diagnostics.Eventing.EventProviderTraceListener" BaseName="TraceListener" BaseType="System.Diagnostics.TraceListener">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Delimiter" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="IsThreadSafe" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="providerId" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="providerId" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="providerId" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="delimiter" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Fail" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="detailMessage" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Flush" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="TraceData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="data" Type="System.Object" />
      </Method>
      <Method Name="TraceData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="data" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="TraceEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TraceEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="TraceEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="TraceTransfer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="relatedActivityId" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.Diagnostics.Eventing.Reader">
    <Class Name="EventBookmark" Type="System.Diagnostics.Eventing.Reader.EventBookmark" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
    </Class>
    <Class Name="EventKeyword" Type="System.Diagnostics.Eventing.Reader.EventKeyword" BaseName="Object" BaseType="System.Object">
      <Property Name="DisplayName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Value" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="EventLevel" Type="System.Diagnostics.Eventing.Reader.EventLevel" BaseName="Object" BaseType="System.Object">
      <Property Name="DisplayName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Value" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="EventLogConfiguration" Type="System.Diagnostics.Eventing.Reader.EventLogConfiguration" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="IsClassicLog" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsEnabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="LogFilePath" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="LogIsolation" Type="System.Diagnostics.Eventing.Reader.EventLogIsolation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="LogMode" Type="System.Diagnostics.Eventing.Reader.EventLogMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="LogName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="LogType" Type="System.Diagnostics.Eventing.Reader.EventLogType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="MaximumSizeInBytes" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="OwningProviderName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ProviderBufferSize" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="ProviderControlGuid" Type="System.Nullable`1&lt;System.Guid&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="ProviderKeywords" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True" IsWritable="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="ProviderLatency" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="ProviderLevel" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True" IsWritable="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="ProviderMaximumNumberOfBuffers" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="ProviderMinimumNumberOfBuffers" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="ProviderNames" Type="System.Collections.Generic.IEnumerable`1&lt;System.String&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="SecurityDescriptor" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="logName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="logName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="session" Type="System.Diagnostics.Eventing.Reader.EventLogSession" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="SaveChanges" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="EventLogException" Type="System.Diagnostics.Eventing.Reader.EventLogException" BaseName="Exception" BaseType="System.Exception">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Property Name="Message" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="GetObjectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="EventLogInformation" Type="System.Diagnostics.Eventing.Reader.EventLogInformation" BaseName="Object" BaseType="System.Object">
      <Property Name="Attributes" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="CreationTime" Type="System.Nullable`1&lt;System.DateTime&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="FileSize" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="IsLogFull" Type="System.Nullable`1&lt;System.Boolean&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="LastAccessTime" Type="System.Nullable`1&lt;System.DateTime&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="LastWriteTime" Type="System.Nullable`1&lt;System.DateTime&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="OldestRecordNumber" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="RecordCount" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
    </Class>
    <Class Name="EventLogInvalidDataException" Type="System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" BaseName="EventLogException" BaseType="System.Diagnostics.Eventing.Reader.EventLogException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Enumeration Name="EventLogIsolation" Type="System.Diagnostics.Eventing.Reader.EventLogIsolation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Application" Type="System.Diagnostics.Eventing.Reader.EventLogIsolation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Custom" Type="System.Diagnostics.Eventing.Reader.EventLogIsolation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="System" Type="System.Diagnostics.Eventing.Reader.EventLogIsolation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="EventLogLink" Type="System.Diagnostics.Eventing.Reader.EventLogLink" BaseName="Object" BaseType="System.Object">
      <Property Name="DisplayName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="IsImported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="LogName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Enumeration Name="EventLogMode" Type="System.Diagnostics.Eventing.Reader.EventLogMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AutoBackup" Type="System.Diagnostics.Eventing.Reader.EventLogMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Circular" Type="System.Diagnostics.Eventing.Reader.EventLogMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Retain" Type="System.Diagnostics.Eventing.Reader.EventLogMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Class Name="EventLogNotFoundException" Type="System.Diagnostics.Eventing.Reader.EventLogNotFoundException" BaseName="EventLogException" BaseType="System.Diagnostics.Eventing.Reader.EventLogException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="EventLogPropertySelector" Type="System.Diagnostics.Eventing.Reader.EventLogPropertySelector" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Constructor>
        <Parameter Name="propertyQueries" Type="System.Collections.Generic.IEnumerable`1&lt;System.String&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Constructor>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="EventLogProviderDisabledException" Type="System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" BaseName="EventLogException" BaseType="System.Diagnostics.Eventing.Reader.EventLogException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="EventLogQuery" Type="System.Diagnostics.Eventing.Reader.EventLogQuery" BaseName="Object" BaseType="System.Object">
      <Property Name="ReverseDirection" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Session" Type="System.Diagnostics.Eventing.Reader.EventLogSession" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="TolerateQueryErrors" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="query" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="EventLogReader" Type="System.Diagnostics.Eventing.Reader.EventLogReader" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="BatchSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="LogStatus" Type="System.Collections.Generic.IList`1&lt;System.Diagnostics.Eventing.Reader.EventLogStatus&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Diagnostics.Eventing.Reader.EventLogStatus" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Constructor>
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="eventQuery" Type="System.Diagnostics.Eventing.Reader.EventLogQuery" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="eventQuery" Type="System.Diagnostics.Eventing.Reader.EventLogQuery" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="bookmark" Type="System.Diagnostics.Eventing.Reader.EventBookmark" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="CancelReading" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ReadEvent" Type="System.Diagnostics.Eventing.Reader.EventRecord" BaseName="Object" BaseType="System.Object" />
      <Method Name="ReadEvent" Type="System.Diagnostics.Eventing.Reader.EventRecord" BaseName="Object" BaseType="System.Object">
        <Parameter Name="timeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Seek" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="bookmark" Type="System.Diagnostics.Eventing.Reader.EventBookmark" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Seek" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="bookmark" Type="System.Diagnostics.Eventing.Reader.EventBookmark" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="offset" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Seek" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="origin" Type="System.IO.SeekOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="offset" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="EventLogReadingException" Type="System.Diagnostics.Eventing.Reader.EventLogReadingException" BaseName="EventLogException" BaseType="System.Diagnostics.Eventing.Reader.EventLogException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="EventLogRecord" Type="System.Diagnostics.Eventing.Reader.EventLogRecord" BaseName="EventRecord" BaseType="System.Diagnostics.Eventing.Reader.EventRecord">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="ActivityId" Type="System.Nullable`1&lt;System.Guid&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="Bookmark" Type="System.Diagnostics.Eventing.Reader.EventBookmark" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ContainerLog" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Keywords" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="KeywordsDisplayNames" Type="System.Collections.Generic.IEnumerable`1&lt;System.String&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="Level" Type="System.Nullable`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="LevelDisplayName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="LogName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="MachineName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="MatchedQueryIds" Type="System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="Opcode" Type="System.Nullable`1&lt;System.Int16&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="OpcodeDisplayName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ProcessId" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="Properties" Type="System.Collections.Generic.IList`1&lt;System.Diagnostics.Eventing.Reader.EventProperty&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Diagnostics.Eventing.Reader.EventProperty" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="ProviderId" Type="System.Nullable`1&lt;System.Guid&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="ProviderName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Qualifiers" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="RecordId" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="RelatedActivityId" Type="System.Nullable`1&lt;System.Guid&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="Task" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="TaskDisplayName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ThreadId" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="TimeCreated" Type="System.Nullable`1&lt;System.DateTime&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="UserId" Type="System.Security.Principal.SecurityIdentifier" BaseName="IdentityReference" BaseType="System.Security.Principal.IdentityReference" IsReadable="True" />
      <Property Name="Version" Type="System.Nullable`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Method Name="FormatDescription" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="FormatDescription" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable`1&lt;System.Object&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="GetPropertyValues" Type="System.Collections.Generic.IList`1&lt;System.Object&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Object" />
        <Parameter Name="propertySelector" Type="System.Diagnostics.Eventing.Reader.EventLogPropertySelector" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ToXml" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="EventLogSession" Type="System.Diagnostics.Eventing.Reader.EventLogSession" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="GlobalSession" Type="System.Diagnostics.Eventing.Reader.EventLogSession" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Constructor>
        <Parameter Name="server" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="server" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="domain" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="user" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="password" Type="System.Security.SecureString" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="logOnType" Type="System.Diagnostics.Eventing.Reader.SessionAuthentication" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="CancelCurrentOperations" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ClearLog" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="logName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ClearLog" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="logName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="backupPath" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ExportLog" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="query" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="targetFilePath" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ExportLog" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="query" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="targetFilePath" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="tolerateQueryErrors" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ExportLogAndMessages" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="query" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="targetFilePath" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ExportLogAndMessages" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="query" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="targetFilePath" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="tolerateQueryErrors" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="targetCultureInfo" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetLogInformation" Type="System.Diagnostics.Eventing.Reader.EventLogInformation" BaseName="Object" BaseType="System.Object">
        <Parameter Name="logName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="GetLogNames" Type="System.Collections.Generic.IEnumerable`1&lt;System.String&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetProviderNames" Type="System.Collections.Generic.IEnumerable`1&lt;System.String&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="EventLogStatus" Type="System.Diagnostics.Eventing.Reader.EventLogStatus" BaseName="Object" BaseType="System.Object">
      <Property Name="LogName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="StatusCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Enumeration Name="EventLogType" Type="System.Diagnostics.Eventing.Reader.EventLogType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Administrative" Type="System.Diagnostics.Eventing.Reader.EventLogType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Analytical" Type="System.Diagnostics.Eventing.Reader.EventLogType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Debug" Type="System.Diagnostics.Eventing.Reader.EventLogType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Operational" Type="System.Diagnostics.Eventing.Reader.EventLogType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="EventLogWatcher" Type="System.Diagnostics.Eventing.Reader.EventLogWatcher" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Enabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="eventQuery" Type="System.Diagnostics.Eventing.Reader.EventLogQuery" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="eventQuery" Type="System.Diagnostics.Eventing.Reader.EventLogQuery" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="bookmark" Type="System.Diagnostics.Eventing.Reader.EventBookmark" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="eventQuery" Type="System.Diagnostics.Eventing.Reader.EventLogQuery" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="bookmark" Type="System.Diagnostics.Eventing.Reader.EventBookmark" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="readExistingEvents" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Event Name="EventRecordWritten" Type="System.EventHandler`1&lt;System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Class Name="EventMetadata" Type="System.Diagnostics.Eventing.Reader.EventMetadata" BaseName="Object" BaseType="System.Object">
      <Property Name="Description" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Id" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Keywords" Type="System.Collections.Generic.IEnumerable`1&lt;System.Diagnostics.Eventing.Reader.EventKeyword&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Diagnostics.Eventing.Reader.EventKeyword" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="Level" Type="System.Diagnostics.Eventing.Reader.EventLevel" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="LogLink" Type="System.Diagnostics.Eventing.Reader.EventLogLink" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Opcode" Type="System.Diagnostics.Eventing.Reader.EventOpcode" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Task" Type="System.Diagnostics.Eventing.Reader.EventTask" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Template" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Version" Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="EventOpcode" Type="System.Diagnostics.Eventing.Reader.EventOpcode" BaseName="Object" BaseType="System.Object">
      <Property Name="DisplayName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Value" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="EventProperty" Type="System.Diagnostics.Eventing.Reader.EventProperty" BaseName="Object" BaseType="System.Object">
      <Property Name="Value" Type="System.Object" IsReadable="True" />
    </Class>
    <Class Name="EventRecord" Type="System.Diagnostics.Eventing.Reader.EventRecord" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="ActivityId" Type="System.Nullable`1&lt;System.Guid&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="Bookmark" Type="System.Diagnostics.Eventing.Reader.EventBookmark" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Keywords" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="KeywordsDisplayNames" Type="System.Collections.Generic.IEnumerable`1&lt;System.String&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="Level" Type="System.Nullable`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="LevelDisplayName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="LogName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="MachineName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Opcode" Type="System.Nullable`1&lt;System.Int16&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="OpcodeDisplayName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ProcessId" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="Properties" Type="System.Collections.Generic.IList`1&lt;System.Diagnostics.Eventing.Reader.EventProperty&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Diagnostics.Eventing.Reader.EventProperty" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="ProviderId" Type="System.Nullable`1&lt;System.Guid&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="ProviderName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Qualifiers" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="RecordId" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="RelatedActivityId" Type="System.Nullable`1&lt;System.Guid&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="Task" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="TaskDisplayName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ThreadId" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="TimeCreated" Type="System.Nullable`1&lt;System.DateTime&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Property Name="UserId" Type="System.Security.Principal.SecurityIdentifier" BaseName="IdentityReference" BaseType="System.Security.Principal.IdentityReference" IsReadable="True" />
      <Property Name="Version" Type="System.Nullable`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="FormatDescription" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="FormatDescription" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable`1&lt;System.Object&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="ToXml" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="EventRecordWrittenEventArgs" Type="System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="EventException" Type="System.Exception" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="EventRecord" Type="System.Diagnostics.Eventing.Reader.EventRecord" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Class Name="EventTask" Type="System.Diagnostics.Eventing.Reader.EventTask" BaseName="Object" BaseType="System.Object">
      <Property Name="DisplayName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="EventGuid" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Value" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Enumeration Name="PathType" Type="System.Diagnostics.Eventing.Reader.PathType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="FilePath" Type="System.Diagnostics.Eventing.Reader.PathType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="LogName" Type="System.Diagnostics.Eventing.Reader.PathType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="ProviderMetadata" Type="System.Diagnostics.Eventing.Reader.ProviderMetadata" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="DisplayName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Events" Type="System.Collections.Generic.IEnumerable`1&lt;System.Diagnostics.Eventing.Reader.EventMetadata&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Diagnostics.Eventing.Reader.EventMetadata" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="HelpLink" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Id" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Keywords" Type="System.Collections.Generic.IList`1&lt;System.Diagnostics.Eventing.Reader.EventKeyword&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Diagnostics.Eventing.Reader.EventKeyword" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="Levels" Type="System.Collections.Generic.IList`1&lt;System.Diagnostics.Eventing.Reader.EventLevel&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Diagnostics.Eventing.Reader.EventLevel" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="LogLinks" Type="System.Collections.Generic.IList`1&lt;System.Diagnostics.Eventing.Reader.EventLogLink&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Diagnostics.Eventing.Reader.EventLogLink" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="MessageFilePath" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Opcodes" Type="System.Collections.Generic.IList`1&lt;System.Diagnostics.Eventing.Reader.EventOpcode&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Diagnostics.Eventing.Reader.EventOpcode" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="ParameterFilePath" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ResourceFilePath" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Tasks" Type="System.Collections.Generic.IList`1&lt;System.Diagnostics.Eventing.Reader.EventTask&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Diagnostics.Eventing.Reader.EventTask" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Constructor>
        <Parameter Name="providerName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="providerName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="session" Type="System.Diagnostics.Eventing.Reader.EventLogSession" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="targetCultureInfo" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Enumeration Name="SessionAuthentication" Type="System.Diagnostics.Eventing.Reader.SessionAuthentication" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Default" Type="System.Diagnostics.Eventing.Reader.SessionAuthentication" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Kerberos" Type="System.Diagnostics.Eventing.Reader.SessionAuthentication" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Negotiate" Type="System.Diagnostics.Eventing.Reader.SessionAuthentication" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Ntlm" Type="System.Diagnostics.Eventing.Reader.SessionAuthentication" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
    </Enumeration>
    <Enumeration Name="StandardEventKeywords" Type="System.Diagnostics.Eventing.Reader.StandardEventKeywords" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AuditFailure" Type="System.Diagnostics.Eventing.Reader.StandardEventKeywords" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4503599627370496" />
      <Field Name="AuditSuccess" Type="System.Diagnostics.Eventing.Reader.StandardEventKeywords" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9007199254740992" />
      <Field Name="CorrelationHint" Type="System.Diagnostics.Eventing.Reader.StandardEventKeywords" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4503599627370496" />
      <Field Name="CorrelationHint2" Type="System.Diagnostics.Eventing.Reader.StandardEventKeywords" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="18014398509481984" />
      <Field Name="EventLogClassic" Type="System.Diagnostics.Eventing.Reader.StandardEventKeywords" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="36028797018963968" />
      <Field Name="None" Type="System.Diagnostics.Eventing.Reader.StandardEventKeywords" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="ResponseTime" Type="System.Diagnostics.Eventing.Reader.StandardEventKeywords" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="281474976710656" />
      <Field Name="Sqm" Type="System.Diagnostics.Eventing.Reader.StandardEventKeywords" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2251799813685248" />
      <Field Name="WdiContext" Type="System.Diagnostics.Eventing.Reader.StandardEventKeywords" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="562949953421312" />
      <Field Name="WdiDiagnostic" Type="System.Diagnostics.Eventing.Reader.StandardEventKeywords" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1125899906842624" />
    </Enumeration>
    <Enumeration Name="StandardEventLevel" Type="System.Diagnostics.Eventing.Reader.StandardEventLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Critical" Type="System.Diagnostics.Eventing.Reader.StandardEventLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Error" Type="System.Diagnostics.Eventing.Reader.StandardEventLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Informational" Type="System.Diagnostics.Eventing.Reader.StandardEventLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="LogAlways" Type="System.Diagnostics.Eventing.Reader.StandardEventLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Verbose" Type="System.Diagnostics.Eventing.Reader.StandardEventLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="Warning" Type="System.Diagnostics.Eventing.Reader.StandardEventLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
    </Enumeration>
    <Enumeration Name="StandardEventOpcode" Type="System.Diagnostics.Eventing.Reader.StandardEventOpcode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="DataCollectionStart" Type="System.Diagnostics.Eventing.Reader.StandardEventOpcode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="DataCollectionStop" Type="System.Diagnostics.Eventing.Reader.StandardEventOpcode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Extension" Type="System.Diagnostics.Eventing.Reader.StandardEventOpcode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="Info" Type="System.Diagnostics.Eventing.Reader.StandardEventOpcode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Receive" Type="System.Diagnostics.Eventing.Reader.StandardEventOpcode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="240" />
      <Field Name="Reply" Type="System.Diagnostics.Eventing.Reader.StandardEventOpcode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Resume" Type="System.Diagnostics.Eventing.Reader.StandardEventOpcode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="Send" Type="System.Diagnostics.Eventing.Reader.StandardEventOpcode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9" />
      <Field Name="Start" Type="System.Diagnostics.Eventing.Reader.StandardEventOpcode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Stop" Type="System.Diagnostics.Eventing.Reader.StandardEventOpcode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Suspend" Type="System.Diagnostics.Eventing.Reader.StandardEventOpcode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
    </Enumeration>
    <Enumeration Name="StandardEventTask" Type="System.Diagnostics.Eventing.Reader.StandardEventTask" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="None" Type="System.Diagnostics.Eventing.Reader.StandardEventTask" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.Diagnostics.PerformanceData">
    <Class Name="CounterData" Type="System.Diagnostics.PerformanceData.CounterData" BaseName="Object" BaseType="System.Object">
      <Property Name="RawValue" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Value" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Method Name="Decrement" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Increment" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IncrementBy" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="CounterSet" Type="System.Diagnostics.PerformanceData.CounterSet" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Constructor>
        <Parameter Name="providerGuid" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="counterSetGuid" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="instanceType" Type="System.Diagnostics.PerformanceData.CounterSetInstanceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="AddCounter" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="counterId" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="counterType" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="AddCounter" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="counterId" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="counterType" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="counterName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateCounterSetInstance" Type="System.Diagnostics.PerformanceData.CounterSetInstance" BaseName="Object" BaseType="System.Object">
        <Parameter Name="instanceName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="CounterSetInstance" Type="System.Diagnostics.PerformanceData.CounterSetInstance" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Counters" Type="System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="CounterSetInstanceCounterDataSet" Type="System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Method Name="get_Item" Type="System.Diagnostics.PerformanceData.CounterData" BaseName="Object" BaseType="System.Object">
        <Parameter Name="counterId" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="get_Item" Type="System.Diagnostics.PerformanceData.CounterData" BaseName="Object" BaseType="System.Object">
        <Parameter Name="counterName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Enumeration Name="CounterSetInstanceType" Type="System.Diagnostics.PerformanceData.CounterSetInstanceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="GlobalAggregate" Type="System.Diagnostics.PerformanceData.CounterSetInstanceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="GlobalAggregateWithHistory" Type="System.Diagnostics.PerformanceData.CounterSetInstanceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11" />
      <Field Name="InstanceAggregate" Type="System.Diagnostics.PerformanceData.CounterSetInstanceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="22" />
      <Field Name="Multiple" Type="System.Diagnostics.PerformanceData.CounterSetInstanceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="MultipleAggregate" Type="System.Diagnostics.PerformanceData.CounterSetInstanceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Single" Type="System.Diagnostics.PerformanceData.CounterSetInstanceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Enumeration Name="CounterType" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AverageBase" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1073939458" />
      <Field Name="AverageCount64" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1073874176" />
      <Field Name="AverageTimer32" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="805438464" />
      <Field Name="Delta32" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4195328" />
      <Field Name="Delta64" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4195584" />
      <Field Name="ElapsedTime" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="807666944" />
      <Field Name="LargeQueueLength" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4523264" />
      <Field Name="MultiTimerBase" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1107494144" />
      <Field Name="MultiTimerPercentageActive" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="574686464" />
      <Field Name="MultiTimerPercentageActive100Ns" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="575735040" />
      <Field Name="MultiTimerPercentageNotActive" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="591463680" />
      <Field Name="MultiTimerPercentageNotActive100Ns" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="592512256" />
      <Field Name="ObjectSpecificTimer" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="543229184" />
      <Field Name="PercentageActive" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="541132032" />
      <Field Name="PercentageActive100Ns" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="542180608" />
      <Field Name="PercentageNotActive" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="557909248" />
      <Field Name="PercentageNotActive100Ns" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="558957824" />
      <Field Name="PrecisionObjectSpecificTimer" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="543622400" />
      <Field Name="PrecisionSystemTimer" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="541525248" />
      <Field Name="PrecisionTimer100Ns" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="542573824" />
      <Field Name="QueueLength" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4523008" />
      <Field Name="QueueLength100Ns" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5571840" />
      <Field Name="QueueLengthObjectTime" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6620416" />
      <Field Name="RateOfCountPerSecond32" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="272696320" />
      <Field Name="RateOfCountPerSecond64" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="272696576" />
      <Field Name="RawBase32" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1073939459" />
      <Field Name="RawBase64" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1073939712" />
      <Field Name="RawData32" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="65536" />
      <Field Name="RawData64" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="65792" />
      <Field Name="RawDataHex32" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="RawDataHex64" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="256" />
      <Field Name="RawFraction32" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="537003008" />
      <Field Name="RawFraction64" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="537003264" />
      <Field Name="SampleBase" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1073939457" />
      <Field Name="SampleCounter" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4260864" />
      <Field Name="SampleFraction" Type="System.Diagnostics.PerformanceData.CounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="549585920" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.Dynamic">
    <Class Name="BinaryOperationBinder" Type="System.Dynamic.BinaryOperationBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder">
      <Property Name="Operation" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="ReturnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Bind" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="FallbackBinaryOperation" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="FallbackBinaryOperation" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="errorSuggestion" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="BindingRestrictions" Type="System.Dynamic.BindingRestrictions" BaseName="Object" BaseType="System.Object">
      <Field Name="Empty" Type="System.Dynamic.BindingRestrictions" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Method Name="Combine" Type="System.Dynamic.BindingRestrictions" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="contributingObjects" Type="System.Collections.Generic.IList`1&lt;System.Dynamic.DynamicMetaObject&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="GetExpressionRestriction" Type="System.Dynamic.BindingRestrictions" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetInstanceRestriction" Type="System.Dynamic.BindingRestrictions" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="instance" Type="System.Object" />
      </Method>
      <Method Name="GetTypeRestriction" Type="System.Dynamic.BindingRestrictions" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Merge" Type="System.Dynamic.BindingRestrictions" BaseName="Object" BaseType="System.Object">
        <Parameter Name="restrictions" Type="System.Dynamic.BindingRestrictions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ToExpression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="CallInfo" Type="System.Dynamic.CallInfo" BaseName="Object" BaseType="System.Object">
      <Property Name="ArgumentCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ArgumentNames" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.String&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Constructor>
        <Parameter Name="argCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="argNames" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
      </Constructor>
      <Constructor>
        <Parameter Name="argCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="argNames" Type="System.Collections.Generic.IEnumerable`1&lt;System.String&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="ConvertBinder" Type="System.Dynamic.ConvertBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder">
      <Property Name="Explicit" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ReturnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Bind" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="FallbackConvert" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="FallbackConvert" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="errorSuggestion" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="CreateInstanceBinder" Type="System.Dynamic.CreateInstanceBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder">
      <Property Name="CallInfo" Type="System.Dynamic.CallInfo" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ReturnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Bind" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="FallbackCreateInstance" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="FallbackCreateInstance" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
        <Parameter Name="errorSuggestion" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="DeleteIndexBinder" Type="System.Dynamic.DeleteIndexBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder">
      <Property Name="CallInfo" Type="System.Dynamic.CallInfo" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ReturnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Bind" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="FallbackDeleteIndex" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="indexes" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="FallbackDeleteIndex" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="indexes" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
        <Parameter Name="errorSuggestion" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="DeleteMemberBinder" Type="System.Dynamic.DeleteMemberBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder">
      <Property Name="IgnoreCase" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ReturnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Bind" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="FallbackDeleteMember" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="FallbackDeleteMember" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="errorSuggestion" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="DynamicMetaObject" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
      <Field Name="EmptyMetaObjects" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" IsReadable="True" IsStatic="True" />
      <Property Name="Expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="HasValue" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="LimitType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="Restrictions" Type="System.Dynamic.BindingRestrictions" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="RuntimeType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="Value" Type="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="restrictions" Type="System.Dynamic.BindingRestrictions" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="restrictions" Type="System.Dynamic.BindingRestrictions" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Constructor>
      <Method Name="BindBinaryOperation" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="binder" Type="System.Dynamic.BinaryOperationBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="arg" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="BindConvert" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="binder" Type="System.Dynamic.ConvertBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
      </Method>
      <Method Name="BindCreateInstance" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="binder" Type="System.Dynamic.CreateInstanceBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="BindDeleteIndex" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="binder" Type="System.Dynamic.DeleteIndexBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="indexes" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="BindDeleteMember" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="binder" Type="System.Dynamic.DeleteMemberBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
      </Method>
      <Method Name="BindGetIndex" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="binder" Type="System.Dynamic.GetIndexBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="indexes" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="BindGetMember" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="binder" Type="System.Dynamic.GetMemberBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
      </Method>
      <Method Name="BindInvoke" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="binder" Type="System.Dynamic.InvokeBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="BindInvokeMember" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="binder" Type="System.Dynamic.InvokeMemberBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="BindSetIndex" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="binder" Type="System.Dynamic.SetIndexBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="indexes" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
        <Parameter Name="value" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="BindSetMember" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="binder" Type="System.Dynamic.SetMemberBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="value" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="BindUnaryOperation" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="binder" Type="System.Dynamic.UnaryOperationBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
      </Method>
      <Method Name="Create" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetDynamicMemberNames" Type="System.Collections.Generic.IEnumerable`1&lt;System.String&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="DynamicMetaObjectBinder" Type="System.Dynamic.DynamicMetaObjectBinder" BaseName="CallSiteBinder" BaseType="System.Runtime.CompilerServices.CallSiteBinder">
      <Property Name="ReturnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Bind" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object">
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
        <Parameter Name="parameters" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ParameterExpression&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="returnLabel" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Bind" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="Defer" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="Defer" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="GetUpdateExpression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Class>
    <Class Name="DynamicObject" Type="System.Dynamic.DynamicObject" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Dynamic.IDynamicMetaObjectProvider" />
      <Method Name="GetDynamicMemberNames" Type="System.Collections.Generic.IEnumerable`1&lt;System.String&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetMetaObject" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="parameter" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="TryBinaryOperation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="binder" Type="System.Dynamic.BinaryOperationBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="result" Type="System.Object&amp;" IsByRef="True" ElementType="System.Object" />
      </Method>
      <Method Name="TryConvert" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="binder" Type="System.Dynamic.ConvertBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="result" Type="System.Object&amp;" IsByRef="True" ElementType="System.Object" />
      </Method>
      <Method Name="TryCreateInstance" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="binder" Type="System.Dynamic.CreateInstanceBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
        <Parameter Name="result" Type="System.Object&amp;" IsByRef="True" ElementType="System.Object" />
      </Method>
      <Method Name="TryDeleteIndex" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="binder" Type="System.Dynamic.DeleteIndexBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="indexes" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="TryDeleteMember" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="binder" Type="System.Dynamic.DeleteMemberBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
      </Method>
      <Method Name="TryGetIndex" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="binder" Type="System.Dynamic.GetIndexBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="indexes" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
        <Parameter Name="result" Type="System.Object&amp;" IsByRef="True" ElementType="System.Object" />
      </Method>
      <Method Name="TryGetMember" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="binder" Type="System.Dynamic.GetMemberBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="result" Type="System.Object&amp;" IsByRef="True" ElementType="System.Object" />
      </Method>
      <Method Name="TryInvoke" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="binder" Type="System.Dynamic.InvokeBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
        <Parameter Name="result" Type="System.Object&amp;" IsByRef="True" ElementType="System.Object" />
      </Method>
      <Method Name="TryInvokeMember" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="binder" Type="System.Dynamic.InvokeMemberBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
        <Parameter Name="result" Type="System.Object&amp;" IsByRef="True" ElementType="System.Object" />
      </Method>
      <Method Name="TrySetIndex" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="binder" Type="System.Dynamic.SetIndexBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="indexes" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="TrySetMember" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="binder" Type="System.Dynamic.SetMemberBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="TryUnaryOperation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="binder" Type="System.Dynamic.UnaryOperationBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder" />
        <Parameter Name="result" Type="System.Object&amp;" IsByRef="True" ElementType="System.Object" />
      </Method>
    </Class>
    <Class Name="ExpandoObject" Type="System.Dynamic.ExpandoObject" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Dynamic.IDynamicMetaObjectProvider" />
      <ImplementedInterface Type="System.Collections.Generic.IDictionary`2&lt;System.String, System.Object&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.String, System.Object&gt;&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.String, System.Object&gt;&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.ComponentModel.INotifyPropertyChanged" />
    </Class>
    <Class Name="GetIndexBinder" Type="System.Dynamic.GetIndexBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder">
      <Property Name="CallInfo" Type="System.Dynamic.CallInfo" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ReturnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Bind" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="FallbackGetIndex" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="indexes" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="FallbackGetIndex" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="indexes" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
        <Parameter Name="errorSuggestion" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="GetMemberBinder" Type="System.Dynamic.GetMemberBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder">
      <Property Name="IgnoreCase" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ReturnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Bind" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="FallbackGetMember" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="FallbackGetMember" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="errorSuggestion" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Interface Name="IDynamicMetaObjectProvider" Type="System.Dynamic.IDynamicMetaObjectProvider" IsInterface="True">
      <Method Name="GetMetaObject" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="parameter" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Interface>
    <Interface Name="IInvokeOnGetBinder" Type="System.Dynamic.IInvokeOnGetBinder" IsInterface="True">
      <Property Name="InvokeOnGet" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Interface>
    <Class Name="InvokeBinder" Type="System.Dynamic.InvokeBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder">
      <Property Name="CallInfo" Type="System.Dynamic.CallInfo" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ReturnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Bind" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="FallbackInvoke" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="FallbackInvoke" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
        <Parameter Name="errorSuggestion" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="InvokeMemberBinder" Type="System.Dynamic.InvokeMemberBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder">
      <Property Name="CallInfo" Type="System.Dynamic.CallInfo" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="IgnoreCase" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ReturnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Bind" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="FallbackInvoke" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
        <Parameter Name="errorSuggestion" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="FallbackInvokeMember" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="FallbackInvokeMember" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
        <Parameter Name="errorSuggestion" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="SetIndexBinder" Type="System.Dynamic.SetIndexBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder">
      <Property Name="CallInfo" Type="System.Dynamic.CallInfo" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ReturnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Bind" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="FallbackSetIndex" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="indexes" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
        <Parameter Name="value" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="FallbackSetIndex" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="indexes" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
        <Parameter Name="value" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="errorSuggestion" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="SetMemberBinder" Type="System.Dynamic.SetMemberBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder">
      <Property Name="IgnoreCase" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ReturnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Bind" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="FallbackSetMember" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="FallbackSetMember" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="errorSuggestion" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="UnaryOperationBinder" Type="System.Dynamic.UnaryOperationBinder" BaseName="DynamicMetaObjectBinder" BaseType="System.Dynamic.DynamicMetaObjectBinder">
      <Property Name="Operation" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="ReturnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Bind" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Dynamic.DynamicMetaObject" />
      </Method>
      <Method Name="FallbackUnaryOperation" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="FallbackUnaryOperation" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object">
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="errorSuggestion" Type="System.Dynamic.DynamicMetaObject" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.IO">
    <Enumeration Name="HandleInheritability" Type="System.IO.HandleInheritability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Inheritable" Type="System.IO.HandleInheritability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="None" Type="System.IO.HandleInheritability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.IO.MemoryMappedFiles">
    <Class Name="MemoryMappedFile" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="SafeMemoryMappedFileHandle" Type="Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" IsReadable="True" />
      <Method Name="CreateFromFile" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateFromFile" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="mode" Type="System.IO.FileMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="CreateFromFile" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="mode" Type="System.IO.FileMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="mapName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateFromFile" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="mode" Type="System.IO.FileMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="mapName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="capacity" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CreateFromFile" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="mode" Type="System.IO.FileMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="mapName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="capacity" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="CreateFromFile" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="fileStream" Type="System.IO.FileStream" BaseName="Stream" BaseType="System.IO.Stream" />
        <Parameter Name="mapName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="capacity" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="leaveOpen" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CreateFromFile" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="fileStream" Type="System.IO.FileStream" BaseName="Stream" BaseType="System.IO.Stream" />
        <Parameter Name="mapName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="capacity" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" BaseName="ObjectSecurity`1&lt;MemoryMappedFileRights&gt;" BaseType="System.Security.AccessControl.ObjectSecurity`1&lt;System.IO.MemoryMappedFiles.MemoryMappedFileRights&gt;" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="leaveOpen" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CreateNew" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="mapName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="capacity" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CreateNew" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="mapName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="capacity" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="CreateNew" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="mapName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="capacity" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="CreateNew" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="mapName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="capacity" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" BaseName="ObjectSecurity`1&lt;MemoryMappedFileRights&gt;" BaseType="System.Security.AccessControl.ObjectSecurity`1&lt;System.IO.MemoryMappedFiles.MemoryMappedFileRights&gt;" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="CreateOrOpen" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="mapName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="capacity" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CreateOrOpen" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="mapName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="capacity" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="CreateOrOpen" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="mapName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="capacity" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="CreateOrOpen" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="mapName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="capacity" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" BaseName="ObjectSecurity`1&lt;MemoryMappedFileRights&gt;" BaseType="System.Security.AccessControl.ObjectSecurity`1&lt;System.IO.MemoryMappedFiles.MemoryMappedFileRights&gt;" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="CreateViewAccessor" Type="System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" BaseName="UnmanagedMemoryAccessor" BaseType="System.IO.UnmanagedMemoryAccessor" />
      <Method Name="CreateViewAccessor" Type="System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" BaseName="UnmanagedMemoryAccessor" BaseType="System.IO.UnmanagedMemoryAccessor">
        <Parameter Name="offset" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CreateViewAccessor" Type="System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" BaseName="UnmanagedMemoryAccessor" BaseType="System.IO.UnmanagedMemoryAccessor">
        <Parameter Name="offset" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="CreateViewStream" Type="System.IO.MemoryMappedFiles.MemoryMappedViewStream" BaseName="UnmanagedMemoryStream" BaseType="System.IO.UnmanagedMemoryStream" />
      <Method Name="CreateViewStream" Type="System.IO.MemoryMappedFiles.MemoryMappedViewStream" BaseName="UnmanagedMemoryStream" BaseType="System.IO.UnmanagedMemoryStream">
        <Parameter Name="offset" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CreateViewStream" Type="System.IO.MemoryMappedFiles.MemoryMappedViewStream" BaseName="UnmanagedMemoryStream" BaseType="System.IO.UnmanagedMemoryStream">
        <Parameter Name="offset" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetAccessControl" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" BaseName="ObjectSecurity`1&lt;MemoryMappedFileRights&gt;" BaseType="System.Security.AccessControl.ObjectSecurity`1&lt;System.IO.MemoryMappedFiles.MemoryMappedFileRights&gt;" />
      <Method Name="OpenExisting" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="mapName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OpenExisting" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="mapName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="desiredAccessRights" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="OpenExisting" Type="System.IO.MemoryMappedFiles.MemoryMappedFile" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="mapName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="desiredAccessRights" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="SetAccessControl" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" BaseName="ObjectSecurity`1&lt;MemoryMappedFileRights&gt;" BaseType="System.Security.AccessControl.ObjectSecurity`1&lt;System.IO.MemoryMappedFiles.MemoryMappedFileRights&gt;" />
      </Method>
    </Class>
    <Enumeration Name="MemoryMappedFileAccess" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="CopyOnWrite" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Read" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="ReadExecute" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="ReadWrite" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="ReadWriteExecute" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="Write" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Enumeration Name="MemoryMappedFileOptions" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="DelayAllocatePages" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="67108864" />
      <Field Name="None" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Enumeration Name="MemoryMappedFileRights" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AccessSystemSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16777216" />
      <Field Name="ChangePermissions" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="262144" />
      <Field Name="CopyOnWrite" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Delete" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="65536" />
      <Field Name="Execute" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="FullControl" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="983055" />
      <Field Name="Read" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="ReadExecute" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="12" />
      <Field Name="ReadPermissions" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="131072" />
      <Field Name="ReadWrite" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="ReadWriteExecute" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="14" />
      <Field Name="TakeOwnership" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="524288" />
      <Field Name="Write" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Class Name="MemoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" BaseName="ObjectSecurity`1&lt;MemoryMappedFileRights&gt;" BaseType="System.Security.AccessControl.ObjectSecurity`1&lt;System.IO.MemoryMappedFiles.MemoryMappedFileRights&gt;" />
    <Class Name="MemoryMappedViewAccessor" Type="System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" BaseName="UnmanagedMemoryAccessor" BaseType="System.IO.UnmanagedMemoryAccessor">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="PointerOffset" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SafeMemoryMappedViewHandle" Type="Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle" BaseName="SafeBuffer" BaseType="System.Runtime.InteropServices.SafeBuffer" IsReadable="True" />
      <Method Name="Flush" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="MemoryMappedViewStream" Type="System.IO.MemoryMappedFiles.MemoryMappedViewStream" BaseName="UnmanagedMemoryStream" BaseType="System.IO.UnmanagedMemoryStream">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="PointerOffset" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SafeMemoryMappedViewHandle" Type="Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle" BaseName="SafeBuffer" BaseType="System.Runtime.InteropServices.SafeBuffer" IsReadable="True" />
      <Method Name="Flush" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="SetLength" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.IO.Pipes">
    <Class Name="AnonymousPipeClientStream" Type="System.IO.Pipes.AnonymousPipeClientStream" BaseName="PipeStream" BaseType="System.IO.Pipes.PipeStream">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="ReadMode" Type="System.IO.Pipes.PipeTransmissionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsWritable="True" />
      <Property Name="TransmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="pipeHandleAsString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="pipeHandleAsString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="safePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
      </Constructor>
    </Class>
    <Class Name="AnonymousPipeServerStream" Type="System.IO.Pipes.AnonymousPipeServerStream" BaseName="PipeStream" BaseType="System.IO.Pipes.PipeStream">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="ClientSafePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" IsReadable="True" />
      <Property Name="ReadMode" Type="System.IO.Pipes.PipeTransmissionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsWritable="True" />
      <Property Name="TransmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="bufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="bufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" BaseName="NativeObjectSecurity" BaseType="System.Security.AccessControl.NativeObjectSecurity" />
      </Constructor>
      <Constructor>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="serverSafePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
        <Parameter Name="clientSafePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
      </Constructor>
      <Method Name="DisposeLocalCopyOfClientHandle" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetClientHandleAsString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="NamedPipeClientStream" Type="System.IO.Pipes.NamedPipeClientStream" BaseName="PipeStream" BaseType="System.IO.Pipes.PipeStream">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="NumberOfServerInstances" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="pipeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="serverName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pipeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="serverName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pipeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="serverName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pipeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="serverName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pipeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="impersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="serverName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pipeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="impersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="serverName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pipeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="desiredAccessRights" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="impersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="isAsync" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="isConnected" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="safePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
      </Constructor>
      <Method Name="Connect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Connect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ConnectAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object" />
      <Method Name="ConnectAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ConnectAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ConnectAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="NamedPipeServerStream" Type="System.IO.Pipes.NamedPipeServerStream" BaseName="PipeStream" BaseType="System.IO.Pipes.PipeStream">
      <ImplementedInterface Type="System.IDisposable" />
      <Field Name="MaxAllowedServerInstances" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
      <Constructor>
        <Parameter Name="pipeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="pipeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="pipeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="pipeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="pipeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="pipeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="inBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="outBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="pipeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="inBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="outBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" BaseName="NativeObjectSecurity" BaseType="System.Security.AccessControl.NativeObjectSecurity" />
      </Constructor>
      <Constructor>
        <Parameter Name="pipeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="inBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="outBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" BaseName="NativeObjectSecurity" BaseType="System.Security.AccessControl.NativeObjectSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="pipeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="inBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="outBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" BaseName="NativeObjectSecurity" BaseType="System.Security.AccessControl.NativeObjectSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="additionalAccessRights" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="isAsync" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="isConnected" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="safePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
      </Constructor>
      <Method Name="BeginWaitForConnection" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="Disconnect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="EndWaitForConnection" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="GetImpersonationUserName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="RunAsClient" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="impersonationWorker" Type="System.IO.Pipes.PipeStreamImpersonationWorker" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
      </Method>
      <Method Name="WaitForConnection" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="WaitForConnectionAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WaitForConnectionAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Enumeration Name="PipeAccessRights" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AccessSystemSecurity" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16777216" />
      <Field Name="ChangePermissions" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="262144" />
      <Field Name="CreateNewInstance" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Delete" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="65536" />
      <Field Name="FullControl" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2032031" />
      <Field Name="Read" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="131209" />
      <Field Name="ReadAttributes" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="128" />
      <Field Name="ReadData" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="ReadExtendedAttributes" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="ReadPermissions" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="131072" />
      <Field Name="ReadWrite" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="131483" />
      <Field Name="Synchronize" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1048576" />
      <Field Name="TakeOwnership" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="524288" />
      <Field Name="Write" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="274" />
      <Field Name="WriteAttributes" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="256" />
      <Field Name="WriteData" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="WriteExtendedAttributes" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
    </Enumeration>
    <Class Name="PipeAccessRule" Type="System.IO.Pipes.PipeAccessRule" BaseName="AccessRule" BaseType="System.Security.AccessControl.AccessRule">
      <Property Name="PipeAccessRights" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="identity" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="rights" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="rights" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
    </Class>
    <Class Name="PipeAuditRule" Type="System.IO.Pipes.PipeAuditRule" BaseName="AuditRule" BaseType="System.Security.AccessControl.AuditRule">
      <Property Name="PipeAccessRights" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="rights" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="identity" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="rights" Type="System.IO.Pipes.PipeAccessRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
    </Class>
    <Enumeration Name="PipeDirection" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="In" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="InOut" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Out" Type="System.IO.Pipes.PipeDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Enumeration Name="PipeOptions" Type="System.IO.Pipes.PipeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Asynchronous" Type="System.IO.Pipes.PipeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1073741824" />
      <Field Name="None" Type="System.IO.Pipes.PipeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="WriteThrough" Type="System.IO.Pipes.PipeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2147483648" />
    </Enumeration>
    <Class Name="PipeSecurity" Type="System.IO.Pipes.PipeSecurity" BaseName="NativeObjectSecurity" BaseType="System.Security.AccessControl.NativeObjectSecurity">
      <Property Name="AccessRightType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="AccessRuleType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="AuditRuleType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="AccessRuleFactory" Type="System.Security.AccessControl.AccessRule" BaseName="AuthorizationRule" BaseType="System.Security.AccessControl.AuthorizationRule">
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="accessMask" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="isInherited" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="AddAccessRule" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" BaseName="AccessRule" BaseType="System.Security.AccessControl.AccessRule" />
      </Method>
      <Method Name="AddAuditRule" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" BaseName="AuditRule" BaseType="System.Security.AccessControl.AuditRule" />
      </Method>
      <Method Name="AuditRuleFactory" Type="System.Security.AccessControl.AuditRule" BaseName="AuthorizationRule" BaseType="System.Security.AccessControl.AuthorizationRule">
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="accessMask" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="isInherited" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="RemoveAccessRule" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" BaseName="AccessRule" BaseType="System.Security.AccessControl.AccessRule" />
      </Method>
      <Method Name="RemoveAccessRuleSpecific" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" BaseName="AccessRule" BaseType="System.Security.AccessControl.AccessRule" />
      </Method>
      <Method Name="RemoveAuditRule" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" BaseName="AuditRule" BaseType="System.Security.AccessControl.AuditRule" />
      </Method>
      <Method Name="RemoveAuditRuleAll" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" BaseName="AuditRule" BaseType="System.Security.AccessControl.AuditRule" />
      </Method>
      <Method Name="RemoveAuditRuleSpecific" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" BaseName="AuditRule" BaseType="System.Security.AccessControl.AuditRule" />
      </Method>
      <Method Name="ResetAccessRule" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" BaseName="AccessRule" BaseType="System.Security.AccessControl.AccessRule" />
      </Method>
      <Method Name="SetAccessRule" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" BaseName="AccessRule" BaseType="System.Security.AccessControl.AccessRule" />
      </Method>
      <Method Name="SetAuditRule" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" BaseName="AuditRule" BaseType="System.Security.AccessControl.AuditRule" />
      </Method>
    </Class>
    <Class Name="PipeStream" Type="System.IO.Pipes.PipeStream" BaseName="Stream" BaseType="System.IO.Stream">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="CanRead" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CanSeek" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CanWrite" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="InBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsAsync" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsConnected" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IsMessageComplete" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Length" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="OutBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Position" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ReadMode" Type="System.IO.Pipes.PipeTransmissionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="SafePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" IsReadable="True" />
      <Property Name="TransmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Method Name="BeginRead" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginWrite" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="EndRead" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndWrite" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Flush" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetAccessControl" Type="System.IO.Pipes.PipeSecurity" BaseName="NativeObjectSecurity" BaseType="System.Security.AccessControl.NativeObjectSecurity" />
      <Method Name="Read" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ReadByte" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Seek" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="offset" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="SetAccessControl" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" BaseName="NativeObjectSecurity" BaseType="System.Security.AccessControl.NativeObjectSecurity" />
      </Method>
      <Method Name="SetLength" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WaitForPipeDrain" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WriteByte" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="PipeStreamImpersonationWorker" Type="System.IO.Pipes.PipeStreamImpersonationWorker" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Enumeration Name="PipeTransmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Byte" Type="System.IO.Pipes.PipeTransmissionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Message" Type="System.IO.Pipes.PipeTransmissionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.Linq">
    <Class Name="Enumerable" Type="System.Linq.Enumerable" BaseName="Object" BaseType="System.Object">
      <Method Name="Aggregate" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="func" Type="System.Func`3&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TSource, System.Linq.Enumerable+TSource&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Aggregate" Type="System.Linq.Enumerable+TAccumulate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TAccumulate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="seed" Type="System.Linq.Enumerable+TAccumulate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="func" Type="System.Func`3&lt;System.Linq.Enumerable+TAccumulate, System.Linq.Enumerable+TSource, System.Linq.Enumerable+TAccumulate&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Aggregate" Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TAccumulate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="seed" Type="System.Linq.Enumerable+TAccumulate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="func" Type="System.Func`3&lt;System.Linq.Enumerable+TAccumulate, System.Linq.Enumerable+TSource, System.Linq.Enumerable+TAccumulate&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`2&lt;System.Linq.Enumerable+TAccumulate, System.Linq.Enumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="All" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Any" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Any" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Append" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="element" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
      </Method>
      <Method Name="AsEnumerable" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Int64&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Single&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Double&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Decimal&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Int32&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Int64&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Single&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Decimal&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Int32&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Int32&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Int64&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Int64&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Single&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Single&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Double&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Double&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Decimal&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Decimal&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Cast" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.IEnumerable" IsInterface="True" />
      </Method>
      <Method Name="Concat" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="value" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="value" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="DefaultIfEmpty" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="DefaultIfEmpty" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="defaultValue" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
      </Method>
      <Method Name="Distinct" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Distinct" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ElementAt" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ElementAtOrDefault" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Empty" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
      </Method>
      <Method Name="Except" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Except" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="First" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="First" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="FirstOrDefault" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="FirstOrDefault" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.IGrouping`2&lt;System.Linq.Enumerable+TKey, System.Linq.Enumerable+TSource&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.IGrouping`2&lt;System.Linq.Enumerable+TKey, System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.IGrouping`2&lt;System.Linq.Enumerable+TKey, System.Linq.Enumerable+TSource&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.IGrouping`2&lt;System.Linq.Enumerable+TKey, System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Enumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.IGrouping`2&lt;System.Linq.Enumerable+TKey, System.Linq.Enumerable+TElement&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.IGrouping`2&lt;System.Linq.Enumerable+TKey, System.Linq.Enumerable+TElement&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TElement&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.IGrouping`2&lt;System.Linq.Enumerable+TKey, System.Linq.Enumerable+TElement&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.IGrouping`2&lt;System.Linq.Enumerable+TKey, System.Linq.Enumerable+TElement&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TElement&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Enumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.Enumerable+TKey, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;, System.Linq.Enumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TElement&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.Enumerable+TKey, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TElement&gt;, System.Linq.Enumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.Enumerable+TKey, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;, System.Linq.Enumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Enumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TElement&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.Enumerable+TKey, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TElement&gt;, System.Linq.Enumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Enumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupJoin" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TOuter" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TInner" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="outer" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TOuter&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TInner&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="outerKeySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TOuter, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="innerKeySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TInner, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.Enumerable+TOuter, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TInner&gt;, System.Linq.Enumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupJoin" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TOuter" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TInner" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="outer" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TOuter&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TInner&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="outerKeySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TOuter, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="innerKeySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TInner, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.Enumerable+TOuter, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TInner&gt;, System.Linq.Enumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Enumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Intersect" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Intersect" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Join" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TOuter" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TInner" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="outer" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TOuter&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TInner&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="outerKeySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TOuter, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="innerKeySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TInner, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.Enumerable+TOuter, System.Linq.Enumerable+TInner, System.Linq.Enumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Join" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TOuter" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TInner" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="outer" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TOuter&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TInner&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="outerKeySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TOuter, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="innerKeySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TInner, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.Enumerable+TOuter, System.Linq.Enumerable+TInner, System.Linq.Enumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Enumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Last" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Last" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="LastOrDefault" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="LastOrDefault" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="LongCount" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="LongCount" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Int64&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Double&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Single&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Decimal&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Int32&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Int64&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Single&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Decimal&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Int32&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Int32&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Int64&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Int64&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Single&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Single&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Double&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Double&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Decimal&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Decimal&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Int64&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Single&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Double&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Decimal&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Int32&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Int64&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Single&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Decimal&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Int32&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Int32&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Int64&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Int64&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Single&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Single&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Double&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Double&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Decimal&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Decimal&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="OfType" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.IEnumerable" IsInterface="True" />
      </Method>
      <Method Name="OrderBy" Type="System.Linq.IOrderedEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="OrderBy" Type="System.Linq.IOrderedEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Linq.Enumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="OrderByDescending" Type="System.Linq.IOrderedEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="OrderByDescending" Type="System.Linq.IOrderedEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Linq.Enumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Prepend" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="element" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
      </Method>
      <Method Name="Range" Type="System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="start" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Repeat" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="element" Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Reverse" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Select" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Select" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`3&lt;System.Linq.Enumerable+TSource, System.Int32, System.Linq.Enumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SelectMany" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SelectMany" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`3&lt;System.Linq.Enumerable+TSource, System.Int32, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SelectMany" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TCollection" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="collectionSelector" Type="System.Func`3&lt;System.Linq.Enumerable+TSource, System.Int32, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TCollection&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TCollection, System.Linq.Enumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SelectMany" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TCollection" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="collectionSelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TCollection&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TCollection, System.Linq.Enumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SequenceEqual" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SequenceEqual" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Single" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Single" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SingleOrDefault" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SingleOrDefault" Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Skip" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SkipWhile" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SkipWhile" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`3&lt;System.Linq.Enumerable+TSource, System.Int32, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Int64&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Single&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Double&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Decimal&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Int32&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Int64&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Single&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.Decimal&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Int32&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Int32&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Int64&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Int64&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Single&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Single&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Double&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Double&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Decimal&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Nullable`1&lt;System.Decimal&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Take" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TakeWhile" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="TakeWhile" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`3&lt;System.Linq.Enumerable+TSource, System.Int32, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ThenBy" Type="System.Linq.IOrderedEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IOrderedEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ThenBy" Type="System.Linq.IOrderedEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IOrderedEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Linq.Enumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ThenByDescending" Type="System.Linq.IOrderedEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IOrderedEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ThenByDescending" Type="System.Linq.IOrderedEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IOrderedEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Linq.Enumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToArray" Type="TSource[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Enumerable+TSource" IsGenericParameterElement="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToDictionary" Type="System.Collections.Generic.Dictionary`2&lt;System.Linq.Enumerable+TKey, System.Linq.Enumerable+TSource&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToDictionary" Type="System.Collections.Generic.Dictionary`2&lt;System.Linq.Enumerable+TKey, System.Linq.Enumerable+TSource&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Enumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToDictionary" Type="System.Collections.Generic.Dictionary`2&lt;System.Linq.Enumerable+TKey, System.Linq.Enumerable+TElement&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericTypeArgument Type="System.Linq.Enumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TElement&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToDictionary" Type="System.Collections.Generic.Dictionary`2&lt;System.Linq.Enumerable+TKey, System.Linq.Enumerable+TElement&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericTypeArgument Type="System.Linq.Enumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TElement&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Enumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToHashSet" Type="System.Collections.Generic.HashSet`1&lt;System.Linq.Enumerable+TSource&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToHashSet" Type="System.Collections.Generic.HashSet`1&lt;System.Linq.Enumerable+TSource&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToList" Type="System.Collections.Generic.List`1&lt;System.Linq.Enumerable+TSource&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToLookup" Type="System.Linq.ILookup`2&lt;System.Linq.Enumerable+TKey, System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToLookup" Type="System.Linq.ILookup`2&lt;System.Linq.Enumerable+TKey, System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Enumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToLookup" Type="System.Linq.ILookup`2&lt;System.Linq.Enumerable+TKey, System.Linq.Enumerable+TElement&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericTypeArgument Type="System.Linq.Enumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TElement&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToLookup" Type="System.Linq.ILookup`2&lt;System.Linq.Enumerable+TKey, System.Linq.Enumerable+TElement&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericTypeArgument Type="System.Linq.Enumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Linq.Enumerable+TElement&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Enumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Union" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Union" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Where" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.Enumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Where" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`3&lt;System.Linq.Enumerable+TSource, System.Int32, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Zip" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TFirst" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TSecond" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Enumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TFirst&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Enumerable+TSecond&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.Enumerable+TFirst, System.Linq.Enumerable+TSecond, System.Linq.Enumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
    </Class>
    <Class Name="EnumerableExecutor" Type="System.Linq.EnumerableExecutor" BaseName="Object" BaseType="System.Object" />
    <Class Name="EnumerableExecutor`1&lt;T&gt;" Type="System.Linq.EnumerableExecutor`1&lt;System.Linq.EnumerableExecutor`1+T&gt;" BaseName="EnumerableExecutor" BaseType="System.Linq.EnumerableExecutor" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Linq.EnumerableExecutor`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <Constructor>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="EnumerableQuery" Type="System.Linq.EnumerableQuery" BaseName="Object" BaseType="System.Object" />
    <Class Name="EnumerableQuery`1&lt;T&gt;" Type="System.Linq.EnumerableQuery`1&lt;System.Linq.EnumerableQuery`1+T&gt;" BaseName="EnumerableQuery" BaseType="System.Linq.EnumerableQuery" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Linq.EnumerableQuery`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Linq.IOrderedQueryable`1&lt;System.Linq.EnumerableQuery`1+T&gt;" />
      <ImplementedInterface Type="System.Linq.IQueryable`1&lt;System.Linq.EnumerableQuery`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.EnumerableQuery`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Linq.IQueryable" />
      <ImplementedInterface Type="System.Linq.IOrderedQueryable" />
      <ImplementedInterface Type="System.Linq.IQueryProvider" />
      <Constructor>
        <Parameter Name="enumerable" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.EnumerableQuery`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" ContainsGenericMethodParameters="True" />
    </Class>
    <Interface Name="IGrouping`2&lt;TKey, TElement&gt;" Type="System.Linq.IGrouping`2&lt;System.Linq.IGrouping`2+TKey, System.Linq.IGrouping`2+TElement&gt;" IsInterface="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Linq.IGrouping`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Linq.IGrouping`2+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.IGrouping`2+TElement&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Key" Type="System.Linq.IGrouping`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" IsReadable="True" />
    </Interface>
    <Interface Name="ILookup`2&lt;TKey, TElement&gt;" Type="System.Linq.ILookup`2&lt;System.Linq.ILookup`2+TKey, System.Linq.ILookup`2+TElement&gt;" IsInterface="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Linq.ILookup`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Linq.ILookup`2+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.IGrouping`2&lt;System.Linq.ILookup`2+TKey, System.Linq.ILookup`2+TElement&gt;&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ILookup`2+TElement&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ILookup`2+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="key" Type="System.Linq.ILookup`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="key" Type="System.Linq.ILookup`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
    </Interface>
    <Interface Name="IOrderedEnumerable`1&lt;TElement&gt;" Type="System.Linq.IOrderedEnumerable`1&lt;System.Linq.IOrderedEnumerable`1+TElement&gt;" IsInterface="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Linq.IOrderedEnumerable`1+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.IOrderedEnumerable`1+TElement&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="CreateOrderedEnumerable" Type="System.Linq.IOrderedEnumerable`1&lt;System.Linq.IOrderedEnumerable`1+TElement&gt;" IsInterface="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeParameter Type="System.Linq.IOrderedEnumerable`1+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.IOrderedEnumerable`1+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.IOrderedEnumerable`1+TElement, System.Linq.IOrderedEnumerable`1+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Linq.IOrderedEnumerable`1+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="descending" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Interface>
    <Interface Name="IOrderedQueryable" Type="System.Linq.IOrderedQueryable" IsInterface="True">
      <ImplementedInterface Type="System.Linq.IQueryable" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
    </Interface>
    <Interface Name="IOrderedQueryable`1&lt;T&gt;" Type="System.Linq.IOrderedQueryable`1&lt;System.Linq.IOrderedQueryable`1+T&gt;" IsInterface="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Linq.IOrderedQueryable`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Linq.IQueryable`1&lt;System.Linq.IOrderedQueryable`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.IOrderedQueryable`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Linq.IQueryable" />
      <ImplementedInterface Type="System.Linq.IOrderedQueryable" />
    </Interface>
    <Interface Name="IQueryable" Type="System.Linq.IQueryable" IsInterface="True">
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="ElementType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="Expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Provider" Type="System.Linq.IQueryProvider" IsInterface="True" IsReadable="True" />
    </Interface>
    <Interface Name="IQueryable`1&lt;T&gt;" Type="System.Linq.IQueryable`1&lt;System.Linq.IQueryable`1+T&gt;" IsInterface="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Linq.IQueryable`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.IQueryable`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Linq.IQueryable" />
    </Interface>
    <Interface Name="IQueryProvider" Type="System.Linq.IQueryProvider" IsInterface="True">
      <Method Name="CreateQuery" Type="System.Linq.IQueryable" IsInterface="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateQuery" Type="System.Linq.IQueryable`1&lt;System.Linq.IQueryProvider+TElement&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.IQueryProvider+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.IQueryProvider+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Execute" Type="System.Object">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Execute" Type="System.Linq.IQueryProvider+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.IQueryProvider+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Interface>
    <Class Name="Lookup`2&lt;TKey, TElement&gt;" Type="System.Linq.Lookup`2&lt;System.Linq.Lookup`2+TKey, System.Linq.Lookup`2+TElement&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Linq.Lookup`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Linq.Lookup`2+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.IGrouping`2&lt;System.Linq.Lookup`2+TKey, System.Linq.Lookup`2+TElement&gt;&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Linq.ILookup`2&lt;System.Linq.Lookup`2+TKey, System.Linq.Lookup`2+TElement&gt;" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Lookup`2+TElement&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Lookup`2+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
        <Parameter Name="key" Type="System.Linq.Lookup`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="ApplyResultSelector" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Lookup`2+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Lookup`2+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Lookup`2+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.Lookup`2+TKey, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Lookup`2+TElement&gt;, System.Linq.Lookup`2+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="key" Type="System.Linq.Lookup`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Generic.IEnumerator`1&lt;System.Linq.IGrouping`2&lt;System.Linq.Lookup`2+TKey, System.Linq.Lookup`2+TElement&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.IGrouping`2&lt;System.Linq.Lookup`2+TKey, System.Linq.Lookup`2+TElement&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
    </Class>
    <Class Name="OrderedParallelQuery`1&lt;TSource&gt;" Type="System.Linq.OrderedParallelQuery`1&lt;System.Linq.OrderedParallelQuery`1+TSource&gt;" BaseName="ParallelQuery`1&lt;TSource&gt;" BaseType="System.Linq.ParallelQuery`1&lt;System.Linq.OrderedParallelQuery`1+TSource&gt;" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Linq.OrderedParallelQuery`1+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.OrderedParallelQuery`1+TSource&gt;" />
      <Method Name="GetEnumerator" Type="System.Collections.Generic.IEnumerator`1&lt;System.Linq.OrderedParallelQuery`1+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.OrderedParallelQuery`1+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
    </Class>
    <Class Name="ParallelEnumerable" Type="System.Linq.ParallelEnumerable" BaseName="Object" BaseType="System.Object">
      <Method Name="Aggregate" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="func" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TSource&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Aggregate" Type="System.Linq.ParallelEnumerable+TAccumulate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TAccumulate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="seed" Type="System.Linq.ParallelEnumerable+TAccumulate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="func" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TAccumulate, System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TAccumulate&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Aggregate" Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TAccumulate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="seed" Type="System.Linq.ParallelEnumerable+TAccumulate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="func" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TAccumulate, System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TAccumulate&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TAccumulate, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Aggregate" Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TAccumulate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="seed" Type="System.Linq.ParallelEnumerable+TAccumulate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="updateAccumulatorFunc" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TAccumulate, System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TAccumulate&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="combineAccumulatorsFunc" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TAccumulate, System.Linq.ParallelEnumerable+TAccumulate, System.Linq.ParallelEnumerable+TAccumulate&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TAccumulate, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Aggregate" Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TAccumulate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="seedFactory" Type="System.Func`1&lt;System.Linq.ParallelEnumerable+TAccumulate&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="updateAccumulatorFunc" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TAccumulate, System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TAccumulate&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="combineAccumulatorsFunc" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TAccumulate, System.Linq.ParallelEnumerable+TAccumulate, System.Linq.ParallelEnumerable+TAccumulate&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TAccumulate, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="All" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Any" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Any" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="AsEnumerable" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="AsOrdered" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="AsOrdered" Type="System.Linq.ParallelQuery" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AsParallel" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="AsParallel" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="AsParallel" Type="System.Linq.ParallelQuery" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.IEnumerable" IsInterface="True" />
      </Method>
      <Method Name="AsSequential" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="AsUnordered" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Int32&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Int32&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Int64&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Int64&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Single&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Single&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Double&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Decimal&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Decimal&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Int32&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Int32&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Int64&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Int64&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Single&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Single&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Double&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Double&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Decimal&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Decimal&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Cast" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Concat" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Concat" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="value" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="value" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="DefaultIfEmpty" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="DefaultIfEmpty" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="defaultValue" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
      </Method>
      <Method Name="Distinct" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Distinct" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ElementAt" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ElementAtOrDefault" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Empty" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
      </Method>
      <Method Name="Except" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Except" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Except" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Except" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="First" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="First" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="FirstOrDefault" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="FirstOrDefault" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ForAll" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="action" Type="System.Action`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Linq.ParallelQuery`1&lt;System.Linq.IGrouping`2&lt;System.Linq.ParallelEnumerable+TKey, System.Linq.ParallelEnumerable+TSource&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.IGrouping`2&lt;System.Linq.ParallelEnumerable+TKey, System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Linq.ParallelQuery`1&lt;System.Linq.IGrouping`2&lt;System.Linq.ParallelEnumerable+TKey, System.Linq.ParallelEnumerable+TSource&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.IGrouping`2&lt;System.Linq.ParallelEnumerable+TKey, System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Linq.ParallelQuery`1&lt;System.Linq.IGrouping`2&lt;System.Linq.ParallelEnumerable+TKey, System.Linq.ParallelEnumerable+TElement&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.IGrouping`2&lt;System.Linq.ParallelEnumerable+TKey, System.Linq.ParallelEnumerable+TElement&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TElement&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Linq.ParallelQuery`1&lt;System.Linq.IGrouping`2&lt;System.Linq.ParallelEnumerable+TKey, System.Linq.ParallelEnumerable+TElement&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.IGrouping`2&lt;System.Linq.ParallelEnumerable+TKey, System.Linq.ParallelEnumerable+TElement&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TElement&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TKey, System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TSource&gt;, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TKey, System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TSource&gt;, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TElement&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TKey, System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TElement&gt;, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TElement&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TKey, System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TElement&gt;, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupJoin" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TOuter" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TInner" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="outer" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TOuter&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="inner" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TInner&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="outerKeySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TOuter, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="innerKeySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TInner, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TOuter, System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TInner&gt;, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupJoin" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TOuter" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TInner" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="outer" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TOuter&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TInner&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="outerKeySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TOuter, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="innerKeySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TInner, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TOuter, System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TInner&gt;, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupJoin" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TOuter" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TInner" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="outer" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TOuter&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="inner" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TInner&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="outerKeySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TOuter, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="innerKeySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TInner, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TOuter, System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TInner&gt;, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupJoin" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TOuter" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TInner" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="outer" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TOuter&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TInner&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="outerKeySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TOuter, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="innerKeySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TInner, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TOuter, System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TInner&gt;, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Intersect" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Intersect" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Intersect" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Intersect" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Join" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TOuter" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TInner" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="outer" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TOuter&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="inner" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TInner&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="outerKeySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TOuter, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="innerKeySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TInner, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TOuter, System.Linq.ParallelEnumerable+TInner, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Join" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TOuter" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TInner" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="outer" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TOuter&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TInner&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="outerKeySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TOuter, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="innerKeySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TInner, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TOuter, System.Linq.ParallelEnumerable+TInner, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Join" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TOuter" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TInner" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="outer" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TOuter&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="inner" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TInner&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="outerKeySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TOuter, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="innerKeySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TInner, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TOuter, System.Linq.ParallelEnumerable+TInner, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Join" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TOuter" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TInner" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="outer" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TOuter&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TInner&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="outerKeySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TOuter, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="innerKeySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TInner, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TOuter, System.Linq.ParallelEnumerable+TInner, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Last" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Last" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="LastOrDefault" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="LastOrDefault" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="LongCount" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="LongCount" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Int32&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Int32&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Int64&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Int64&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Single&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Single&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Double&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Decimal&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Decimal&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Max" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Int32&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Int32&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Int64&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Int64&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Single&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Single&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Double&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Double&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Decimal&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Decimal&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Int32&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Int32&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Int64&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Int64&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Single&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Single&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Double&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Decimal&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Decimal&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Min" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Int32&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Int32&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Int64&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Int64&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Single&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Single&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Double&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Double&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Decimal&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Decimal&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="OfType" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OrderBy" Type="System.Linq.OrderedParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery`1&lt;TSource&gt;" BaseType="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="OrderBy" Type="System.Linq.OrderedParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery`1&lt;TSource&gt;" BaseType="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Linq.ParallelEnumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="OrderByDescending" Type="System.Linq.OrderedParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery`1&lt;TSource&gt;" BaseType="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="OrderByDescending" Type="System.Linq.OrderedParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery`1&lt;TSource&gt;" BaseType="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Linq.ParallelEnumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Range" Type="System.Linq.ParallelQuery`1&lt;System.Int32&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="start" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Repeat" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="element" Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Reverse" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Select" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Select" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TSource, System.Int32, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SelectMany" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TResult&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SelectMany" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TSource, System.Int32, System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TResult&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SelectMany" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TCollection" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="collectionSelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TCollection&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TCollection, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SelectMany" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TCollection" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="collectionSelector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TSource, System.Int32, System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TCollection&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TCollection, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SequenceEqual" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SequenceEqual" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SequenceEqual" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SequenceEqual" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Single" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Single" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SingleOrDefault" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SingleOrDefault" Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Skip" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SkipWhile" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SkipWhile" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TSource, System.Int32, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Int32&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Int32&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Int64&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Int64&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Single&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Single&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Double&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Decimal&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Nullable`1&lt;System.Decimal&gt;&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Int32&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Int32&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Int64&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Int64&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Single&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Single&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Double&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Double&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Decimal&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Nullable`1&lt;System.Decimal&gt;&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Take" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TakeWhile" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="TakeWhile" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TSource, System.Int32, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ThenBy" Type="System.Linq.OrderedParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery`1&lt;TSource&gt;" BaseType="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.OrderedParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery`1&lt;TSource&gt;" BaseType="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ThenBy" Type="System.Linq.OrderedParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery`1&lt;TSource&gt;" BaseType="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.OrderedParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery`1&lt;TSource&gt;" BaseType="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Linq.ParallelEnumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ThenByDescending" Type="System.Linq.OrderedParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery`1&lt;TSource&gt;" BaseType="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.OrderedParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery`1&lt;TSource&gt;" BaseType="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ThenByDescending" Type="System.Linq.OrderedParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery`1&lt;TSource&gt;" BaseType="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.OrderedParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery`1&lt;TSource&gt;" BaseType="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Linq.ParallelEnumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToArray" Type="TSource[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.ParallelEnumerable+TSource" IsGenericParameterElement="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToDictionary" Type="System.Collections.Generic.Dictionary`2&lt;System.Linq.ParallelEnumerable+TKey, System.Linq.ParallelEnumerable+TSource&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToDictionary" Type="System.Collections.Generic.Dictionary`2&lt;System.Linq.ParallelEnumerable+TKey, System.Linq.ParallelEnumerable+TSource&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToDictionary" Type="System.Collections.Generic.Dictionary`2&lt;System.Linq.ParallelEnumerable+TKey, System.Linq.ParallelEnumerable+TElement&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TElement&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToDictionary" Type="System.Collections.Generic.Dictionary`2&lt;System.Linq.ParallelEnumerable+TKey, System.Linq.ParallelEnumerable+TElement&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TElement&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToList" Type="System.Collections.Generic.List`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToLookup" Type="System.Linq.ILookup`2&lt;System.Linq.ParallelEnumerable+TKey, System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToLookup" Type="System.Linq.ILookup`2&lt;System.Linq.ParallelEnumerable+TKey, System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToLookup" Type="System.Linq.ILookup`2&lt;System.Linq.ParallelEnumerable+TKey, System.Linq.ParallelEnumerable+TElement&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TElement&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ToLookup" Type="System.Linq.ILookup`2&lt;System.Linq.ParallelEnumerable+TKey, System.Linq.ParallelEnumerable+TElement&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TKey&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Linq.ParallelEnumerable+TElement&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Union" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Union" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Union" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Union" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Where" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`2&lt;System.Linq.ParallelEnumerable+TSource, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Where" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TSource, System.Int32, System.Boolean&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="WithCancellation" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WithDegreeOfParallelism" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="degreeOfParallelism" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WithExecutionMode" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="executionMode" Type="System.Linq.ParallelExecutionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="WithMergeOptions" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="mergeOptions" Type="System.Linq.ParallelMergeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Zip" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TFirst" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSecond" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TFirst&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TSecond&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TFirst, System.Linq.ParallelEnumerable+TSecond, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Zip" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TResult&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TFirst" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TSecond" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.ParallelEnumerable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="first" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelEnumerable+TFirst&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelEnumerable+TSecond&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Func`3&lt;System.Linq.ParallelEnumerable+TFirst, System.Linq.ParallelEnumerable+TSecond, System.Linq.ParallelEnumerable+TResult&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
    </Class>
    <Enumeration Name="ParallelExecutionMode" Type="System.Linq.ParallelExecutionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Default" Type="System.Linq.ParallelExecutionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="ForceParallelism" Type="System.Linq.ParallelExecutionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Enumeration Name="ParallelMergeOptions" Type="System.Linq.ParallelMergeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AutoBuffered" Type="System.Linq.ParallelMergeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Default" Type="System.Linq.ParallelMergeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="FullyBuffered" Type="System.Linq.ParallelMergeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="NotBuffered" Type="System.Linq.ParallelMergeOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="ParallelQuery" Type="System.Linq.ParallelQuery" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.IEnumerable" />
    </Class>
    <Class Name="ParallelQuery`1&lt;TSource&gt;" Type="System.Linq.ParallelQuery`1&lt;System.Linq.ParallelQuery`1+TSource&gt;" BaseName="ParallelQuery" BaseType="System.Linq.ParallelQuery" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Linq.ParallelQuery`1+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.ParallelQuery`1+TSource&gt;" />
      <Method Name="GetEnumerator" Type="System.Collections.Generic.IEnumerator`1&lt;System.Linq.ParallelQuery`1+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.ParallelQuery`1+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
    </Class>
    <Class Name="Queryable" Type="System.Linq.Queryable" BaseName="Object" BaseType="System.Object">
      <Method Name="Aggregate" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="func" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TSource, System.Linq.Queryable+TSource&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Aggregate" Type="System.Linq.Queryable+TAccumulate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TAccumulate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="seed" Type="System.Linq.Queryable+TAccumulate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="func" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TAccumulate, System.Linq.Queryable+TSource, System.Linq.Queryable+TAccumulate&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Aggregate" Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TAccumulate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="seed" Type="System.Linq.Queryable+TAccumulate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="func" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TAccumulate, System.Linq.Queryable+TSource, System.Linq.Queryable+TAccumulate&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TAccumulate, System.Linq.Queryable+TResult&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="All" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Boolean&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Any" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Any" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Boolean&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="AsQueryable" Type="System.Linq.IQueryable" IsInterface="True" IsStatic="True">
        <Parameter Name="source" Type="System.Collections.IEnumerable" IsInterface="True" />
      </Method>
      <Method Name="AsQueryable" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TElement&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TElement&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Int32&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Nullable`1&lt;System.Int32&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Int64&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Nullable`1&lt;System.Int64&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Single&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Nullable`1&lt;System.Single&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Double&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Decimal&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Nullable`1&lt;System.Decimal&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Average" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Int32&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Nullable`1&lt;System.Int32&gt;&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Single&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Nullable`1&lt;System.Single&gt;&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Int64&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Nullable`1&lt;System.Int64&gt;&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Double&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Nullable`1&lt;System.Double&gt;&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Decimal&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Average" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Nullable`1&lt;System.Decimal&gt;&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Cast" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable" IsInterface="True" />
      </Method>
      <Method Name="Concat" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source1" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="item" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="item" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Boolean&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="DefaultIfEmpty" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="DefaultIfEmpty" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="defaultValue" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
      </Method>
      <Method Name="Distinct" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Distinct" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ElementAt" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ElementAtOrDefault" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Except" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source1" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Except" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source1" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="First" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="First" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Boolean&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="FirstOrDefault" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="FirstOrDefault" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Boolean&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Linq.IQueryable`1&lt;System.Linq.IGrouping`2&lt;System.Linq.Queryable+TKey, System.Linq.Queryable+TSource&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.IGrouping`2&lt;System.Linq.Queryable+TKey, System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Linq.IQueryable`1&lt;System.Linq.IGrouping`2&lt;System.Linq.Queryable+TKey, System.Linq.Queryable+TElement&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.IGrouping`2&lt;System.Linq.Queryable+TKey, System.Linq.Queryable+TElement&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TElement&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Linq.IQueryable`1&lt;System.Linq.IGrouping`2&lt;System.Linq.Queryable+TKey, System.Linq.Queryable+TSource&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.IGrouping`2&lt;System.Linq.Queryable+TKey, System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Queryable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Linq.IQueryable`1&lt;System.Linq.IGrouping`2&lt;System.Linq.Queryable+TKey, System.Linq.Queryable+TElement&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.IGrouping`2&lt;System.Linq.Queryable+TKey, System.Linq.Queryable+TElement&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TElement&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Queryable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TElement&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TKey, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TElement&gt;, System.Linq.Queryable+TResult&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TKey, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TSource&gt;, System.Linq.Queryable+TResult&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TKey, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TSource&gt;, System.Linq.Queryable+TResult&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Queryable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupBy" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TElement" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TElement&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TKey, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TElement&gt;, System.Linq.Queryable+TResult&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Queryable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupJoin" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TOuter" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TInner" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="outer" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TOuter&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TInner&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TOuter, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TInner, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TOuter, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TInner&gt;, System.Linq.Queryable+TResult&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GroupJoin" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TOuter" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TInner" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="outer" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TOuter&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TInner&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TOuter, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TInner, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TOuter, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TInner&gt;, System.Linq.Queryable+TResult&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Queryable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Intersect" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source1" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Intersect" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source1" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Join" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TOuter" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TInner" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="outer" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TOuter&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TInner&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TOuter, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TInner, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TOuter, System.Linq.Queryable+TInner, System.Linq.Queryable+TResult&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Join" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TOuter" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TInner" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="3" DeclaredByMethod="True" />
        <Parameter Name="outer" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TOuter&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TInner&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TOuter, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TInner, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TOuter, System.Linq.Queryable+TInner, System.Linq.Queryable+TResult&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Queryable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Last" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Last" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Boolean&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="LastOrDefault" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="LastOrDefault" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Boolean&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="LongCount" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="LongCount" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Boolean&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Max" Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TResult&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Min" Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TResult&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="OfType" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable" IsInterface="True" />
      </Method>
      <Method Name="OrderBy" Type="System.Linq.IOrderedQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="OrderBy" Type="System.Linq.IOrderedQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Linq.Queryable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="OrderByDescending" Type="System.Linq.IOrderedQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="OrderByDescending" Type="System.Linq.IOrderedQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Linq.Queryable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Reverse" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Select" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TResult&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Select" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TSource, System.Int32, System.Linq.Queryable+TResult&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SelectMany" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TResult&gt;&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SelectMany" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TSource, System.Int32, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TResult&gt;&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SelectMany" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TCollection" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="collectionSelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TSource, System.Int32, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TCollection&gt;&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TCollection, System.Linq.Queryable+TResult&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SelectMany" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TCollection" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="collectionSelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TCollection&gt;&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TCollection, System.Linq.Queryable+TResult&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SequenceEqual" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source1" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SequenceEqual" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source1" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Single" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Single" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Boolean&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SingleOrDefault" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SingleOrDefault" Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Boolean&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Skip" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SkipWhile" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Boolean&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SkipWhile" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TSource, System.Int32, System.Boolean&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Int32&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Nullable`1&lt;System.Int32&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Int64&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Nullable`1&lt;System.Int64&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Single&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Nullable`1&lt;System.Single&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Double&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Nullable`1&lt;System.Double&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Decimal&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Nullable`1&lt;System.Decimal&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Sum" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Int32&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Int32&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Nullable`1&lt;System.Int32&gt;&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Int64&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Int64&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Nullable`1&lt;System.Int64&gt;&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Single&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Single&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Nullable`1&lt;System.Single&gt;&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Double&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Double&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Nullable`1&lt;System.Double&gt;&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Decimal&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Sum" Type="System.Nullable`1&lt;System.Decimal&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Decimal" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Nullable`1&lt;System.Decimal&gt;&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Take" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TakeWhile" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Boolean&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="TakeWhile" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TSource, System.Int32, System.Boolean&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ThenBy" Type="System.Linq.IOrderedQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ThenBy" Type="System.Linq.IOrderedQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Linq.Queryable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ThenByDescending" Type="System.Linq.IOrderedQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ThenByDescending" Type="System.Linq.IOrderedQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Linq.Queryable+TKey&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Linq.Queryable+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Union" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source1" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Union" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source1" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Where" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Linq.Queryable+TSource, System.Boolean&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Where" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSource" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="source" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TSource&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TSource, System.Int32, System.Boolean&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Zip" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TResult&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TFirst" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TSecond" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Queryable+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="2" DeclaredByMethod="True" />
        <Parameter Name="source1" Type="System.Linq.IQueryable`1&lt;System.Linq.Queryable+TFirst&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Queryable+TSecond&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Linq.Queryable+TFirst, System.Linq.Queryable+TSecond, System.Linq.Queryable+TResult&gt;&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.Linq.Expressions">
    <Class Name="BinaryExpression" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="CanReduce" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Conversion" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsReadable="True" />
      <Property Name="IsLifted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsLiftedToNull" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" IsReadable="True" />
      <Property Name="Right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="Reduce" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      <Method Name="Update" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="BlockExpression" Type="System.Linq.Expressions.BlockExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="Expressions" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Result" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="Variables" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ParameterExpression&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Linq.Expressions.ParameterExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Property>
      <Method Name="Update" Type="System.Linq.Expressions.BlockExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
    </Class>
    <Class Name="CatchBlock" Type="System.Linq.Expressions.CatchBlock" BaseName="Object" BaseType="System.Object">
      <Property Name="Body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Filter" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Test" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="Variable" Type="System.Linq.Expressions.ParameterExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsReadable="True" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="Update" Type="System.Linq.Expressions.CatchBlock" BaseName="Object" BaseType="System.Object">
        <Parameter Name="variable" Type="System.Linq.Expressions.ParameterExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="ConditionalExpression" Type="System.Linq.Expressions.ConditionalExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="IfFalse" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="IfTrue" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Test" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Update" Type="System.Linq.Expressions.ConditionalExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="test" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ifTrue" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ifFalse" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="ConstantExpression" Type="System.Linq.Expressions.ConstantExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="Value" Type="System.Object" IsReadable="True" />
    </Class>
    <Class Name="DebugInfoExpression" Type="System.Linq.Expressions.DebugInfoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="Document" Type="System.Linq.Expressions.SymbolDocumentInfo" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="EndColumn" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="EndLine" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsClear" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="StartColumn" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="StartLine" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
    </Class>
    <Class Name="DefaultExpression" Type="System.Linq.Expressions.DefaultExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
    </Class>
    <Class Name="DynamicExpression" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <ImplementedInterface Type="System.Linq.Expressions.IDynamicExpression" />
      <ImplementedInterface Type="System.Linq.Expressions.IArgumentProvider" />
      <Property Name="Arguments" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="Binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="DelegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Dynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="returnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="Dynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="returnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Dynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="returnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Dynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="returnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Dynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="returnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Dynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="returnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="MakeDynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="MakeDynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="MakeDynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="MakeDynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="MakeDynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="MakeDynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Update" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
    </Class>
    <Class Name="DynamicExpressionVisitor" Type="System.Linq.Expressions.DynamicExpressionVisitor" BaseName="ExpressionVisitor" BaseType="System.Linq.Expressions.ExpressionVisitor" />
    <Class Name="ElementInit" Type="System.Linq.Expressions.ElementInit" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Linq.Expressions.IArgumentProvider" />
      <Property Name="AddMethod" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" IsReadable="True" />
      <Property Name="Arguments" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="Update" Type="System.Linq.Expressions.ElementInit" BaseName="Object" BaseType="System.Object">
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
    </Class>
    <Class Name="Expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object">
      <Property Name="CanReduce" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Add" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="AddAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="AddAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="AddAssignChecked" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddAssignChecked" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="AddAssignChecked" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="AddChecked" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddChecked" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="And" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="And" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="AndAlso" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AndAlso" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="AndAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AndAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="AndAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="ArrayAccess" Type="System.Linq.Expressions.IndexExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="indexes" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="ArrayAccess" Type="System.Linq.Expressions.IndexExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="indexes" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="ArrayIndex" Type="System.Linq.Expressions.MethodCallExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="indexes" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="ArrayIndex" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="index" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ArrayIndex" Type="System.Linq.Expressions.MethodCallExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="indexes" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="ArrayLength" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Assign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Bind" Type="System.Linq.Expressions.MemberAssignment" BaseName="MemberBinding" BaseType="System.Linq.Expressions.MemberBinding" IsStatic="True">
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Bind" Type="System.Linq.Expressions.MemberAssignment" BaseName="MemberBinding" BaseType="System.Linq.Expressions.MemberBinding" IsStatic="True">
        <Parameter Name="member" Type="System.Reflection.MemberInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Block" Type="System.Linq.Expressions.BlockExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Block" Type="System.Linq.Expressions.BlockExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="expressions" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="Block" Type="System.Linq.Expressions.BlockExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Block" Type="System.Linq.Expressions.BlockExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="expressions" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="Block" Type="System.Linq.Expressions.BlockExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="expressions" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="Block" Type="System.Linq.Expressions.BlockExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Block" Type="System.Linq.Expressions.BlockExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Block" Type="System.Linq.Expressions.BlockExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Block" Type="System.Linq.Expressions.BlockExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg4" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Block" Type="System.Linq.Expressions.BlockExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expressions" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="Block" Type="System.Linq.Expressions.BlockExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Block" Type="System.Linq.Expressions.BlockExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Break" Type="System.Linq.Expressions.GotoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Break" Type="System.Linq.Expressions.GotoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Break" Type="System.Linq.Expressions.GotoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Break" Type="System.Linq.Expressions.GotoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Call" Type="System.Linq.Expressions.MethodCallExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Call" Type="System.Linq.Expressions.MethodCallExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Call" Type="System.Linq.Expressions.MethodCallExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Call" Type="System.Linq.Expressions.MethodCallExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Call" Type="System.Linq.Expressions.MethodCallExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg4" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Call" Type="System.Linq.Expressions.MethodCallExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="Call" Type="System.Linq.Expressions.MethodCallExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Call" Type="System.Linq.Expressions.MethodCallExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="Call" Type="System.Linq.Expressions.MethodCallExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="Call" Type="System.Linq.Expressions.MethodCallExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Call" Type="System.Linq.Expressions.MethodCallExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Call" Type="System.Linq.Expressions.MethodCallExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Call" Type="System.Linq.Expressions.MethodCallExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="methodName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="typeArguments" Type="System.Type[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Type" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="Call" Type="System.Linq.Expressions.MethodCallExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="methodName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="typeArguments" Type="System.Type[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Type" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="Catch" Type="System.Linq.Expressions.CatchBlock" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Catch" Type="System.Linq.Expressions.CatchBlock" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="variable" Type="System.Linq.Expressions.ParameterExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Catch" Type="System.Linq.Expressions.CatchBlock" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Catch" Type="System.Linq.Expressions.CatchBlock" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="variable" Type="System.Linq.Expressions.ParameterExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ClearDebugInfo" Type="System.Linq.Expressions.DebugInfoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="document" Type="System.Linq.Expressions.SymbolDocumentInfo" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Coalesce" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Coalesce" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="Condition" Type="System.Linq.Expressions.ConditionalExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="test" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ifTrue" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ifFalse" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Condition" Type="System.Linq.Expressions.ConditionalExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="test" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ifTrue" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ifFalse" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Constant" Type="System.Linq.Expressions.ConstantExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="Constant" Type="System.Linq.Expressions.ConstantExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Continue" Type="System.Linq.Expressions.GotoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Continue" Type="System.Linq.Expressions.GotoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Convert" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Convert" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="ConvertChecked" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertChecked" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="DebugInfo" Type="System.Linq.Expressions.DebugInfoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="document" Type="System.Linq.Expressions.SymbolDocumentInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="startLine" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="startColumn" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="endLine" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="endColumn" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Decrement" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Decrement" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="Default" Type="System.Linq.Expressions.DefaultExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Divide" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Divide" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="DivideAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DivideAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="DivideAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="Dynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="returnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="Dynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="returnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Dynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="returnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Dynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="returnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Dynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="returnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Dynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="returnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="ElementInit" Type="System.Linq.Expressions.ElementInit" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="addMethod" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="ElementInit" Type="System.Linq.Expressions.ElementInit" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="addMethod" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Empty" Type="System.Linq.Expressions.DefaultExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True" />
      <Method Name="Equal" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Equal" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="liftToNull" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="ExclusiveOr" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ExclusiveOr" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="ExclusiveOrAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ExclusiveOrAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="ExclusiveOrAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="Field" Type="System.Linq.Expressions.MemberExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="fieldName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Field" Type="System.Linq.Expressions.MemberExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fieldName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Field" Type="System.Linq.Expressions.MemberExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="field" Type="System.Reflection.FieldInfo" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetActionType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsStatic="True">
        <Parameter Name="typeArgs" Type="System.Type[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Type" />
      </Method>
      <Method Name="GetDelegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsStatic="True">
        <Parameter Name="typeArgs" Type="System.Type[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Type" />
      </Method>
      <Method Name="GetFuncType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsStatic="True">
        <Parameter Name="typeArgs" Type="System.Type[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Type" />
      </Method>
      <Method Name="Goto" Type="System.Linq.Expressions.GotoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Goto" Type="System.Linq.Expressions.GotoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Goto" Type="System.Linq.Expressions.GotoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Goto" Type="System.Linq.Expressions.GotoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GreaterThan" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GreaterThan" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="liftToNull" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="GreaterThanOrEqual" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GreaterThanOrEqual" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="liftToNull" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="IfThen" Type="System.Linq.Expressions.ConditionalExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="test" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ifTrue" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="IfThenElse" Type="System.Linq.Expressions.ConditionalExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="test" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ifTrue" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ifFalse" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Increment" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Increment" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="Invoke" Type="System.Linq.Expressions.InvocationExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="Invoke" Type="System.Linq.Expressions.InvocationExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="IsFalse" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="IsFalse" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="IsTrue" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="IsTrue" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="Label" Type="System.Linq.Expressions.LabelExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Label" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" IsStatic="True" />
      <Method Name="Label" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Label" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Label" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Label" Type="System.Linq.Expressions.LabelExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="defaultValue" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Lambda" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.ParameterExpression" />
      </Method>
      <Method Name="Lambda" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="tailCall" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.ParameterExpression" />
      </Method>
      <Method Name="Lambda" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Lambda" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="tailCall" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Lambda" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.ParameterExpression" />
      </Method>
      <Method Name="Lambda" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="tailCall" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.ParameterExpression" />
      </Method>
      <Method Name="Lambda" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Lambda" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="tailCall" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Lambda" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Lambda" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Lambda" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="tailCall" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Lambda" Type="System.Linq.Expressions.Expression`1&lt;System.Linq.Expressions.Expression+TDelegate&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Expressions.Expression+TDelegate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Expressions.Expression+TDelegate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.ParameterExpression" />
      </Method>
      <Method Name="Lambda" Type="System.Linq.Expressions.Expression`1&lt;System.Linq.Expressions.Expression+TDelegate&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Expressions.Expression+TDelegate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Expressions.Expression+TDelegate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="tailCall" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.ParameterExpression" />
      </Method>
      <Method Name="Lambda" Type="System.Linq.Expressions.Expression`1&lt;System.Linq.Expressions.Expression+TDelegate&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Expressions.Expression+TDelegate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Expressions.Expression+TDelegate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Lambda" Type="System.Linq.Expressions.Expression`1&lt;System.Linq.Expressions.Expression+TDelegate&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Expressions.Expression+TDelegate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Expressions.Expression+TDelegate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="tailCall" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Lambda" Type="System.Linq.Expressions.Expression`1&lt;System.Linq.Expressions.Expression+TDelegate&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Expressions.Expression+TDelegate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Expressions.Expression+TDelegate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Lambda" Type="System.Linq.Expressions.Expression`1&lt;System.Linq.Expressions.Expression+TDelegate&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Expressions.Expression+TDelegate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Expressions.Expression+TDelegate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="tailCall" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Lambda" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="tailCall" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="LeftShift" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="LeftShift" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="LeftShiftAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="LeftShiftAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="LeftShiftAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="LessThan" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="LessThan" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="liftToNull" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="LessThanOrEqual" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="LessThanOrEqual" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="liftToNull" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="ListBind" Type="System.Linq.Expressions.MemberListBinding" BaseName="MemberBinding" BaseType="System.Linq.Expressions.MemberBinding" IsStatic="True">
        <Parameter Name="member" Type="System.Reflection.MemberInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.ElementInit[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.ElementInit" />
      </Method>
      <Method Name="ListBind" Type="System.Linq.Expressions.MemberListBinding" BaseName="MemberBinding" BaseType="System.Linq.Expressions.MemberBinding" IsStatic="True">
        <Parameter Name="member" Type="System.Reflection.MemberInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ElementInit&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="ListBind" Type="System.Linq.Expressions.MemberListBinding" BaseName="MemberBinding" BaseType="System.Linq.Expressions.MemberBinding" IsStatic="True">
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.ElementInit[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.ElementInit" />
      </Method>
      <Method Name="ListBind" Type="System.Linq.Expressions.MemberListBinding" BaseName="MemberBinding" BaseType="System.Linq.Expressions.MemberBinding" IsStatic="True">
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ElementInit&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="ListInit" Type="System.Linq.Expressions.ListInitExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="ListInit" Type="System.Linq.Expressions.ListInitExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
        <Parameter Name="addMethod" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="ListInit" Type="System.Linq.Expressions.ListInitExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.ElementInit[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.ElementInit" />
      </Method>
      <Method Name="ListInit" Type="System.Linq.Expressions.ListInitExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ElementInit&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="ListInit" Type="System.Linq.Expressions.ListInitExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="ListInit" Type="System.Linq.Expressions.ListInitExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
        <Parameter Name="addMethod" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Loop" Type="System.Linq.Expressions.LoopExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Loop" Type="System.Linq.Expressions.LoopExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="break" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Loop" Type="System.Linq.Expressions.LoopExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="break" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="continue" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="MakeBinary" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="binaryType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="MakeBinary" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="binaryType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="liftToNull" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="MakeBinary" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="binaryType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="liftToNull" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="MakeCatchBlock" Type="System.Linq.Expressions.CatchBlock" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="variable" Type="System.Linq.Expressions.ParameterExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="MakeDynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="MakeDynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="MakeDynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="MakeDynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="MakeDynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="MakeDynamic" Type="System.Linq.Expressions.DynamicExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="MakeGoto" Type="System.Linq.Expressions.GotoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="kind" Type="System.Linq.Expressions.GotoExpressionKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="MakeIndex" Type="System.Linq.Expressions.IndexExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="indexer" Type="System.Reflection.PropertyInfo" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="MakeMemberAccess" Type="System.Linq.Expressions.MemberExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="MakeTry" Type="System.Linq.Expressions.TryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="finally" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fault" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="handlers" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.CatchBlock&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="MakeUnary" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="unaryType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="operand" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="MakeUnary" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="unaryType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="operand" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="MemberBind" Type="System.Linq.Expressions.MemberMemberBinding" BaseName="MemberBinding" BaseType="System.Linq.Expressions.MemberBinding" IsStatic="True">
        <Parameter Name="member" Type="System.Reflection.MemberInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="bindings" Type="System.Linq.Expressions.MemberBinding[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.MemberBinding" />
      </Method>
      <Method Name="MemberBind" Type="System.Linq.Expressions.MemberMemberBinding" BaseName="MemberBinding" BaseType="System.Linq.Expressions.MemberBinding" IsStatic="True">
        <Parameter Name="member" Type="System.Reflection.MemberInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="bindings" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.MemberBinding&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="MemberBind" Type="System.Linq.Expressions.MemberMemberBinding" BaseName="MemberBinding" BaseType="System.Linq.Expressions.MemberBinding" IsStatic="True">
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="bindings" Type="System.Linq.Expressions.MemberBinding[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.MemberBinding" />
      </Method>
      <Method Name="MemberBind" Type="System.Linq.Expressions.MemberMemberBinding" BaseName="MemberBinding" BaseType="System.Linq.Expressions.MemberBinding" IsStatic="True">
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="bindings" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.MemberBinding&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="MemberInit" Type="System.Linq.Expressions.MemberInitExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
        <Parameter Name="bindings" Type="System.Linq.Expressions.MemberBinding[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.MemberBinding" />
      </Method>
      <Method Name="MemberInit" Type="System.Linq.Expressions.MemberInitExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
        <Parameter Name="bindings" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.MemberBinding&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Modulo" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Modulo" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="ModuloAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ModuloAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="ModuloAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="Multiply" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Multiply" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="MultiplyAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="MultiplyAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="MultiplyAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="MultiplyAssignChecked" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="MultiplyAssignChecked" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="MultiplyAssignChecked" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="MultiplyChecked" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="MultiplyChecked" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="Negate" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Negate" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="NegateChecked" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="NegateChecked" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="New" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="New" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="New" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="New" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="members" Type="System.Collections.Generic.IEnumerable`1&lt;System.Reflection.MemberInfo&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="New" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="members" Type="System.Reflection.MemberInfo[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="New" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="NewArrayBounds" Type="System.Linq.Expressions.NewArrayExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="bounds" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="NewArrayBounds" Type="System.Linq.Expressions.NewArrayExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="bounds" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="NewArrayInit" Type="System.Linq.Expressions.NewArrayExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="NewArrayInit" Type="System.Linq.Expressions.NewArrayExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Not" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Not" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="NotEqual" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="NotEqual" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="liftToNull" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="OnesComplement" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OnesComplement" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="Or" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Or" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="OrAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OrAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="OrAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="OrElse" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OrElse" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="Parameter" Type="System.Linq.Expressions.ParameterExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Parameter" Type="System.Linq.Expressions.ParameterExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="PostDecrementAssign" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="PostDecrementAssign" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="PostIncrementAssign" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="PostIncrementAssign" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="Power" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Power" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="PowerAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="PowerAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="PowerAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="PreDecrementAssign" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="PreDecrementAssign" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="PreIncrementAssign" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="PreIncrementAssign" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="Property" Type="System.Linq.Expressions.IndexExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="indexer" Type="System.Reflection.PropertyInfo" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="Property" Type="System.Linq.Expressions.IndexExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="indexer" Type="System.Reflection.PropertyInfo" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Property" Type="System.Linq.Expressions.MemberExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="propertyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Property" Type="System.Linq.Expressions.MemberExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="Property" Type="System.Linq.Expressions.IndexExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="propertyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="Property" Type="System.Linq.Expressions.MemberExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="propertyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Property" Type="System.Linq.Expressions.MemberExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="property" Type="System.Reflection.PropertyInfo" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="PropertyOrField" Type="System.Linq.Expressions.MemberExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="propertyOrFieldName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Quote" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Reduce" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      <Method Name="ReduceAndCheck" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      <Method Name="ReduceExtensions" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      <Method Name="ReferenceEqual" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ReferenceNotEqual" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Rethrow" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True" />
      <Method Name="Rethrow" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Return" Type="System.Linq.Expressions.GotoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Return" Type="System.Linq.Expressions.GotoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Return" Type="System.Linq.Expressions.GotoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Return" Type="System.Linq.Expressions.GotoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="RightShift" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="RightShift" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="RightShiftAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="RightShiftAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="RightShiftAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="RuntimeVariables" Type="System.Linq.Expressions.RuntimeVariablesExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="variables" Type="System.Linq.Expressions.ParameterExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.ParameterExpression" />
      </Method>
      <Method Name="RuntimeVariables" Type="System.Linq.Expressions.RuntimeVariablesExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Subtract" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Subtract" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="SubtractAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SubtractAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="SubtractAssign" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="SubtractAssignChecked" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SubtractAssignChecked" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="SubtractAssignChecked" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="SubtractChecked" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SubtractChecked" Type="System.Linq.Expressions.BinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="Switch" Type="System.Linq.Expressions.SwitchExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="cases" Type="System.Linq.Expressions.SwitchCase[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.SwitchCase" />
      </Method>
      <Method Name="Switch" Type="System.Linq.Expressions.SwitchExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="cases" Type="System.Linq.Expressions.SwitchCase[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.SwitchCase" />
      </Method>
      <Method Name="Switch" Type="System.Linq.Expressions.SwitchExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="comparison" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="cases" Type="System.Linq.Expressions.SwitchCase[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.SwitchCase" />
      </Method>
      <Method Name="Switch" Type="System.Linq.Expressions.SwitchExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="comparison" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="cases" Type="System.Linq.Expressions.SwitchCase[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.SwitchCase" />
      </Method>
      <Method Name="Switch" Type="System.Linq.Expressions.SwitchExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="comparison" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="cases" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.SwitchCase&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Switch" Type="System.Linq.Expressions.SwitchExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="comparison" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
        <Parameter Name="cases" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.SwitchCase&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="SwitchCase" Type="System.Linq.Expressions.SwitchCase" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="testValues" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
      <Method Name="SwitchCase" Type="System.Linq.Expressions.SwitchCase" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="testValues" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="SymbolDocument" Type="System.Linq.Expressions.SymbolDocumentInfo" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SymbolDocument" Type="System.Linq.Expressions.SymbolDocumentInfo" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="language" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SymbolDocument" Type="System.Linq.Expressions.SymbolDocumentInfo" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="language" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="languageVendor" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SymbolDocument" Type="System.Linq.Expressions.SymbolDocumentInfo" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="language" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="languageVendor" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="documentType" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Throw" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Throw" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="TryCatch" Type="System.Linq.Expressions.TryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="handlers" Type="System.Linq.Expressions.CatchBlock[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.CatchBlock" />
      </Method>
      <Method Name="TryCatchFinally" Type="System.Linq.Expressions.TryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="finally" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="handlers" Type="System.Linq.Expressions.CatchBlock[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.CatchBlock" />
      </Method>
      <Method Name="TryFault" Type="System.Linq.Expressions.TryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fault" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="TryFinally" Type="System.Linq.Expressions.TryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="finally" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="TryGetActionType" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="typeArgs" Type="System.Type[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Type" />
        <Parameter Name="actionType" Type="System.Type&amp;" IsByRef="True" ElementType="System.Type" />
      </Method>
      <Method Name="TryGetFuncType" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="typeArgs" Type="System.Type[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Type" />
        <Parameter Name="funcType" Type="System.Type&amp;" IsByRef="True" ElementType="System.Type" />
      </Method>
      <Method Name="TypeAs" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="TypeEqual" Type="System.Linq.Expressions.TypeBinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="TypeIs" Type="System.Linq.Expressions.TypeBinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="UnaryPlus" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UnaryPlus" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" />
      </Method>
      <Method Name="Unbox" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Variable" Type="System.Linq.Expressions.ParameterExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Variable" Type="System.Linq.Expressions.ParameterExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="Expression`1&lt;TDelegate&gt;" Type="System.Linq.Expressions.Expression`1&lt;System.Linq.Expressions.Expression`1+TDelegate&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Linq.Expressions.Expression`1+TDelegate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <Method Name="Compile" Type="System.Linq.Expressions.Expression`1+TDelegate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" ContainsGenericMethodParameters="True" />
      <Method Name="Compile" Type="System.Linq.Expressions.Expression`1+TDelegate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" ContainsGenericMethodParameters="True">
        <Parameter Name="debugInfoGenerator" Type="System.Runtime.CompilerServices.DebugInfoGenerator" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Compile" Type="System.Linq.Expressions.Expression`1+TDelegate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" ContainsGenericMethodParameters="True">
        <Parameter Name="preferInterpretation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Update" Type="System.Linq.Expressions.Expression`1&lt;System.Linq.Expressions.Expression`1+TDelegate&gt;" BaseName="LambdaExpression" BaseType="System.Linq.Expressions.LambdaExpression" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeParameter Type="System.Linq.Expressions.Expression`1+TDelegate" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
    </Class>
    <Enumeration Name="ExpressionType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Add" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="AddAssign" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="63" />
      <Field Name="AddAssignChecked" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="74" />
      <Field Name="AddChecked" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="And" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="AndAlso" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="AndAssign" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
      <Field Name="ArrayIndex" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="ArrayLength" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Assign" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="46" />
      <Field Name="Block" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="47" />
      <Field Name="Call" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Coalesce" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="Conditional" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="Constant" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9" />
      <Field Name="Convert" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10" />
      <Field Name="ConvertChecked" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11" />
      <Field Name="DebugInfo" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="48" />
      <Field Name="Decrement" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="49" />
      <Field Name="Default" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="51" />
      <Field Name="Divide" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="12" />
      <Field Name="DivideAssign" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="65" />
      <Field Name="Dynamic" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="50" />
      <Field Name="Equal" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="13" />
      <Field Name="ExclusiveOr" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="14" />
      <Field Name="ExclusiveOrAssign" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="66" />
      <Field Name="Extension" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="52" />
      <Field Name="Goto" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="53" />
      <Field Name="GreaterThan" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="15" />
      <Field Name="GreaterThanOrEqual" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="Increment" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="54" />
      <Field Name="Index" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="55" />
      <Field Name="Invoke" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="17" />
      <Field Name="IsFalse" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="84" />
      <Field Name="IsTrue" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="83" />
      <Field Name="Label" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="56" />
      <Field Name="Lambda" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="18" />
      <Field Name="LeftShift" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="19" />
      <Field Name="LeftShiftAssign" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="67" />
      <Field Name="LessThan" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="20" />
      <Field Name="LessThanOrEqual" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="21" />
      <Field Name="ListInit" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="22" />
      <Field Name="Loop" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="58" />
      <Field Name="MemberAccess" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="23" />
      <Field Name="MemberInit" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="24" />
      <Field Name="Modulo" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="25" />
      <Field Name="ModuloAssign" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="68" />
      <Field Name="Multiply" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="26" />
      <Field Name="MultiplyAssign" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="69" />
      <Field Name="MultiplyAssignChecked" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="75" />
      <Field Name="MultiplyChecked" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="27" />
      <Field Name="Negate" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="28" />
      <Field Name="NegateChecked" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="30" />
      <Field Name="New" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="31" />
      <Field Name="NewArrayBounds" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="33" />
      <Field Name="NewArrayInit" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="Not" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="34" />
      <Field Name="NotEqual" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="35" />
      <Field Name="OnesComplement" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="82" />
      <Field Name="Or" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="36" />
      <Field Name="OrAssign" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="70" />
      <Field Name="OrElse" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="37" />
      <Field Name="Parameter" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="38" />
      <Field Name="PostDecrementAssign" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="80" />
      <Field Name="PostIncrementAssign" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="79" />
      <Field Name="Power" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="39" />
      <Field Name="PowerAssign" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="71" />
      <Field Name="PreDecrementAssign" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="78" />
      <Field Name="PreIncrementAssign" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="77" />
      <Field Name="Quote" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="40" />
      <Field Name="RightShift" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="41" />
      <Field Name="RightShiftAssign" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="72" />
      <Field Name="RuntimeVariables" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="57" />
      <Field Name="Subtract" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="42" />
      <Field Name="SubtractAssign" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="73" />
      <Field Name="SubtractAssignChecked" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="76" />
      <Field Name="SubtractChecked" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="43" />
      <Field Name="Switch" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="59" />
      <Field Name="Throw" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="60" />
      <Field Name="Try" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="61" />
      <Field Name="TypeAs" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="44" />
      <Field Name="TypeEqual" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="81" />
      <Field Name="TypeIs" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="45" />
      <Field Name="UnaryPlus" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="29" />
      <Field Name="Unbox" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="62" />
    </Enumeration>
    <Class Name="ExpressionVisitor" Type="System.Linq.Expressions.ExpressionVisitor" BaseName="Object" BaseType="System.Object">
      <Method Name="Visit" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="nodes" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Visit" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object">
        <Parameter Name="node" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Visit" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ExpressionVisitor+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Expressions.ExpressionVisitor+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Expressions.ExpressionVisitor+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="nodes" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ExpressionVisitor+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="elementVisitor" Type="System.Func`2&lt;System.Linq.Expressions.ExpressionVisitor+T, System.Linq.Expressions.ExpressionVisitor+T&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="VisitAndConvert" Type="System.Linq.Expressions.ExpressionVisitor+T" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Expressions.ExpressionVisitor+T" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="node" Type="System.Linq.Expressions.ExpressionVisitor+T" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="callerName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="VisitAndConvert" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ExpressionVisitor+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Linq.Expressions.ExpressionVisitor+T" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Linq.Expressions.ExpressionVisitor+T" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="nodes" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ExpressionVisitor+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="callerName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="GotoExpression" Type="System.Linq.Expressions.GotoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="Kind" Type="System.Linq.Expressions.GotoExpressionKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="Value" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="Update" Type="System.Linq.Expressions.GotoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Enumeration Name="GotoExpressionKind" Type="System.Linq.Expressions.GotoExpressionKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Break" Type="System.Linq.Expressions.GotoExpressionKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Continue" Type="System.Linq.Expressions.GotoExpressionKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Goto" Type="System.Linq.Expressions.GotoExpressionKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Return" Type="System.Linq.Expressions.GotoExpressionKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Interface Name="IArgumentProvider" Type="System.Linq.Expressions.IArgumentProvider" IsInterface="True">
      <Property Name="ArgumentCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="GetArgument" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Interface>
    <Interface Name="IDynamicExpression" Type="System.Linq.Expressions.IDynamicExpression" IsInterface="True">
      <ImplementedInterface Type="System.Linq.Expressions.IArgumentProvider" />
      <Property Name="DelegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="CreateCallSite" Type="System.Object" />
      <Method Name="Rewrite" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object">
        <Parameter Name="args" Type="System.Linq.Expressions.Expression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Linq.Expressions.Expression" />
      </Method>
    </Interface>
    <Class Name="IndexExpression" Type="System.Linq.Expressions.IndexExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <ImplementedInterface Type="System.Linq.Expressions.IArgumentProvider" />
      <Property Name="Arguments" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="Indexer" Type="System.Reflection.PropertyInfo" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Object" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Update" Type="System.Linq.Expressions.IndexExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="object" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
    </Class>
    <Class Name="InvocationExpression" Type="System.Linq.Expressions.InvocationExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <ImplementedInterface Type="System.Linq.Expressions.IArgumentProvider" />
      <Property Name="Arguments" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="Expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Update" Type="System.Linq.Expressions.InvocationExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
    </Class>
    <Class Name="LabelExpression" Type="System.Linq.Expressions.LabelExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="DefaultValue" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Update" Type="System.Linq.Expressions.LabelExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="defaultValue" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="LabelTarget" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object">
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="LambdaExpression" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="Body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Parameters" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ParameterExpression&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Linq.Expressions.ParameterExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Property>
      <Property Name="ReturnType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="TailCall" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Compile" Type="System.Delegate" BaseName="Object" BaseType="System.Object" />
      <Method Name="Compile" Type="System.Delegate" BaseName="Object" BaseType="System.Object">
        <Parameter Name="debugInfoGenerator" Type="System.Runtime.CompilerServices.DebugInfoGenerator" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Compile" Type="System.Delegate" BaseName="Object" BaseType="System.Object">
        <Parameter Name="preferInterpretation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CompileToMethod" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="method" Type="System.Reflection.Emit.MethodBuilder" BaseName="MethodInfo" BaseType="System.Reflection.MethodInfo" />
      </Method>
      <Method Name="CompileToMethod" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="method" Type="System.Reflection.Emit.MethodBuilder" BaseName="MethodInfo" BaseType="System.Reflection.MethodInfo" />
        <Parameter Name="debugInfoGenerator" Type="System.Runtime.CompilerServices.DebugInfoGenerator" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="ListInitExpression" Type="System.Linq.Expressions.ListInitExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="CanReduce" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Initializers" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ElementInit&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Linq.Expressions.ElementInit" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="NewExpression" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsReadable="True" />
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Reduce" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      <Method Name="Update" Type="System.Linq.Expressions.ListInitExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ElementInit&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
    </Class>
    <Class Name="LoopExpression" Type="System.Linq.Expressions.LoopExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="Body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="BreakLabel" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ContinueLabel" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Update" Type="System.Linq.Expressions.LoopExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="breakLabel" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="continueLabel" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="MemberAssignment" Type="System.Linq.Expressions.MemberAssignment" BaseName="MemberBinding" BaseType="System.Linq.Expressions.MemberBinding">
      <Property Name="Expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="Update" Type="System.Linq.Expressions.MemberAssignment" BaseName="MemberBinding" BaseType="System.Linq.Expressions.MemberBinding">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="MemberBinding" Type="System.Linq.Expressions.MemberBinding" BaseName="Object" BaseType="System.Object">
      <Property Name="BindingType" Type="System.Linq.Expressions.MemberBindingType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Member" Type="System.Reflection.MemberInfo" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Enumeration Name="MemberBindingType" Type="System.Linq.Expressions.MemberBindingType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Assignment" Type="System.Linq.Expressions.MemberBindingType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="ListBinding" Type="System.Linq.Expressions.MemberBindingType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="MemberBinding" Type="System.Linq.Expressions.MemberBindingType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="MemberExpression" Type="System.Linq.Expressions.MemberExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="Expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Member" Type="System.Reflection.MemberInfo" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Method Name="Update" Type="System.Linq.Expressions.MemberExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="MemberInitExpression" Type="System.Linq.Expressions.MemberInitExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="Bindings" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.MemberBinding&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Linq.Expressions.MemberBinding" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="CanReduce" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="NewExpression" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" IsReadable="True" />
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Reduce" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      <Method Name="Update" Type="System.Linq.Expressions.MemberInitExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
        <Parameter Name="bindings" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.MemberBinding&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
    </Class>
    <Class Name="MemberListBinding" Type="System.Linq.Expressions.MemberListBinding" BaseName="MemberBinding" BaseType="System.Linq.Expressions.MemberBinding">
      <Property Name="Initializers" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ElementInit&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Linq.Expressions.ElementInit" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Method Name="Update" Type="System.Linq.Expressions.MemberListBinding" BaseName="MemberBinding" BaseType="System.Linq.Expressions.MemberBinding">
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ElementInit&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
    </Class>
    <Class Name="MemberMemberBinding" Type="System.Linq.Expressions.MemberMemberBinding" BaseName="MemberBinding" BaseType="System.Linq.Expressions.MemberBinding">
      <Property Name="Bindings" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.MemberBinding&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Linq.Expressions.MemberBinding" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Method Name="Update" Type="System.Linq.Expressions.MemberMemberBinding" BaseName="MemberBinding" BaseType="System.Linq.Expressions.MemberBinding">
        <Parameter Name="bindings" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.MemberBinding&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
    </Class>
    <Class Name="MethodCallExpression" Type="System.Linq.Expressions.MethodCallExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <ImplementedInterface Type="System.Linq.Expressions.IArgumentProvider" />
      <Property Name="Arguments" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="Method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" IsReadable="True" />
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Object" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Update" Type="System.Linq.Expressions.MethodCallExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="object" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
    </Class>
    <Class Name="NewArrayExpression" Type="System.Linq.Expressions.NewArrayExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="Expressions" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Update" Type="System.Linq.Expressions.NewArrayExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
    </Class>
    <Class Name="NewExpression" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <ImplementedInterface Type="System.Linq.Expressions.IArgumentProvider" />
      <Property Name="Arguments" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="Constructor" Type="System.Reflection.ConstructorInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" IsReadable="True" />
      <Property Name="Members" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Reflection.MemberInfo&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Reflection.MemberInfo" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Update" Type="System.Linq.Expressions.NewExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
    </Class>
    <Class Name="ParameterExpression" Type="System.Linq.Expressions.ParameterExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="IsByRef" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
    </Class>
    <Class Name="RuntimeVariablesExpression" Type="System.Linq.Expressions.RuntimeVariablesExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="Variables" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ParameterExpression&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Linq.Expressions.ParameterExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Property>
      <Method Name="Update" Type="System.Linq.Expressions.RuntimeVariablesExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.ParameterExpression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
    </Class>
    <Class Name="SwitchCase" Type="System.Linq.Expressions.SwitchCase" BaseName="Object" BaseType="System.Object">
      <Property Name="Body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="TestValues" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="Update" Type="System.Linq.Expressions.SwitchCase" BaseName="Object" BaseType="System.Object">
        <Parameter Name="testValues" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.Expression&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="SwitchExpression" Type="System.Linq.Expressions.SwitchExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="Cases" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.SwitchCase&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Linq.Expressions.SwitchCase" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="Comparison" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" IsReadable="True" />
      <Property Name="DefaultBody" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="SwitchValue" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Update" Type="System.Linq.Expressions.SwitchExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="cases" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.SwitchCase&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="SymbolDocumentInfo" Type="System.Linq.Expressions.SymbolDocumentInfo" BaseName="Object" BaseType="System.Object">
      <Property Name="DocumentType" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="FileName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Language" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="LanguageVendor" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="TryExpression" Type="System.Linq.Expressions.TryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="Body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Fault" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Finally" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Handlers" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.CatchBlock&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Linq.Expressions.CatchBlock" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Update" Type="System.Linq.Expressions.TryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="handlers" Type="System.Collections.Generic.IEnumerable`1&lt;System.Linq.Expressions.CatchBlock&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="finally" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fault" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="TypeBinaryExpression" Type="System.Linq.Expressions.TypeBinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="Expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="TypeOperand" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Update" Type="System.Linq.Expressions.TypeBinaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="UnaryExpression" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
      <Property Name="CanReduce" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsLifted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsLiftedToNull" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Method" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase" IsReadable="True" />
      <Property Name="NodeType" Type="System.Linq.Expressions.ExpressionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Operand" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Reduce" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      <Method Name="Update" Type="System.Linq.Expressions.UnaryExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression">
        <Parameter Name="operand" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.Management.Instrumentation">
    <Class Name="InstanceNotFoundException" Type="System.Management.Instrumentation.InstanceNotFoundException" BaseName="InstrumentationException" BaseType="System.Management.Instrumentation.InstrumentationException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="InstrumentationBaseException" Type="System.Management.Instrumentation.InstrumentationBaseException" BaseName="Exception" BaseType="System.Exception">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="InstrumentationException" Type="System.Management.Instrumentation.InstrumentationException" BaseName="InstrumentationBaseException" BaseType="System.Management.Instrumentation.InstrumentationBaseException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="ManagementBindAttribute" Type="System.Management.Instrumentation.ManagementBindAttribute" BaseName="ManagementNewInstanceAttribute" BaseType="System.Management.Instrumentation.ManagementNewInstanceAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Schema" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="ManagementCommitAttribute" Type="System.Management.Instrumentation.ManagementCommitAttribute" BaseName="ManagementMemberAttribute" BaseType="System.Management.Instrumentation.ManagementMemberAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
    </Class>
    <Class Name="ManagementConfigurationAttribute" Type="System.Management.Instrumentation.ManagementConfigurationAttribute" BaseName="ManagementMemberAttribute" BaseType="System.Management.Instrumentation.ManagementMemberAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Mode" Type="System.Management.Instrumentation.ManagementConfigurationType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="Schema" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" IsWritable="True" />
    </Class>
    <Enumeration Name="ManagementConfigurationType" Type="System.Management.Instrumentation.ManagementConfigurationType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Apply" Type="System.Management.Instrumentation.ManagementConfigurationType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="OnCommit" Type="System.Management.Instrumentation.ManagementConfigurationType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="ManagementCreateAttribute" Type="System.Management.Instrumentation.ManagementCreateAttribute" BaseName="ManagementNewInstanceAttribute" BaseType="System.Management.Instrumentation.ManagementNewInstanceAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
    </Class>
    <Class Name="ManagementEntityAttribute" Type="System.Management.Instrumentation.ManagementEntityAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="External" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Singleton" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="ManagementEnumeratorAttribute" Type="System.Management.Instrumentation.ManagementEnumeratorAttribute" BaseName="ManagementNewInstanceAttribute" BaseType="System.Management.Instrumentation.ManagementNewInstanceAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Schema" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" IsWritable="True" />
    </Class>
    <Enumeration Name="ManagementHostingModel" Type="System.Management.Instrumentation.ManagementHostingModel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Decoupled" Type="System.Management.Instrumentation.ManagementHostingModel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="LocalService" Type="System.Management.Instrumentation.ManagementHostingModel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="LocalSystem" Type="System.Management.Instrumentation.ManagementHostingModel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="NetworkService" Type="System.Management.Instrumentation.ManagementHostingModel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="ManagementKeyAttribute" Type="System.Management.Instrumentation.ManagementKeyAttribute" BaseName="ManagementMemberAttribute" BaseType="System.Management.Instrumentation.ManagementMemberAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
    </Class>
    <Class Name="ManagementMemberAttribute" Type="System.Management.Instrumentation.ManagementMemberAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="ManagementNameAttribute" Type="System.Management.Instrumentation.ManagementNameAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="ManagementNewInstanceAttribute" Type="System.Management.Instrumentation.ManagementNewInstanceAttribute" BaseName="ManagementMemberAttribute" BaseType="System.Management.Instrumentation.ManagementMemberAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
    </Class>
    <Class Name="ManagementProbeAttribute" Type="System.Management.Instrumentation.ManagementProbeAttribute" BaseName="ManagementMemberAttribute" BaseType="System.Management.Instrumentation.ManagementMemberAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Schema" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="ManagementReferenceAttribute" Type="System.Management.Instrumentation.ManagementReferenceAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Type" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="ManagementRemoveAttribute" Type="System.Management.Instrumentation.ManagementRemoveAttribute" BaseName="ManagementMemberAttribute" BaseType="System.Management.Instrumentation.ManagementMemberAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Schema" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="ManagementTaskAttribute" Type="System.Management.Instrumentation.ManagementTaskAttribute" BaseName="ManagementMemberAttribute" BaseType="System.Management.Instrumentation.ManagementMemberAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Schema" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="WmiConfigurationAttribute" Type="System.Management.Instrumentation.WmiConfigurationAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="HostingGroup" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="HostingModel" Type="System.Management.Instrumentation.ManagementHostingModel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="IdentifyLevel" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="NamespaceSecurity" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Scope" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SecurityRestriction" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="scope" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
  </Namespace>
  <Namespace Name="System.Runtime.CompilerServices">
    <Class Name="CallSite" Type="System.Runtime.CompilerServices.CallSite" BaseName="Object" BaseType="System.Object">
      <Property Name="Binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="Create" Type="System.Runtime.CompilerServices.CallSite" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="delegateType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="CallSite`1&lt;T&gt;" Type="System.Runtime.CompilerServices.CallSite`1&lt;System.Runtime.CompilerServices.CallSite`1+T&gt;" BaseName="CallSite" BaseType="System.Runtime.CompilerServices.CallSite" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Runtime.CompilerServices.CallSite`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <Field Name="Target" Type="System.Runtime.CompilerServices.CallSite`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" IsReadable="True" IsWritable="True" />
      <Property Name="Update" Type="System.Runtime.CompilerServices.CallSite`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" IsReadable="True" />
      <Method Name="Create" Type="System.Runtime.CompilerServices.CallSite`1&lt;System.Runtime.CompilerServices.CallSite`1+T&gt;" BaseName="CallSite" BaseType="System.Runtime.CompilerServices.CallSite" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True" IsStatic="True" ContainsGenericMethodParameters="True">
        <GenericTypeParameter Type="System.Runtime.CompilerServices.CallSite`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="CallSiteBinder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object">
      <Property Name="UpdateLabel" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Method Name="Bind" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object">
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
        <Parameter Name="parameters" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ParameterExpression&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="returnLabel" Type="System.Linq.Expressions.LabelTarget" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="BindDelegate" Type="System.Runtime.CompilerServices.CallSiteBinder+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Runtime.CompilerServices.CallSiteBinder+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="site" Type="System.Runtime.CompilerServices.CallSite`1&lt;System.Runtime.CompilerServices.CallSiteBinder+T&gt;" BaseName="CallSite" BaseType="System.Runtime.CompilerServices.CallSite" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
    </Class>
    <Class Name="CallSiteHelpers" Type="System.Runtime.CompilerServices.CallSiteHelpers" BaseName="Object" BaseType="System.Object">
      <Method Name="IsInternalFrame" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="mb" Type="System.Reflection.MethodBase" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Class>
    <Class Name="CallSiteOps" Type="System.Runtime.CompilerServices.CallSiteOps" BaseName="Object" BaseType="System.Object">
      <Method Name="AddRule" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Runtime.CompilerServices.CallSiteOps+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="site" Type="System.Runtime.CompilerServices.CallSite`1&lt;System.Runtime.CompilerServices.CallSiteOps+T&gt;" BaseName="CallSite" BaseType="System.Runtime.CompilerServices.CallSite" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="rule" Type="System.Runtime.CompilerServices.CallSiteOps+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
      </Method>
      <Method Name="Bind" Type="System.Runtime.CompilerServices.CallSiteOps+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Runtime.CompilerServices.CallSiteOps+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="site" Type="System.Runtime.CompilerServices.CallSite`1&lt;System.Runtime.CompilerServices.CallSiteOps+T&gt;" BaseName="CallSite" BaseType="System.Runtime.CompilerServices.CallSite" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="ClearMatch" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="site" Type="System.Runtime.CompilerServices.CallSite" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateMatchmaker" Type="System.Runtime.CompilerServices.CallSite`1&lt;System.Runtime.CompilerServices.CallSiteOps+T&gt;" BaseName="CallSite" BaseType="System.Runtime.CompilerServices.CallSite" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Runtime.CompilerServices.CallSiteOps+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Runtime.CompilerServices.CallSiteOps+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="site" Type="System.Runtime.CompilerServices.CallSite`1&lt;System.Runtime.CompilerServices.CallSiteOps+T&gt;" BaseName="CallSite" BaseType="System.Runtime.CompilerServices.CallSite" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GetCachedRules" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Runtime.CompilerServices.CallSiteOps+T" IsGenericParameterElement="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Runtime.CompilerServices.CallSiteOps+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="cache" Type="System.Runtime.CompilerServices.RuleCache`1&lt;System.Runtime.CompilerServices.CallSiteOps+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GetMatch" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="site" Type="System.Runtime.CompilerServices.CallSite" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetRuleCache" Type="System.Runtime.CompilerServices.RuleCache`1&lt;System.Runtime.CompilerServices.CallSiteOps+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Runtime.CompilerServices.CallSiteOps+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Runtime.CompilerServices.CallSiteOps+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="site" Type="System.Runtime.CompilerServices.CallSite`1&lt;System.Runtime.CompilerServices.CallSiteOps+T&gt;" BaseName="CallSite" BaseType="System.Runtime.CompilerServices.CallSite" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GetRules" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Runtime.CompilerServices.CallSiteOps+T" IsGenericParameterElement="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Runtime.CompilerServices.CallSiteOps+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="site" Type="System.Runtime.CompilerServices.CallSite`1&lt;System.Runtime.CompilerServices.CallSiteOps+T&gt;" BaseName="CallSite" BaseType="System.Runtime.CompilerServices.CallSite" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="MoveRule" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Runtime.CompilerServices.CallSiteOps+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="cache" Type="System.Runtime.CompilerServices.RuleCache`1&lt;System.Runtime.CompilerServices.CallSiteOps+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="rule" Type="System.Runtime.CompilerServices.CallSiteOps+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="i" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SetNotMatched" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="site" Type="System.Runtime.CompilerServices.CallSite" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UpdateRules" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericMethodDefinitionGenericTypeArgument Type="System.Runtime.CompilerServices.CallSiteOps+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="this" Type="System.Runtime.CompilerServices.CallSite`1&lt;System.Runtime.CompilerServices.CallSiteOps+T&gt;" BaseName="CallSite" BaseType="System.Runtime.CompilerServices.CallSite" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="matched" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="Closure" Type="System.Runtime.CompilerServices.Closure" BaseName="Object" BaseType="System.Object">
      <Field Name="Constants" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" IsReadable="True" />
      <Field Name="Locals" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="constants" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
        <Parameter Name="locals" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="DebugInfoGenerator" Type="System.Runtime.CompilerServices.DebugInfoGenerator" BaseName="Object" BaseType="System.Object">
      <Method Name="CreatePdbGenerator" Type="System.Runtime.CompilerServices.DebugInfoGenerator" BaseName="Object" BaseType="System.Object" IsStatic="True" />
      <Method Name="MarkSequencePoint" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="method" Type="System.Linq.Expressions.LambdaExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
        <Parameter Name="ilOffset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="sequencePoint" Type="System.Linq.Expressions.DebugInfoExpression" BaseName="Expression" BaseType="System.Linq.Expressions.Expression" />
      </Method>
    </Class>
    <Class Name="DynamicAttribute" Type="System.Runtime.CompilerServices.DynamicAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="TransformFlags" Type="System.Collections.Generic.IList`1&lt;System.Boolean&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Property>
      <Constructor>
        <Parameter Name="transformFlags" Type="System.Boolean[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Boolean" />
      </Constructor>
    </Class>
    <Class Name="ExecutionScope" Type="System.Runtime.CompilerServices.ExecutionScope" BaseName="Object" BaseType="System.Object">
      <Field Name="Globals" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" IsReadable="True" IsWritable="True" />
      <Field Name="Locals" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" IsReadable="True" IsWritable="True" />
      <Field Name="Parent" Type="System.Runtime.CompilerServices.ExecutionScope" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Method Name="CreateDelegate" Type="System.Delegate" BaseName="Object" BaseType="System.Object">
        <Parameter Name="indexLambda" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="locals" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="CreateHoistedLocals" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      <Method Name="IsolateExpression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="locals" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
    </Class>
    <Interface Name="IRuntimeVariables" Type="System.Runtime.CompilerServices.IRuntimeVariables" IsInterface="True">
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
    </Interface>
    <Interface Name="IStrongBox" Type="System.Runtime.CompilerServices.IStrongBox" IsInterface="True">
      <Property Name="Value" Type="System.Object" IsReadable="True" IsWritable="True" />
    </Interface>
    <Class Name="ReadOnlyCollectionBuilder`1&lt;T&gt;" Type="System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1&lt;System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Generic.IList`1&lt;System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <Property Name="Capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" ContainsGenericMethodParameters="True">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Constructor>
        <Parameter Name="capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable`1&lt;System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="array" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="arrayIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Generic.IEnumerator`1&lt;System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="item" Type="System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="Remove" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="RemoveAt" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Reverse" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="Reverse" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ToArray" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True" />
      <Method Name="ToReadOnlyCollection" Type="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
    </Class>
    <Class Name="RuleCache`1&lt;T&gt;" Type="System.Runtime.CompilerServices.RuleCache`1&lt;System.Runtime.CompilerServices.RuleCache`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Runtime.CompilerServices.RuleCache`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
    </Class>
    <Class Name="RuntimeOps" Type="System.Runtime.CompilerServices.RuntimeOps" BaseName="Object" BaseType="System.Object">
      <Method Name="CreateRuntimeVariables" Type="System.Runtime.CompilerServices.IRuntimeVariables" IsInterface="True" IsStatic="True">
        <Parameter Name="data" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
        <Parameter Name="indexes" Type="System.Int64[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Int64" />
      </Method>
      <Method Name="CreateRuntimeVariables" Type="System.Runtime.CompilerServices.IRuntimeVariables" IsInterface="True" IsStatic="True" />
      <Method Name="ExpandoCheckVersion" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="expando" Type="System.Dynamic.ExpandoObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="version" Type="System.Object" />
      </Method>
      <Method Name="ExpandoPromoteClass" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="expando" Type="System.Dynamic.ExpandoObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="oldClass" Type="System.Object" />
        <Parameter Name="newClass" Type="System.Object" />
      </Method>
      <Method Name="ExpandoTryDeleteValue" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="expando" Type="System.Dynamic.ExpandoObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="indexClass" Type="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ignoreCase" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ExpandoTryGetValue" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="expando" Type="System.Dynamic.ExpandoObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="indexClass" Type="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ignoreCase" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Object&amp;" IsByRef="True" ElementType="System.Object" />
      </Method>
      <Method Name="ExpandoTrySetValue" Type="System.Object" IsStatic="True">
        <Parameter Name="expando" Type="System.Dynamic.ExpandoObject" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="indexClass" Type="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ignoreCase" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="MergeRuntimeVariables" Type="System.Runtime.CompilerServices.IRuntimeVariables" IsInterface="True" IsStatic="True">
        <Parameter Name="first" Type="System.Runtime.CompilerServices.IRuntimeVariables" IsInterface="True" />
        <Parameter Name="second" Type="System.Runtime.CompilerServices.IRuntimeVariables" IsInterface="True" />
        <Parameter Name="indexes" Type="System.Int32[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Int32" />
      </Method>
      <Method Name="Quote" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="hoistedLocals" Type="System.Object" />
        <Parameter Name="locals" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
    </Class>
    <Class Name="StrongBox`1&lt;T&gt;" Type="System.Runtime.CompilerServices.StrongBox`1&lt;System.Runtime.CompilerServices.StrongBox`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Runtime.CompilerServices.StrongBox`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Runtime.CompilerServices.IStrongBox" />
      <Field Name="Value" Type="System.Runtime.CompilerServices.StrongBox`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="value" Type="System.Runtime.CompilerServices.StrongBox`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Constructor>
    </Class>
  </Namespace>
  <Namespace Name="System.Runtime.InteropServices">
    <Class Name="ComAwareEventInfo" Type="System.Runtime.InteropServices.ComAwareEventInfo" BaseName="EventInfo" BaseType="System.Reflection.EventInfo">
      <ImplementedInterface Type="System.Reflection.ICustomAttributeProvider" />
      <ImplementedInterface Type="System.Runtime.InteropServices._MemberInfo" />
      <ImplementedInterface Type="System.Runtime.InteropServices._EventInfo" />
      <Property Name="Attributes" Type="System.Reflection.EventAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="DeclaringType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ReflectedType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="eventName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="AddEventHandler" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetAddMethod" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase">
        <Parameter Name="nonPublic" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetCustomAttributes" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object">
        <Parameter Name="attributeType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="inherit" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetCustomAttributes" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object">
        <Parameter Name="inherit" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetRaiseMethod" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase">
        <Parameter Name="nonPublic" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetRemoveMethod" Type="System.Reflection.MethodInfo" BaseName="MethodBase" BaseType="System.Reflection.MethodBase">
        <Parameter Name="nonPublic" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IsDefined" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="attributeType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="inherit" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="RemoveEventHandler" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.Security">
    <Enumeration Name="ManifestKinds" Type="System.Security.ManifestKinds" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Application" Type="System.Security.ManifestKinds" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="ApplicationAndDeployment" Type="System.Security.ManifestKinds" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Deployment" Type="System.Security.ManifestKinds" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="None" Type="System.Security.ManifestKinds" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.Security.Cryptography">
    <Class Name="AesCng" Type="System.Security.Cryptography.AesCng" BaseName="Aes" BaseType="System.Security.Cryptography.Aes">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Key" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Property Name="KeySize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="keyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="keyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="provider" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="keyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="provider" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="openOptions" Type="System.Security.Cryptography.CngKeyOpenOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="CreateDecryptor" Type="System.Security.Cryptography.ICryptoTransform" IsInterface="True" />
      <Method Name="CreateDecryptor" Type="System.Security.Cryptography.ICryptoTransform" IsInterface="True">
        <Parameter Name="rgbKey" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="rgbIV" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="CreateEncryptor" Type="System.Security.Cryptography.ICryptoTransform" IsInterface="True" />
      <Method Name="CreateEncryptor" Type="System.Security.Cryptography.ICryptoTransform" IsInterface="True">
        <Parameter Name="rgbKey" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="rgbIV" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="GenerateIV" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GenerateKey" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="AesCryptoServiceProvider" Type="System.Security.Cryptography.AesCryptoServiceProvider" BaseName="Aes" BaseType="System.Security.Cryptography.Aes">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Key" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Property Name="KeySize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Method Name="CreateDecryptor" Type="System.Security.Cryptography.ICryptoTransform" IsInterface="True" />
      <Method Name="CreateDecryptor" Type="System.Security.Cryptography.ICryptoTransform" IsInterface="True">
        <Parameter Name="key" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="iv" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="CreateEncryptor" Type="System.Security.Cryptography.ICryptoTransform" IsInterface="True" />
      <Method Name="CreateEncryptor" Type="System.Security.Cryptography.ICryptoTransform" IsInterface="True">
        <Parameter Name="key" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="iv" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="GenerateIV" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GenerateKey" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="AesManaged" Type="System.Security.Cryptography.AesManaged" BaseName="Aes" BaseType="System.Security.Cryptography.Aes">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="FeedbackSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IV" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Property Name="Key" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Property Name="KeySize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Method Name="CreateDecryptor" Type="System.Security.Cryptography.ICryptoTransform" IsInterface="True" />
      <Method Name="CreateDecryptor" Type="System.Security.Cryptography.ICryptoTransform" IsInterface="True">
        <Parameter Name="key" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="iv" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="CreateEncryptor" Type="System.Security.Cryptography.ICryptoTransform" IsInterface="True" />
      <Method Name="CreateEncryptor" Type="System.Security.Cryptography.ICryptoTransform" IsInterface="True">
        <Parameter Name="key" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="iv" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="GenerateIV" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GenerateKey" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="CngAlgorithm" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IEquatable`1&lt;System.Security.Cryptography.CngAlgorithm&gt;" />
      <Property Name="Algorithm" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ECDiffieHellman" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="ECDiffieHellmanP256" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="ECDiffieHellmanP384" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="ECDiffieHellmanP521" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="ECDsa" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="ECDsaP256" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="ECDsaP384" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="ECDsaP521" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="MD5" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Rsa" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Sha1" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Sha256" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Sha384" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Sha512" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Constructor>
        <Parameter Name="algorithm" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="other" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="op_Equality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="left" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="op_Inequality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="left" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="CngAlgorithmGroup" Type="System.Security.Cryptography.CngAlgorithmGroup" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IEquatable`1&lt;System.Security.Cryptography.CngAlgorithmGroup&gt;" />
      <Property Name="AlgorithmGroup" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="DiffieHellman" Type="System.Security.Cryptography.CngAlgorithmGroup" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Dsa" Type="System.Security.Cryptography.CngAlgorithmGroup" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="ECDiffieHellman" Type="System.Security.Cryptography.CngAlgorithmGroup" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="ECDsa" Type="System.Security.Cryptography.CngAlgorithmGroup" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Rsa" Type="System.Security.Cryptography.CngAlgorithmGroup" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Constructor>
        <Parameter Name="algorithmGroup" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="other" Type="System.Security.Cryptography.CngAlgorithmGroup" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="op_Equality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="left" Type="System.Security.Cryptography.CngAlgorithmGroup" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngAlgorithmGroup" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="op_Inequality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="left" Type="System.Security.Cryptography.CngAlgorithmGroup" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngAlgorithmGroup" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Enumeration Name="CngExportPolicies" Type="System.Security.Cryptography.CngExportPolicies" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AllowArchiving" Type="System.Security.Cryptography.CngExportPolicies" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="AllowExport" Type="System.Security.Cryptography.CngExportPolicies" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="AllowPlaintextArchiving" Type="System.Security.Cryptography.CngExportPolicies" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="AllowPlaintextExport" Type="System.Security.Cryptography.CngExportPolicies" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="None" Type="System.Security.Cryptography.CngExportPolicies" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="CngKey" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Algorithm" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="AlgorithmGroup" Type="System.Security.Cryptography.CngAlgorithmGroup" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ExportPolicy" Type="System.Security.Cryptography.CngExportPolicies" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="Handle" Type="Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" BaseName="SafeNCryptHandle" BaseType="Microsoft.Win32.SafeHandles.SafeNCryptHandle" IsReadable="True" />
      <Property Name="IsEphemeral" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IsMachineKey" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="KeyName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="KeySize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="KeyUsage" Type="System.Security.Cryptography.CngKeyUsages" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="ParentWindowHandle" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Provider" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ProviderHandle" Type="Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" BaseName="SafeNCryptHandle" BaseType="Microsoft.Win32.SafeHandles.SafeNCryptHandle" IsReadable="True" />
      <Property Name="UIPolicy" Type="System.Security.Cryptography.CngUIPolicy" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="UniqueName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="Create" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="algorithm" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Create" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="algorithm" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="keyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Create" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="algorithm" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="keyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="creationParameters" Type="System.Security.Cryptography.CngKeyCreationParameters" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Delete" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Exists" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="keyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Exists" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="keyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="provider" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Exists" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="keyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="provider" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="options" Type="System.Security.Cryptography.CngKeyOpenOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Export" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="format" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetProperty" Type="System.Security.Cryptography.CngProperty" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="options" Type="System.Security.Cryptography.CngPropertyOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="HasProperty" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="options" Type="System.Security.Cryptography.CngPropertyOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Import" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="keyBlob" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="format" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Import" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="keyBlob" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="format" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="provider" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Open" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="keyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Open" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="keyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="provider" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Open" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="keyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="provider" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="openOptions" Type="System.Security.Cryptography.CngKeyOpenOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Open" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="keyHandle" Type="Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" BaseName="SafeNCryptHandle" BaseType="Microsoft.Win32.SafeHandles.SafeNCryptHandle" />
        <Parameter Name="keyHandleOpenOptions" Type="System.Security.Cryptography.CngKeyHandleOpenOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="SetProperty" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="property" Type="System.Security.Cryptography.CngProperty" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="CngKeyBlobFormat" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IEquatable`1&lt;System.Security.Cryptography.CngKeyBlobFormat&gt;" />
      <Property Name="EccFullPrivateBlob" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="EccFullPublicBlob" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="EccPrivateBlob" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="EccPublicBlob" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Format" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="GenericPrivateBlob" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="GenericPublicBlob" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="OpaqueTransportBlob" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Pkcs8PrivateBlob" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Constructor>
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="other" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="op_Equality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="left" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="op_Inequality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="left" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Enumeration Name="CngKeyCreationOptions" Type="System.Security.Cryptography.CngKeyCreationOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="MachineKey" Type="System.Security.Cryptography.CngKeyCreationOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="None" Type="System.Security.Cryptography.CngKeyCreationOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="OverwriteExistingKey" Type="System.Security.Cryptography.CngKeyCreationOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="128" />
    </Enumeration>
    <Class Name="CngKeyCreationParameters" Type="System.Security.Cryptography.CngKeyCreationParameters" BaseName="Object" BaseType="System.Object">
      <Property Name="ExportPolicy" Type="System.Nullable`1&lt;System.Security.Cryptography.CngExportPolicies&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True" IsWritable="True">
        <GenericTypeArgument Type="System.Security.Cryptography.CngExportPolicies" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Property>
      <Property Name="KeyCreationOptions" Type="System.Security.Cryptography.CngKeyCreationOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="KeyUsage" Type="System.Nullable`1&lt;System.Security.Cryptography.CngKeyUsages&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True" IsWritable="True">
        <GenericTypeArgument Type="System.Security.Cryptography.CngKeyUsages" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Property>
      <Property Name="Parameters" Type="System.Security.Cryptography.CngPropertyCollection" BaseName="Collection`1&lt;CngProperty&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Security.Cryptography.CngProperty&gt;" IsReadable="True" />
      <Property Name="ParentWindowHandle" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Provider" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="UIPolicy" Type="System.Security.Cryptography.CngUIPolicy" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
    </Class>
    <Enumeration Name="CngKeyHandleOpenOptions" Type="System.Security.Cryptography.CngKeyHandleOpenOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="EphemeralKey" Type="System.Security.Cryptography.CngKeyHandleOpenOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="None" Type="System.Security.Cryptography.CngKeyHandleOpenOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Enumeration Name="CngKeyOpenOptions" Type="System.Security.Cryptography.CngKeyOpenOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="MachineKey" Type="System.Security.Cryptography.CngKeyOpenOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="None" Type="System.Security.Cryptography.CngKeyOpenOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Silent" Type="System.Security.Cryptography.CngKeyOpenOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
      <Field Name="UserKey" Type="System.Security.Cryptography.CngKeyOpenOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Enumeration Name="CngKeyUsages" Type="System.Security.Cryptography.CngKeyUsages" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AllUsages" Type="System.Security.Cryptography.CngKeyUsages" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16777215" />
      <Field Name="Decryption" Type="System.Security.Cryptography.CngKeyUsages" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="KeyAgreement" Type="System.Security.Cryptography.CngKeyUsages" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="None" Type="System.Security.Cryptography.CngKeyUsages" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Signing" Type="System.Security.Cryptography.CngKeyUsages" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Struct Name="CngProperty" Type="System.Security.Cryptography.CngProperty" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
      <ImplementedInterface Type="System.IEquatable`1&lt;System.Security.Cryptography.CngProperty&gt;" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Options" Type="System.Security.Cryptography.CngPropertyOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="options" Type="System.Security.Cryptography.CngPropertyOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="other" Type="System.Security.Cryptography.CngProperty" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetValue" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      <Method Name="op_Equality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="left" Type="System.Security.Cryptography.CngProperty" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngProperty" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="op_Inequality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="left" Type="System.Security.Cryptography.CngProperty" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngProperty" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Struct>
    <Class Name="CngPropertyCollection" Type="System.Security.Cryptography.CngPropertyCollection" BaseName="Collection`1&lt;CngProperty&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Security.Cryptography.CngProperty&gt;">
      <ImplementedInterface Type="System.Collections.Generic.IList`1&lt;System.Security.Cryptography.CngProperty&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Security.Cryptography.CngProperty&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Security.Cryptography.CngProperty&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyList`1&lt;System.Security.Cryptography.CngProperty&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Security.Cryptography.CngProperty&gt;" />
    </Class>
    <Enumeration Name="CngPropertyOptions" Type="System.Security.Cryptography.CngPropertyOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="CustomProperty" Type="System.Security.Cryptography.CngPropertyOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1073741824" />
      <Field Name="None" Type="System.Security.Cryptography.CngPropertyOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Persist" Type="System.Security.Cryptography.CngPropertyOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2147483648" />
    </Enumeration>
    <Class Name="CngProvider" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IEquatable`1&lt;System.Security.Cryptography.CngProvider&gt;" />
      <Property Name="MicrosoftSmartCardKeyStorageProvider" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="MicrosoftSoftwareKeyStorageProvider" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Provider" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="provider" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="other" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="op_Equality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="left" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="op_Inequality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="left" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="CngUIPolicy" Type="System.Security.Cryptography.CngUIPolicy" BaseName="Object" BaseType="System.Object">
      <Property Name="CreationTitle" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Description" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="FriendlyName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ProtectionLevel" Type="System.Security.Cryptography.CngUIProtectionLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="UseContext" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="protectionLevel" Type="System.Security.Cryptography.CngUIProtectionLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="protectionLevel" Type="System.Security.Cryptography.CngUIProtectionLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="friendlyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="protectionLevel" Type="System.Security.Cryptography.CngUIProtectionLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="friendlyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="description" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="protectionLevel" Type="System.Security.Cryptography.CngUIProtectionLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="friendlyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="description" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="useContext" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="protectionLevel" Type="System.Security.Cryptography.CngUIProtectionLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="friendlyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="description" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="useContext" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="creationTitle" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Enumeration Name="CngUIProtectionLevels" Type="System.Security.Cryptography.CngUIProtectionLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="ForceHighProtection" Type="System.Security.Cryptography.CngUIProtectionLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="None" Type="System.Security.Cryptography.CngUIProtectionLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="ProtectKey" Type="System.Security.Cryptography.CngUIProtectionLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="DSACng" Type="System.Security.Cryptography.DSACng" BaseName="DSA" BaseType="System.Security.Cryptography.DSA">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Key" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="KeyExchangeAlgorithm" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Security.Cryptography.KeySizes" IsReadable="True" />
      <Property Name="SignatureAlgorithm" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="keySize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="key" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="CreateSignature" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="rgbHash" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="ExportParameters" Type="System.Security.Cryptography.DSAParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="includePrivateParameters" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ImportParameters" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="parameters" Type="System.Security.Cryptography.DSAParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="VerifySignature" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rgbHash" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
    </Class>
    <Struct Name="ECCurve" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
      <Field Name="A" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Field Name="B" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Field Name="Cofactor" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Field Name="CurveType" Type="System.Security.Cryptography.ECCurve+ECCurveType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsWritable="True" />
      <Field Name="G" Type="System.Security.Cryptography.ECPoint" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Field Name="Hash" Type="System.Nullable`1&lt;System.Security.Cryptography.HashAlgorithmName&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True" IsWritable="True" />
      <Field Name="Order" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Field Name="Polynomial" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Field Name="Prime" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Field Name="Seed" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Property Name="IsCharacteristic2" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsExplicit" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsNamed" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsPrime" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Oid" Type="System.Security.Cryptography.Oid" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Method Name="CreateFromFriendlyName" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="oidFriendlyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateFromOid" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="curveOid" Type="System.Security.Cryptography.Oid" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateFromValue" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="oidValue" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Validate" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Struct>
    <Enumeration Name="ECCurve.ECCurveType" Type="System.Security.Cryptography.ECCurve+ECCurveType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Characteristic2" Type="System.Security.Cryptography.ECCurve+ECCurveType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Implicit" Type="System.Security.Cryptography.ECCurve+ECCurveType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Named" Type="System.Security.Cryptography.ECCurve+ECCurveType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="PrimeMontgomery" Type="System.Security.Cryptography.ECCurve+ECCurveType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="PrimeShortWeierstrass" Type="System.Security.Cryptography.ECCurve+ECCurveType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="PrimeTwistedEdwards" Type="System.Security.Cryptography.ECCurve+ECCurveType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Class Name="ECCurve.NamedCurves" Type="System.Security.Cryptography.ECCurve+NamedCurves" BaseName="Object" BaseType="System.Object" IsNested="True">
      <Property Name="brainpoolP160r1" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="brainpoolP160t1" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="brainpoolP192r1" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="brainpoolP192t1" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="brainpoolP224r1" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="brainpoolP224t1" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="brainpoolP256r1" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="brainpoolP256t1" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="brainpoolP320r1" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="brainpoolP320t1" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="brainpoolP384r1" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="brainpoolP384t1" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="brainpoolP512r1" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="brainpoolP512t1" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="nistP256" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="nistP384" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="nistP521" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
    </Class>
    <Class Name="ECDiffieHellman" Type="System.Security.Cryptography.ECDiffieHellman" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="KeyExchangeAlgorithm" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="PublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SignatureAlgorithm" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="Create" Type="System.Security.Cryptography.ECDiffieHellman" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" IsStatic="True" />
      <Method Name="Create" Type="System.Security.Cryptography.ECDiffieHellman" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" IsStatic="True">
        <Parameter Name="algorithm" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Create" Type="System.Security.Cryptography.ECDiffieHellman" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" IsStatic="True">
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Create" Type="System.Security.Cryptography.ECDiffieHellman" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" IsStatic="True">
        <Parameter Name="parameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="DeriveKeyFromHash" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="DeriveKeyFromHash" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="secretPrepend" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="secretAppend" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="DeriveKeyFromHmac" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="hmacKey" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="DeriveKeyFromHmac" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="hmacKey" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="secretPrepend" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="secretAppend" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="DeriveKeyMaterial" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DeriveKeyTls" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="prfLabel" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="prfSeed" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="ExportExplicitParameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="includePrivateParameters" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ExportParameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="includePrivateParameters" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GenerateKey" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ImportParameters" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="parameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="ECDiffieHellmanCng" Type="System.Security.Cryptography.ECDiffieHellmanCng" BaseName="ECDiffieHellman" BaseType="System.Security.Cryptography.ECDiffieHellman">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="HashAlgorithm" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="HmacKey" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Property Name="Key" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="KeyDerivationFunction" Type="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="Label" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Property Name="PublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SecretAppend" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Property Name="SecretPrepend" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Property Name="Seed" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Property Name="UseSecretAgreementAsHmacKey" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="keySize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="key" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="DeriveKeyFromHash" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="secretPrepend" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="secretAppend" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="DeriveKeyFromHmac" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="hmacKey" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="secretPrepend" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="secretAppend" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="DeriveKeyMaterial" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DeriveKeyMaterial" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DeriveKeyTls" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="prfLabel" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="prfSeed" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="DeriveSecretAgreementHandle" Type="Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" BaseName="SafeNCryptHandle" BaseType="Microsoft.Win32.SafeHandles.SafeNCryptHandle">
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DeriveSecretAgreementHandle" Type="Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" BaseName="SafeNCryptHandle" BaseType="Microsoft.Win32.SafeHandles.SafeNCryptHandle">
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ExportExplicitParameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="includePrivateParameters" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ExportParameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="includePrivateParameters" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="FromXmlString" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="xmlString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="FromXmlString" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="xml" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="GenerateKey" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ImportParameters" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="parameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ToXmlString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="includePrivateParameters" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ToXmlString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
    </Class>
    <Class Name="ECDiffieHellmanCngPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanCngPublicKey" BaseName="ECDiffieHellmanPublicKey" BaseType="System.Security.Cryptography.ECDiffieHellmanPublicKey">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="BlobFormat" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="ExportExplicitParameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ExportParameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="FromByteArray" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="publicKeyBlob" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="format" Type="System.Security.Cryptography.CngKeyBlobFormat" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="FromXmlString" Type="System.Security.Cryptography.ECDiffieHellmanCngPublicKey" BaseName="ECDiffieHellmanPublicKey" BaseType="System.Security.Cryptography.ECDiffieHellmanPublicKey" IsStatic="True">
        <Parameter Name="xml" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Import" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" />
      <Method Name="ToXmlString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Enumeration Name="ECDiffieHellmanKeyDerivationFunction" Type="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Hash" Type="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Hmac" Type="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Tls" Type="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Class Name="ECDiffieHellmanPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ExportExplicitParameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ExportParameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToByteArray" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      <Method Name="ToXmlString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="ECDsa" Type="System.Security.Cryptography.ECDsa" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="KeyExchangeAlgorithm" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SignatureAlgorithm" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="Create" Type="System.Security.Cryptography.ECDsa" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" IsStatic="True" />
      <Method Name="Create" Type="System.Security.Cryptography.ECDsa" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" IsStatic="True">
        <Parameter Name="algorithm" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Create" Type="System.Security.Cryptography.ECDsa" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" IsStatic="True">
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Create" Type="System.Security.Cryptography.ECDsa" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" IsStatic="True">
        <Parameter Name="parameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ExportExplicitParameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="includePrivateParameters" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ExportParameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="includePrivateParameters" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GenerateKey" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ImportParameters" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="parameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SignData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SignData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SignData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="data" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SignHash" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="hash" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="VerifyData" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="signature" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="VerifyData" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="signature" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="VerifyData" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="data" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="signature" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="VerifyHash" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="hash" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="signature" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
    </Class>
    <Class Name="ECDsaCng" Type="System.Security.Cryptography.ECDsaCng" BaseName="ECDsa" BaseType="System.Security.Cryptography.ECDsa">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="HashAlgorithm" Type="System.Security.Cryptography.CngAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Key" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="keySize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="key" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="ExportExplicitParameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="includePrivateParameters" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ExportParameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="includePrivateParameters" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="FromXmlString" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="xmlString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="FromXmlString" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="xml" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="GenerateKey" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ImportParameters" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="parameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SignData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="SignData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SignData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="data" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Method>
      <Method Name="SignHash" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="hash" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="ToXmlString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="includePrivateParameters" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ToXmlString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="VerifyData" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="signature" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="VerifyData" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="signature" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="VerifyData" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="data" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="signature" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="VerifyHash" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="hash" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="signature" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
    </Class>
    <Enumeration Name="ECKeyXmlFormat" Type="System.Security.Cryptography.ECKeyXmlFormat" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Rfc4050" Type="System.Security.Cryptography.ECKeyXmlFormat" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Struct Name="ECParameters" Type="System.Security.Cryptography.ECParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
      <Field Name="Curve" Type="System.Security.Cryptography.ECCurve" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Field Name="D" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Field Name="Q" Type="System.Security.Cryptography.ECPoint" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Method Name="Validate" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Struct>
    <Struct Name="ECPoint" Type="System.Security.Cryptography.ECPoint" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
      <Field Name="X" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Field Name="Y" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
    </Struct>
    <Class Name="IncrementalHash" Type="System.Security.Cryptography.IncrementalHash" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="AlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="AppendData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="AppendData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CreateHash" Type="System.Security.Cryptography.IncrementalHash" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CreateHMAC" Type="System.Security.Cryptography.IncrementalHash" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="key" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetHashAndReset" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
    </Class>
    <Class Name="ManifestSignatureInformation" Type="System.Security.Cryptography.ManifestSignatureInformation" BaseName="Object" BaseType="System.Object">
      <Property Name="AuthenticodeSignature" Type="System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Manifest" Type="System.Security.ManifestKinds" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="StrongNameSignature" Type="System.Security.Cryptography.StrongNameSignatureInformation" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="VerifySignature" Type="System.Security.Cryptography.ManifestSignatureInformationCollection" BaseName="ReadOnlyCollection`1&lt;ManifestSignatureInformation&gt;" BaseType="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Security.Cryptography.ManifestSignatureInformation&gt;" IsStatic="True">
        <Parameter Name="application" Type="System.ActivationContext" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="VerifySignature" Type="System.Security.Cryptography.ManifestSignatureInformationCollection" BaseName="ReadOnlyCollection`1&lt;ManifestSignatureInformation&gt;" BaseType="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Security.Cryptography.ManifestSignatureInformation&gt;" IsStatic="True">
        <Parameter Name="application" Type="System.ActivationContext" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="manifests" Type="System.Security.ManifestKinds" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="VerifySignature" Type="System.Security.Cryptography.ManifestSignatureInformationCollection" BaseName="ReadOnlyCollection`1&lt;ManifestSignatureInformation&gt;" BaseType="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Security.Cryptography.ManifestSignatureInformation&gt;" IsStatic="True">
        <Parameter Name="application" Type="System.ActivationContext" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="manifests" Type="System.Security.ManifestKinds" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="revocationFlag" Type="System.Security.Cryptography.X509Certificates.X509RevocationFlag" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="revocationMode" Type="System.Security.Cryptography.X509Certificates.X509RevocationMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
    </Class>
    <Class Name="ManifestSignatureInformationCollection" Type="System.Security.Cryptography.ManifestSignatureInformationCollection" BaseName="ReadOnlyCollection`1&lt;ManifestSignatureInformation&gt;" BaseType="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Security.Cryptography.ManifestSignatureInformation&gt;">
      <ImplementedInterface Type="System.Collections.Generic.IList`1&lt;System.Security.Cryptography.ManifestSignatureInformation&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Security.Cryptography.ManifestSignatureInformation&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Security.Cryptography.ManifestSignatureInformation&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyList`1&lt;System.Security.Cryptography.ManifestSignatureInformation&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Security.Cryptography.ManifestSignatureInformation&gt;" />
    </Class>
    <Class Name="MD5Cng" Type="System.Security.Cryptography.MD5Cng" BaseName="MD5" BaseType="System.Security.Cryptography.MD5">
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Security.Cryptography.ICryptoTransform" />
      <Method Name="Initialize" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="RSACng" Type="System.Security.Cryptography.RSACng" BaseName="RSA" BaseType="System.Security.Cryptography.RSA">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Key" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="KeyExchangeAlgorithm" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SignatureAlgorithm" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="keySize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="key" Type="System.Security.Cryptography.CngKey" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Decrypt" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="padding" Type="System.Security.Cryptography.RSAEncryptionPadding" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DecryptValue" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="rgb" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="Encrypt" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="padding" Type="System.Security.Cryptography.RSAEncryptionPadding" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="EncryptValue" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="rgb" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="ExportParameters" Type="System.Security.Cryptography.RSAParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="includePrivateParameters" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ImportParameters" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="parameters" Type="System.Security.Cryptography.RSAParameters" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SignHash" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="hash" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="VerifyHash" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="hash" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="signature" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="SHA1Cng" Type="System.Security.Cryptography.SHA1Cng" BaseName="SHA1" BaseType="System.Security.Cryptography.SHA1">
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Security.Cryptography.ICryptoTransform" />
      <Method Name="Initialize" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="SHA256Cng" Type="System.Security.Cryptography.SHA256Cng" BaseName="SHA256" BaseType="System.Security.Cryptography.SHA256">
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Security.Cryptography.ICryptoTransform" />
      <Method Name="Initialize" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="SHA256CryptoServiceProvider" Type="System.Security.Cryptography.SHA256CryptoServiceProvider" BaseName="SHA256" BaseType="System.Security.Cryptography.SHA256">
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Security.Cryptography.ICryptoTransform" />
      <Method Name="Initialize" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="SHA384Cng" Type="System.Security.Cryptography.SHA384Cng" BaseName="SHA384" BaseType="System.Security.Cryptography.SHA384">
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Security.Cryptography.ICryptoTransform" />
      <Method Name="Initialize" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="SHA384CryptoServiceProvider" Type="System.Security.Cryptography.SHA384CryptoServiceProvider" BaseName="SHA384" BaseType="System.Security.Cryptography.SHA384">
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Security.Cryptography.ICryptoTransform" />
      <Method Name="Initialize" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="SHA512Cng" Type="System.Security.Cryptography.SHA512Cng" BaseName="SHA512" BaseType="System.Security.Cryptography.SHA512">
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Security.Cryptography.ICryptoTransform" />
      <Method Name="Initialize" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="SHA512CryptoServiceProvider" Type="System.Security.Cryptography.SHA512CryptoServiceProvider" BaseName="SHA512" BaseType="System.Security.Cryptography.SHA512">
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Security.Cryptography.ICryptoTransform" />
      <Method Name="Initialize" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Enumeration Name="SignatureVerificationResult" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AssemblyIdentityMismatch" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="BadDigest" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146869232" />
      <Field Name="BadSignatureFormat" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762749" />
      <Field Name="BasicConstraintsNotObserved" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146869223" />
      <Field Name="CertificateExpired" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762495" />
      <Field Name="CertificateExplicitlyDistrusted" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762479" />
      <Field Name="CertificateMalformed" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762488" />
      <Field Name="CertificateNotExplicitlyTrusted" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762748" />
      <Field Name="CertificateRevoked" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762484" />
      <Field Name="CertificateUsageNotAllowed" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762490" />
      <Field Name="ContainingSignatureInvalid" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="CouldNotBuildChain" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762486" />
      <Field Name="GenericTrustFailure" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762485" />
      <Field Name="InvalidCertificateName" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762476" />
      <Field Name="InvalidCertificatePolicy" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762477" />
      <Field Name="InvalidCertificateRole" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762493" />
      <Field Name="InvalidCertificateSignature" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146869244" />
      <Field Name="InvalidCertificateUsage" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762480" />
      <Field Name="InvalidCountersignature" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146869245" />
      <Field Name="InvalidSignerCertificate" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146869246" />
      <Field Name="InvalidTimePeriodNesting" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762494" />
      <Field Name="InvalidTimestamp" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146869243" />
      <Field Name="IssuerChainingError" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762489" />
      <Field Name="MissingSignature" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762496" />
      <Field Name="PathLengthConstraintViolated" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762492" />
      <Field Name="PublicKeyTokenMismatch" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="PublisherMismatch" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="RevocationCheckFailure" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762482" />
      <Field Name="SystemError" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146869247" />
      <Field Name="UnknownCriticalExtension" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762491" />
      <Field Name="UnknownTrustProvider" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762751" />
      <Field Name="UnknownVerificationAction" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762750" />
      <Field Name="UntrustedCertificationAuthority" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762478" />
      <Field Name="UntrustedRootCertificate" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762487" />
      <Field Name="UntrustedTestRootCertificate" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2146762483" />
      <Field Name="Valid" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="StrongNameSignatureInformation" Type="System.Security.Cryptography.StrongNameSignatureInformation" BaseName="Object" BaseType="System.Object">
      <Property Name="HashAlgorithm" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="HResult" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsValid" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PublicKey" Type="System.Security.Cryptography.AsymmetricAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="VerificationResult" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
    </Class>
    <Class Name="TripleDESCng" Type="System.Security.Cryptography.TripleDESCng" BaseName="TripleDES" BaseType="System.Security.Cryptography.TripleDES">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Key" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Property Name="KeySize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="keyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="keyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="provider" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="keyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="provider" Type="System.Security.Cryptography.CngProvider" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="openOptions" Type="System.Security.Cryptography.CngKeyOpenOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="CreateDecryptor" Type="System.Security.Cryptography.ICryptoTransform" IsInterface="True" />
      <Method Name="CreateDecryptor" Type="System.Security.Cryptography.ICryptoTransform" IsInterface="True">
        <Parameter Name="rgbKey" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="rgbIV" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="CreateEncryptor" Type="System.Security.Cryptography.ICryptoTransform" IsInterface="True" />
      <Method Name="CreateEncryptor" Type="System.Security.Cryptography.ICryptoTransform" IsInterface="True">
        <Parameter Name="rgbKey" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="rgbIV" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="GenerateIV" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GenerateKey" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
  </Namespace>
  <Namespace Name="System.Security.Cryptography.X509Certificates">
    <Class Name="AuthenticodeSignatureInformation" Type="System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" BaseName="Object" BaseType="System.Object">
      <Property Name="Description" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="DescriptionUrl" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="HashAlgorithm" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="HResult" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SignatureChain" Type="System.Security.Cryptography.X509Certificates.X509Chain" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SigningCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" IsReadable="True" />
      <Property Name="Timestamp" Type="System.Security.Cryptography.X509Certificates.TimestampInformation" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="TrustStatus" Type="System.Security.Cryptography.X509Certificates.TrustStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="VerificationResult" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
    </Class>
    <Class Name="CertificateRequest" Type="System.Security.Cryptography.X509Certificates.CertificateRequest" BaseName="Object" BaseType="System.Object">
      <Property Name="CertificateExtensions" Type="System.Collections.ObjectModel.Collection`1&lt;System.Security.Cryptography.X509Certificates.X509Extension&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Security.Cryptography.X509Certificates.X509Extension" BaseName="AsnEncodedData" BaseType="System.Security.Cryptography.AsnEncodedData" />
      </Property>
      <Property Name="HashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PublicKey" Type="System.Security.Cryptography.X509Certificates.PublicKey" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SubjectName" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedName" BaseName="AsnEncodedData" BaseType="System.Security.Cryptography.AsnEncodedData" IsReadable="True" />
      <Constructor>
        <Parameter Name="subjectName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="key" Type="System.Security.Cryptography.ECDsa" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="subjectName" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedName" BaseName="AsnEncodedData" BaseType="System.Security.Cryptography.AsnEncodedData" />
        <Parameter Name="key" Type="System.Security.Cryptography.ECDsa" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="subjectName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="key" Type="System.Security.Cryptography.RSA" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="subjectName" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedName" BaseName="AsnEncodedData" BaseType="System.Security.Cryptography.AsnEncodedData" />
        <Parameter Name="key" Type="System.Security.Cryptography.RSA" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="subjectName" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedName" BaseName="AsnEncodedData" BaseType="System.Security.Cryptography.AsnEncodedData" />
        <Parameter Name="publicKey" Type="System.Security.Cryptography.X509Certificates.PublicKey" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Create" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate">
        <Parameter Name="issuerCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="notBefore" Type="System.DateTimeOffset" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="notAfter" Type="System.DateTimeOffset" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="serialNumber" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="Create" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate">
        <Parameter Name="issuerName" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedName" BaseName="AsnEncodedData" BaseType="System.Security.Cryptography.AsnEncodedData" />
        <Parameter Name="generator" Type="System.Security.Cryptography.X509Certificates.X509SignatureGenerator" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="notBefore" Type="System.DateTimeOffset" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="notAfter" Type="System.DateTimeOffset" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="serialNumber" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="CreateSelfSigned" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate">
        <Parameter Name="notBefore" Type="System.DateTimeOffset" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="notAfter" Type="System.DateTimeOffset" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CreateSigningRequest" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      <Method Name="CreateSigningRequest" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="signatureGenerator" Type="System.Security.Cryptography.X509Certificates.X509SignatureGenerator" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="DSACertificateExtensions" Type="System.Security.Cryptography.X509Certificates.DSACertificateExtensions" BaseName="Object" BaseType="System.Object">
      <Method Name="CopyWithPrivateKey" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" IsStatic="True">
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="privateKey" Type="System.Security.Cryptography.DSA" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Method>
      <Method Name="GetDSAPrivateKey" Type="System.Security.Cryptography.DSA" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" IsStatic="True">
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Method>
      <Method Name="GetDSAPublicKey" Type="System.Security.Cryptography.DSA" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" IsStatic="True">
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Method>
    </Class>
    <Class Name="ECDsaCertificateExtensions" Type="System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions" BaseName="Object" BaseType="System.Object">
      <Method Name="CopyWithPrivateKey" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" IsStatic="True">
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="privateKey" Type="System.Security.Cryptography.ECDsa" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Method>
      <Method Name="GetECDsaPrivateKey" Type="System.Security.Cryptography.ECDsa" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" IsStatic="True">
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Method>
      <Method Name="GetECDsaPublicKey" Type="System.Security.Cryptography.ECDsa" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" IsStatic="True">
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Method>
    </Class>
    <Class Name="RSACertificateExtensions" Type="System.Security.Cryptography.X509Certificates.RSACertificateExtensions" BaseName="Object" BaseType="System.Object">
      <Method Name="CopyWithPrivateKey" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" IsStatic="True">
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="privateKey" Type="System.Security.Cryptography.RSA" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Method>
      <Method Name="GetRSAPrivateKey" Type="System.Security.Cryptography.RSA" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" IsStatic="True">
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Method>
      <Method Name="GetRSAPublicKey" Type="System.Security.Cryptography.RSA" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" IsStatic="True">
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Method>
    </Class>
    <Class Name="SubjectAlternativeNameBuilder" Type="System.Security.Cryptography.X509Certificates.SubjectAlternativeNameBuilder" BaseName="Object" BaseType="System.Object">
      <Method Name="AddDnsName" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="dnsName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddEmailAddress" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="emailAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddIpAddress" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="ipAddress" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddUri" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="uri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddUserPrincipalName" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="upn" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Build" Type="System.Security.Cryptography.X509Certificates.X509Extension" BaseName="AsnEncodedData" BaseType="System.Security.Cryptography.AsnEncodedData">
        <Parameter Name="critical" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="TimestampInformation" Type="System.Security.Cryptography.X509Certificates.TimestampInformation" BaseName="Object" BaseType="System.Object">
      <Property Name="HashAlgorithm" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="HResult" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsValid" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SignatureChain" Type="System.Security.Cryptography.X509Certificates.X509Chain" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SigningCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" IsReadable="True" />
      <Property Name="Timestamp" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="VerificationResult" Type="System.Security.Cryptography.SignatureVerificationResult" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
    </Class>
    <Enumeration Name="TrustStatus" Type="System.Security.Cryptography.X509Certificates.TrustStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="KnownIdentity" Type="System.Security.Cryptography.X509Certificates.TrustStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Trusted" Type="System.Security.Cryptography.X509Certificates.TrustStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="UnknownIdentity" Type="System.Security.Cryptography.X509Certificates.TrustStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Untrusted" Type="System.Security.Cryptography.X509Certificates.TrustStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="X509SignatureGenerator" Type="System.Security.Cryptography.X509Certificates.X509SignatureGenerator" BaseName="Object" BaseType="System.Object">
      <Property Name="PublicKey" Type="System.Security.Cryptography.X509Certificates.PublicKey" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="CreateForECDsa" Type="System.Security.Cryptography.X509Certificates.X509SignatureGenerator" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="key" Type="System.Security.Cryptography.ECDsa" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Method>
      <Method Name="CreateForRSA" Type="System.Security.Cryptography.X509Certificates.X509SignatureGenerator" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="key" Type="System.Security.Cryptography.RSA" BaseName="AsymmetricAlgorithm" BaseType="System.Security.Cryptography.AsymmetricAlgorithm" />
        <Parameter Name="signaturePadding" Type="System.Security.Cryptography.RSASignaturePadding" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetSignatureAlgorithmIdentifier" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SignData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.Threading">
    <Enumeration Name="LockRecursionPolicy" Type="System.Threading.LockRecursionPolicy" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="NoRecursion" Type="System.Threading.LockRecursionPolicy" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="SupportsRecursion" Type="System.Threading.LockRecursionPolicy" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="ReaderWriterLockSlim" Type="System.Threading.ReaderWriterLockSlim" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="CurrentReadCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsReadLockHeld" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsUpgradeableReadLockHeld" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsWriteLockHeld" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="RecursionPolicy" Type="System.Threading.LockRecursionPolicy" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="RecursiveReadCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="RecursiveUpgradeCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="RecursiveWriteCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="WaitingReadCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="WaitingUpgradeCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="WaitingWriteCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="recursionPolicy" Type="System.Threading.LockRecursionPolicy" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="EnterReadLock" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="EnterUpgradeableReadLock" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="EnterWriteLock" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ExitReadLock" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ExitUpgradeableReadLock" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ExitWriteLock" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="TryEnterReadLock" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="timeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TryEnterReadLock" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="millisecondsTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TryEnterUpgradeableReadLock" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="timeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TryEnterUpgradeableReadLock" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="millisecondsTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TryEnterWriteLock" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="timeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TryEnterWriteLock" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="millisecondsTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.Threading.Tasks">
    <Class Name="TaskExtensions" Type="System.Threading.Tasks.TaskExtensions" BaseName="Object" BaseType="System.Object">
      <Method Name="Unwrap" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="task" Type="System.Threading.Tasks.Task`1&lt;System.Threading.Tasks.Task&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Unwrap" Type="System.Threading.Tasks.Task`1&lt;System.Threading.Tasks.TaskExtensions+TResult&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" IsGenericMethod="True" IsGenericMethodDefinition="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Threading.Tasks.TaskExtensions+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <GenericMethodDefinitionGenericTypeArgument Type="System.Threading.Tasks.TaskExtensions+TResult" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" DeclaredByMethod="True" />
        <Parameter Name="task" Type="System.Threading.Tasks.Task`1&lt;System.Threading.Tasks.Task`1&lt;System.Threading.Tasks.TaskExtensions+TResult&gt;&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
    </Class>
  </Namespace>
</Assembly>