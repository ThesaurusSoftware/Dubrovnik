<?xml version="1.0" encoding="utf-8"?>
<Assembly Name="System" FullName="System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Path="C:\Windows\Microsoft.NET\Framework\v4.0.30319\System.dll">
  <Reference Name="mscorlib" FullName="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <Reference Name="System.Configuration" FullName="System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <Reference Name="System.Xml" FullName="System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <Namespace Name="Microsoft.CSharp">
    <Class Name="CSharpCodeProvider" Type="Microsoft.CSharp.CSharpCodeProvider" BaseName="CodeDomProvider" BaseType="System.CodeDom.Compiler.CodeDomProvider">
      <ImplementedInterface Type="System.ComponentModel.IComponent" />
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="FileExtension" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary`2&lt;System.String, System.String&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Constructor>
      <Method Name="CreateCompiler" Type="System.CodeDom.Compiler.ICodeCompiler" IsInterface="True" />
      <Method Name="CreateGenerator" Type="System.CodeDom.Compiler.ICodeGenerator" IsInterface="True" />
      <Method Name="GenerateCodeFromMember" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetConverter" Type="System.ComponentModel.TypeConverter" BaseName="Object" BaseType="System.Object">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="Microsoft.VisualBasic">
    <Class Name="VBCodeProvider" Type="Microsoft.VisualBasic.VBCodeProvider" BaseName="CodeDomProvider" BaseType="System.CodeDom.Compiler.CodeDomProvider">
      <ImplementedInterface Type="System.ComponentModel.IComponent" />
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="FileExtension" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="LanguageOptions" Type="System.CodeDom.Compiler.LanguageOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary`2&lt;System.String, System.String&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Constructor>
      <Method Name="CreateCompiler" Type="System.CodeDom.Compiler.ICodeCompiler" IsInterface="True" />
      <Method Name="CreateGenerator" Type="System.CodeDom.Compiler.ICodeGenerator" IsInterface="True" />
      <Method Name="GenerateCodeFromMember" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetConverter" Type="System.ComponentModel.TypeConverter" BaseName="Object" BaseType="System.Object">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="Microsoft.Win32">
    <Class Name="IntranetZoneCredentialPolicy" Type="Microsoft.Win32.IntranetZoneCredentialPolicy" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Net.ICredentialPolicy" />
      <Method Name="ShouldSendCredential" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="challengeUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="request" Type="System.Net.WebRequest" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="authModule" Type="System.Net.IAuthenticationModule" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="PowerModeChangedEventArgs" Type="Microsoft.Win32.PowerModeChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Mode" Type="Microsoft.Win32.PowerModes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="mode" Type="Microsoft.Win32.PowerModes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
    </Class>
    <Class Name="PowerModeChangedEventHandler" Type="Microsoft.Win32.PowerModeChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.PowerModeChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.PowerModeChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Enumeration Name="PowerModes" Type="Microsoft.Win32.PowerModes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Resume" Type="Microsoft.Win32.PowerModes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="StatusChange" Type="Microsoft.Win32.PowerModes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Suspend" Type="Microsoft.Win32.PowerModes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
    </Enumeration>
    <Class Name="SessionEndedEventArgs" Type="Microsoft.Win32.SessionEndedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Reason" Type="Microsoft.Win32.SessionEndReasons" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="reason" Type="Microsoft.Win32.SessionEndReasons" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
    </Class>
    <Class Name="SessionEndedEventHandler" Type="Microsoft.Win32.SessionEndedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.SessionEndedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.SessionEndedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="SessionEndingEventArgs" Type="Microsoft.Win32.SessionEndingEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Cancel" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Reason" Type="Microsoft.Win32.SessionEndReasons" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="reason" Type="Microsoft.Win32.SessionEndReasons" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
    </Class>
    <Class Name="SessionEndingEventHandler" Type="Microsoft.Win32.SessionEndingEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.SessionEndingEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.SessionEndingEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Enumeration Name="SessionEndReasons" Type="Microsoft.Win32.SessionEndReasons" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Logoff" Type="Microsoft.Win32.SessionEndReasons" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="SystemShutdown" Type="Microsoft.Win32.SessionEndReasons" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Class Name="SessionSwitchEventArgs" Type="Microsoft.Win32.SessionSwitchEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Reason" Type="Microsoft.Win32.SessionSwitchReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="reason" Type="Microsoft.Win32.SessionSwitchReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
    </Class>
    <Class Name="SessionSwitchEventHandler" Type="Microsoft.Win32.SessionSwitchEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.SessionSwitchEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.SessionSwitchEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Enumeration Name="SessionSwitchReason" Type="Microsoft.Win32.SessionSwitchReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="ConsoleConnect" Type="Microsoft.Win32.SessionSwitchReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="ConsoleDisconnect" Type="Microsoft.Win32.SessionSwitchReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="RemoteConnect" Type="Microsoft.Win32.SessionSwitchReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="RemoteDisconnect" Type="Microsoft.Win32.SessionSwitchReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="SessionLock" Type="Microsoft.Win32.SessionSwitchReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="SessionLogoff" Type="Microsoft.Win32.SessionSwitchReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="SessionLogon" Type="Microsoft.Win32.SessionSwitchReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="SessionRemoteControl" Type="Microsoft.Win32.SessionSwitchReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9" />
      <Field Name="SessionUnlock" Type="Microsoft.Win32.SessionSwitchReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
    </Enumeration>
    <Class Name="SystemEvents" Type="Microsoft.Win32.SystemEvents" BaseName="Object" BaseType="System.Object">
      <Method Name="CreateTimer" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="interval" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="InvokeOnEventsThread" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="method" Type="System.Delegate" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="KillTimer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="timerId" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Event Name="DisplaySettingsChanged" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="DisplaySettingsChanging" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="EventsThreadShutdown" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="InstalledFontsChanged" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="LowMemory" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="PaletteChanged" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="PowerModeChanged" Type="Microsoft.Win32.PowerModeChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.PowerModeChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="SessionEnded" Type="Microsoft.Win32.SessionEndedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.SessionEndedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="SessionEnding" Type="Microsoft.Win32.SessionEndingEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.SessionEndingEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="SessionSwitch" Type="Microsoft.Win32.SessionSwitchEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.SessionSwitchEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="TimeChanged" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="TimerElapsed" Type="Microsoft.Win32.TimerElapsedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.TimerElapsedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="UserPreferenceChanged" Type="Microsoft.Win32.UserPreferenceChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.UserPreferenceChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="UserPreferenceChanging" Type="Microsoft.Win32.UserPreferenceChangingEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.UserPreferenceChangingEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Class Name="TimerElapsedEventArgs" Type="Microsoft.Win32.TimerElapsedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="TimerId" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="timerId" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="TimerElapsedEventHandler" Type="Microsoft.Win32.TimerElapsedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.TimerElapsedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.TimerElapsedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Enumeration Name="UserPreferenceCategory" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Accessibility" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Color" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Desktop" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="General" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Icon" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="Keyboard" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Locale" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="13" />
      <Field Name="Menu" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="Mouse" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="Policy" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9" />
      <Field Name="Power" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10" />
      <Field Name="Screensaver" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11" />
      <Field Name="VisualStyle" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="14" />
      <Field Name="Window" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="12" />
    </Enumeration>
    <Class Name="UserPreferenceChangedEventArgs" Type="Microsoft.Win32.UserPreferenceChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Category" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="category" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
    </Class>
    <Class Name="UserPreferenceChangedEventHandler" Type="Microsoft.Win32.UserPreferenceChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.UserPreferenceChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.UserPreferenceChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="UserPreferenceChangingEventArgs" Type="Microsoft.Win32.UserPreferenceChangingEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Category" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="category" Type="Microsoft.Win32.UserPreferenceCategory" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
    </Class>
    <Class Name="UserPreferenceChangingEventHandler" Type="Microsoft.Win32.UserPreferenceChangingEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.UserPreferenceChangingEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Win32.UserPreferenceChangingEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="Microsoft.Win32.SafeHandles">
    <Class Name="SafeProcessHandle" Type="Microsoft.Win32.SafeHandles.SafeProcessHandle" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
      <ImplementedInterface Type="System.IDisposable" />
      <Constructor>
        <Parameter Name="existingHandle" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="ownsHandle" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="SafeX509ChainHandle" Type="Microsoft.Win32.SafeHandles.SafeX509ChainHandle" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
      <ImplementedInterface Type="System.IDisposable" />
    </Class>
  </Namespace>
  <Namespace Name="System">
    <Class Name="FileStyleUriParser" Type="System.FileStyleUriParser" BaseName="UriParser" BaseType="System.UriParser" />
    <Class Name="FtpStyleUriParser" Type="System.FtpStyleUriParser" BaseName="UriParser" BaseType="System.UriParser" />
    <Class Name="GenericUriParser" Type="System.GenericUriParser" BaseName="UriParser" BaseType="System.UriParser">
      <Constructor>
        <Parameter Name="options" Type="System.GenericUriParserOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
    </Class>
    <Enumeration Name="GenericUriParserOptions" Type="System.GenericUriParserOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AllowEmptyAuthority" Type="System.GenericUriParserOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Default" Type="System.GenericUriParserOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="DontCompressPath" Type="System.GenericUriParserOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="128" />
      <Field Name="DontConvertPathBackslashes" Type="System.GenericUriParserOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
      <Field Name="DontUnescapePathDotsAndSlashes" Type="System.GenericUriParserOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="256" />
      <Field Name="GenericAuthority" Type="System.GenericUriParserOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Idn" Type="System.GenericUriParserOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="512" />
      <Field Name="IriParsing" Type="System.GenericUriParserOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1024" />
      <Field Name="NoFragment" Type="System.GenericUriParserOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="NoPort" Type="System.GenericUriParserOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="NoQuery" Type="System.GenericUriParserOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="NoUserInfo" Type="System.GenericUriParserOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
    </Enumeration>
    <Class Name="GopherStyleUriParser" Type="System.GopherStyleUriParser" BaseName="UriParser" BaseType="System.UriParser" />
    <Class Name="HttpStyleUriParser" Type="System.HttpStyleUriParser" BaseName="UriParser" BaseType="System.UriParser" />
    <Class Name="LdapStyleUriParser" Type="System.LdapStyleUriParser" BaseName="UriParser" BaseType="System.UriParser" />
    <Class Name="NetPipeStyleUriParser" Type="System.NetPipeStyleUriParser" BaseName="UriParser" BaseType="System.UriParser" />
    <Class Name="NetTcpStyleUriParser" Type="System.NetTcpStyleUriParser" BaseName="UriParser" BaseType="System.UriParser" />
    <Class Name="NewsStyleUriParser" Type="System.NewsStyleUriParser" BaseName="UriParser" BaseType="System.UriParser" />
    <Class Name="StringNormalizationExtensions" Type="System.StringNormalizationExtensions" BaseName="Object" BaseType="System.Object">
      <Method Name="IsNormalized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="IsNormalized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="normalizationForm" Type="System.Text.NormalizationForm" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Normalize" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Normalize" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="normalizationForm" Type="System.Text.NormalizationForm" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
    </Class>
    <Class Name="Uri" Type="System.Uri" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Field Name="SchemeDelimiter" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="UriSchemeFile" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="UriSchemeFtp" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="UriSchemeGopher" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="UriSchemeHttp" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="UriSchemeHttps" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="UriSchemeMailto" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="UriSchemeNetPipe" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="UriSchemeNetTcp" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="UriSchemeNews" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="UriSchemeNntp" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="AbsolutePath" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="AbsoluteUri" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Authority" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="DnsSafeHost" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Fragment" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Host" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="HostNameType" Type="System.UriHostNameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="IdnHost" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="IsAbsoluteUri" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsDefaultPort" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsFile" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsLoopback" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsUnc" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="LocalPath" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="OriginalString" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="PathAndQuery" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Query" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Scheme" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Segments" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" IsReadable="True" />
      <Property Name="UserEscaped" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="UserInfo" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="uriString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="uriString" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="dontEscape" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="baseUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="relativeUri" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="dontEscape" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="uriString" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="uriKind" Type="System.UriKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="baseUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="relativeUri" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="baseUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="relativeUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="CheckHostName" Type="System.UriHostNameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsStatic="True">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CheckSchemeName" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="schemeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Compare" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="uri1" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="uri2" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="partsToCompare" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="compareFormat" Type="System.UriFormat" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="comparisonType" Type="System.StringComparison" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="comparand" Type="System.Object" />
      </Method>
      <Method Name="EscapeDataString" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="stringToEscape" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="EscapeUriString" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="stringToEscape" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="FromHex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="digit" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetComponents" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="components" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="format" Type="System.UriFormat" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetLeftPart" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="part" Type="System.UriPartial" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="HexEscape" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="character" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="HexUnescape" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="index" Type="System.Int32&amp;" IsByRef="True" ElementType="System.Int32" />
      </Method>
      <Method Name="IsBaseOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="uri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="IsHexDigit" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="character" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IsHexEncoding" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IsWellFormedOriginalString" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsWellFormedUriString" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="uriString" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="uriKind" Type="System.UriKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="MakeRelative" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="toUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="MakeRelativeUri" Type="System.Uri" BaseName="Object" BaseType="System.Object">
        <Parameter Name="uri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="op_Equality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="uri1" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="uri2" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="op_Inequality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="uri1" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="uri2" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="TryCreate" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="uriString" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="uriKind" Type="System.UriKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="result" Type="System.Uri&amp;" IsByRef="True" ElementType="System.Uri" />
      </Method>
      <Method Name="TryCreate" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="baseUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="relativeUri" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="result" Type="System.Uri&amp;" IsByRef="True" ElementType="System.Uri" />
      </Method>
      <Method Name="TryCreate" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="baseUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="relativeUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="result" Type="System.Uri&amp;" IsByRef="True" ElementType="System.Uri" />
      </Method>
      <Method Name="UnescapeDataString" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="stringToUnescape" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="UriBuilder" Type="System.UriBuilder" BaseName="Object" BaseType="System.Object">
      <Property Name="Fragment" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Host" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Password" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Path" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Query" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Scheme" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Uri" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="UserName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="uri" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="uri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="schemeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="hostName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="scheme" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="host" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="portNumber" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="scheme" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="host" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="pathValue" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="scheme" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="host" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="extraValue" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rparam" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Enumeration Name="UriComponents" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AbsoluteUri" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="127" />
      <Field Name="Fragment" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
      <Field Name="Host" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="HostAndPort" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="132" />
      <Field Name="HttpRequestUrl" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="61" />
      <Field Name="KeepDelimiter" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1073741824" />
      <Field Name="NormalizedHost" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="256" />
      <Field Name="Path" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="PathAndQuery" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="48" />
      <Field Name="Port" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="Query" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="Scheme" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="SchemeAndServer" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="13" />
      <Field Name="SerializationInfoString" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2147483648" />
      <Field Name="StrongAuthority" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="134" />
      <Field Name="StrongPort" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="128" />
      <Field Name="UserInfo" Type="System.UriComponents" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Enumeration Name="UriFormat" Type="System.UriFormat" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="SafeUnescaped" Type="System.UriFormat" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Unescaped" Type="System.UriFormat" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="UriEscaped" Type="System.UriFormat" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="UriFormatException" Type="System.UriFormatException" BaseName="FormatException" BaseType="System.FormatException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="textString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="textString" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="e" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Enumeration Name="UriHostNameType" Type="System.UriHostNameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Basic" Type="System.UriHostNameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Dns" Type="System.UriHostNameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="IPv4" Type="System.UriHostNameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="IPv6" Type="System.UriHostNameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Unknown" Type="System.UriHostNameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Enumeration Name="UriIdnScope" Type="System.UriIdnScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="All" Type="System.UriIdnScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="AllExceptIntranet" Type="System.UriIdnScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="None" Type="System.UriIdnScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Enumeration Name="UriKind" Type="System.UriKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Absolute" Type="System.UriKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Relative" Type="System.UriKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="RelativeOrAbsolute" Type="System.UriKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="UriParser" Type="System.UriParser" BaseName="Object" BaseType="System.Object">
      <Method Name="IsKnownScheme" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="schemeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Register" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="uriParser" Type="System.UriParser" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="schemeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="defaultPort" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Enumeration Name="UriPartial" Type="System.UriPartial" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Authority" Type="System.UriPartial" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Path" Type="System.UriPartial" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Query" Type="System.UriPartial" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Scheme" Type="System.UriPartial" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="UriTypeConverter" Type="System.UriTypeConverter" BaseName="TypeConverter" BaseType="System.ComponentModel.TypeConverter">
      <Method Name="CanConvertFrom" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="sourceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="CanConvertTo" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertFrom" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="IsValid" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.CodeDom">
    <Class Name="CodeArgumentReferenceExpression" Type="System.CodeDom.CodeArgumentReferenceExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="ParameterName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="parameterName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CodeArrayCreateExpression" Type="System.CodeDom.CodeArrayCreateExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="CreateType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Property Name="Initializers" Type="System.CodeDom.CodeExpressionCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="Size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="SizeExpression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="createType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="createType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="initializers" Type="System.CodeDom.CodeExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeExpression" />
      </Constructor>
      <Constructor>
        <Parameter Name="createType" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="initializers" Type="System.CodeDom.CodeExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeExpression" />
      </Constructor>
      <Constructor>
        <Parameter Name="createType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="initializers" Type="System.CodeDom.CodeExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeExpression" />
      </Constructor>
      <Constructor>
        <Parameter Name="createType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="createType" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="createType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="size" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="createType" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="size" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="createType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="size" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
    </Class>
    <Class Name="CodeArrayIndexerExpression" Type="System.CodeDom.CodeArrayIndexerExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="Indices" Type="System.CodeDom.CodeExpressionCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="TargetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="indices" Type="System.CodeDom.CodeExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeExpression" />
      </Constructor>
    </Class>
    <Class Name="CodeAssignStatement" Type="System.CodeDom.CodeAssignStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement">
      <Property Name="Left" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Property Name="Right" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="left" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="right" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
    </Class>
    <Class Name="CodeAttachEventStatement" Type="System.CodeDom.CodeAttachEventStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement">
      <Property Name="Event" Type="System.CodeDom.CodeEventReferenceExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression" IsReadable="True" IsWritable="True" />
      <Property Name="Listener" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="eventRef" Type="System.CodeDom.CodeEventReferenceExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression" />
        <Parameter Name="listener" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="eventName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="listener" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
    </Class>
    <Class Name="CodeAttributeArgument" Type="System.CodeDom.CodeAttributeArgument" BaseName="Object" BaseType="System.Object">
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Value" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
    </Class>
    <Class Name="CodeAttributeArgumentCollection" Type="System.CodeDom.CodeAttributeArgumentCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.CodeDom.CodeAttributeArgument" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgument" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgumentCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgument[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeAttributeArgument" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgument" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgument[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeAttributeArgument" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgumentCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgument" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.CodeDom.CodeAttributeArgument[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeAttributeArgument" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgument" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgument" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgument" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="CodeAttributeDeclaration" Type="System.CodeDom.CodeAttributeDeclaration" BaseName="Object" BaseType="System.Object">
      <Property Name="Arguments" Type="System.CodeDom.CodeAttributeArgumentCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="AttributeType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="attributeType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="arguments" Type="System.CodeDom.CodeAttributeArgument[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeAttributeArgument" />
      </Constructor>
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arguments" Type="System.CodeDom.CodeAttributeArgument[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeAttributeArgument" />
      </Constructor>
      <Constructor>
        <Parameter Name="attributeType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
    </Class>
    <Class Name="CodeAttributeDeclarationCollection" Type="System.CodeDom.CodeAttributeDeclarationCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.CodeDom.CodeAttributeDeclaration" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclaration" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclarationCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclaration[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeAttributeDeclaration" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclaration" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclaration[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeAttributeDeclaration" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclarationCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclaration" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.CodeDom.CodeAttributeDeclaration[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeAttributeDeclaration" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclaration" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclaration" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclaration" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="CodeBaseReferenceExpression" Type="System.CodeDom.CodeBaseReferenceExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression" />
    <Class Name="CodeBinaryOperatorExpression" Type="System.CodeDom.CodeBinaryOperatorExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="Left" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Property Name="Operator" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="Right" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="left" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="op" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="right" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
    </Class>
    <Enumeration Name="CodeBinaryOperatorType" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Add" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Assign" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="BitwiseAnd" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10" />
      <Field Name="BitwiseOr" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9" />
      <Field Name="BooleanAnd" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="12" />
      <Field Name="BooleanOr" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11" />
      <Field Name="Divide" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="GreaterThan" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="15" />
      <Field Name="GreaterThanOrEqual" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="IdentityEquality" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="IdentityInequality" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="LessThan" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="13" />
      <Field Name="LessThanOrEqual" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="14" />
      <Field Name="Modulus" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Multiply" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Subtract" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="ValueEquality" Type="System.CodeDom.CodeBinaryOperatorType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
    </Enumeration>
    <Class Name="CodeCastExpression" Type="System.CodeDom.CodeCastExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="Expression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Property Name="TargetType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="targetType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="targetType" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="targetType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
    </Class>
    <Class Name="CodeCatchClause" Type="System.CodeDom.CodeCatchClause" BaseName="Object" BaseType="System.Object">
      <Property Name="CatchExceptionType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Property Name="LocalName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Statements" Type="System.CodeDom.CodeStatementCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Constructor>
        <Parameter Name="localName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="localName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="catchExceptionType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="localName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="catchExceptionType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatement[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeStatement" />
      </Constructor>
    </Class>
    <Class Name="CodeCatchClauseCollection" Type="System.CodeDom.CodeCatchClauseCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.CodeDom.CodeCatchClause" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClauseCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeCatchClause" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeCatchClause" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClauseCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.CodeDom.CodeCatchClause[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeCatchClause" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="CodeChecksumPragma" Type="System.CodeDom.CodeChecksumPragma" BaseName="CodeDirective" BaseType="System.CodeDom.CodeDirective">
      <Property Name="ChecksumAlgorithmId" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ChecksumData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Property Name="FileName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="checksumAlgorithmId" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="checksumData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Constructor>
    </Class>
    <Class Name="CodeComment" Type="System.CodeDom.CodeComment" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
      <Property Name="DocComment" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Text" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="text" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="text" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="docComment" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="CodeCommentStatement" Type="System.CodeDom.CodeCommentStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement">
      <Property Name="Comment" Type="System.CodeDom.CodeComment" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="comment" Type="System.CodeDom.CodeComment" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="text" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="text" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="docComment" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="CodeCommentStatementCollection" Type="System.CodeDom.CodeCommentStatementCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.CodeDom.CodeCommentStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeCommentStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement" />
      </Method>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeCommentStatementCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeCommentStatement[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeCommentStatement" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeCommentStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeCommentStatement[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeCommentStatement" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeCommentStatementCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeCommentStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.CodeDom.CodeCommentStatement[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeCommentStatement" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeCommentStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeCommentStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeCommentStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement" />
      </Method>
    </Class>
    <Class Name="CodeCompileUnit" Type="System.CodeDom.CodeCompileUnit" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
      <Property Name="AssemblyCustomAttributes" Type="System.CodeDom.CodeAttributeDeclarationCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="EndDirectives" Type="System.CodeDom.CodeDirectiveCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="Namespaces" Type="System.CodeDom.CodeNamespaceCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="ReferencedAssemblies" Type="System.Collections.Specialized.StringCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="StartDirectives" Type="System.CodeDom.CodeDirectiveCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
    </Class>
    <Class Name="CodeConditionStatement" Type="System.CodeDom.CodeConditionStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement">
      <Property Name="Condition" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Property Name="FalseStatements" Type="System.CodeDom.CodeStatementCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="TrueStatements" Type="System.CodeDom.CodeStatementCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Constructor>
        <Parameter Name="condition" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="trueStatements" Type="System.CodeDom.CodeStatement[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeStatement" />
      </Constructor>
      <Constructor>
        <Parameter Name="condition" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="trueStatements" Type="System.CodeDom.CodeStatement[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeStatement" />
        <Parameter Name="falseStatements" Type="System.CodeDom.CodeStatement[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeStatement" />
      </Constructor>
    </Class>
    <Class Name="CodeConstructor" Type="System.CodeDom.CodeConstructor" BaseName="CodeMemberMethod" BaseType="System.CodeDom.CodeMemberMethod">
      <Property Name="BaseConstructorArgs" Type="System.CodeDom.CodeExpressionCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="ChainedConstructorArgs" Type="System.CodeDom.CodeExpressionCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
    </Class>
    <Class Name="CodeDefaultValueExpression" Type="System.CodeDom.CodeDefaultValueExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="Type" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
    </Class>
    <Class Name="CodeDelegateCreateExpression" Type="System.CodeDom.CodeDelegateCreateExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="DelegateType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Property Name="MethodName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="TargetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="delegateType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="methodName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CodeDelegateInvokeExpression" Type="System.CodeDom.CodeDelegateInvokeExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="Parameters" Type="System.CodeDom.CodeExpressionCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="TargetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="parameters" Type="System.CodeDom.CodeExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeExpression" />
      </Constructor>
    </Class>
    <Class Name="CodeDirectionExpression" Type="System.CodeDom.CodeDirectionExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="Direction" Type="System.CodeDom.FieldDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="Expression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="direction" Type="System.CodeDom.FieldDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
    </Class>
    <Class Name="CodeDirective" Type="System.CodeDom.CodeDirective" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
    <Class Name="CodeDirectiveCollection" Type="System.CodeDom.CodeDirectiveCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.CodeDom.CodeDirective" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeDirective" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeDirectiveCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeDirective[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeDirective" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeDirective" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeDirective[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeDirective" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeDirectiveCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeDirective" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.CodeDom.CodeDirective[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeDirective" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeDirective" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeDirective" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeDirective" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
    </Class>
    <Class Name="CodeEntryPointMethod" Type="System.CodeDom.CodeEntryPointMethod" BaseName="CodeMemberMethod" BaseType="System.CodeDom.CodeMemberMethod" />
    <Class Name="CodeEventReferenceExpression" Type="System.CodeDom.CodeEventReferenceExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="EventName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="TargetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="eventName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CodeExpression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
    <Class Name="CodeExpressionCollection" Type="System.CodeDom.CodeExpressionCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeExpressionCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeExpression" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeExpression" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeExpressionCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.CodeDom.CodeExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeExpression" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
    </Class>
    <Class Name="CodeExpressionStatement" Type="System.CodeDom.CodeExpressionStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement">
      <Property Name="Expression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
    </Class>
    <Class Name="CodeFieldReferenceExpression" Type="System.CodeDom.CodeFieldReferenceExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="FieldName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="TargetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="fieldName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CodeGotoStatement" Type="System.CodeDom.CodeGotoStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement">
      <Property Name="Label" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="label" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CodeIndexerExpression" Type="System.CodeDom.CodeIndexerExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="Indices" Type="System.CodeDom.CodeExpressionCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="TargetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="indices" Type="System.CodeDom.CodeExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeExpression" />
      </Constructor>
    </Class>
    <Class Name="CodeIterationStatement" Type="System.CodeDom.CodeIterationStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement">
      <Property Name="IncrementStatement" Type="System.CodeDom.CodeStatement" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Property Name="InitStatement" Type="System.CodeDom.CodeStatement" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Property Name="Statements" Type="System.CodeDom.CodeStatementCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="TestExpression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="initStatement" Type="System.CodeDom.CodeStatement" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="testExpression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="incrementStatement" Type="System.CodeDom.CodeStatement" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatement[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeStatement" />
      </Constructor>
    </Class>
    <Class Name="CodeLabeledStatement" Type="System.CodeDom.CodeLabeledStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement">
      <Property Name="Label" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Statement" Type="System.CodeDom.CodeStatement" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="label" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="label" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
    </Class>
    <Class Name="CodeLinePragma" Type="System.CodeDom.CodeLinePragma" BaseName="Object" BaseType="System.Object">
      <Property Name="FileName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="LineNumber" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="lineNumber" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="CodeMemberEvent" Type="System.CodeDom.CodeMemberEvent" BaseName="CodeTypeMember" BaseType="System.CodeDom.CodeTypeMember">
      <Property Name="ImplementationTypes" Type="System.CodeDom.CodeTypeReferenceCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="PrivateImplementationType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Property Name="Type" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="CodeMemberField" Type="System.CodeDom.CodeMemberField" BaseName="CodeTypeMember" BaseType="System.CodeDom.CodeTypeMember">
      <Property Name="InitExpression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Property Name="Type" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CodeMemberMethod" Type="System.CodeDom.CodeMemberMethod" BaseName="CodeTypeMember" BaseType="System.CodeDom.CodeTypeMember">
      <Property Name="ImplementationTypes" Type="System.CodeDom.CodeTypeReferenceCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="Parameters" Type="System.CodeDom.CodeParameterDeclarationExpressionCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="PrivateImplementationType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Property Name="ReturnType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Property Name="ReturnTypeCustomAttributes" Type="System.CodeDom.CodeAttributeDeclarationCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="Statements" Type="System.CodeDom.CodeStatementCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="TypeParameters" Type="System.CodeDom.CodeTypeParameterCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Event Name="PopulateImplementationTypes" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="PopulateParameters" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="PopulateStatements" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
    </Class>
    <Class Name="CodeMemberProperty" Type="System.CodeDom.CodeMemberProperty" BaseName="CodeTypeMember" BaseType="System.CodeDom.CodeTypeMember">
      <Property Name="GetStatements" Type="System.CodeDom.CodeStatementCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="HasGet" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="HasSet" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ImplementationTypes" Type="System.CodeDom.CodeTypeReferenceCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="Parameters" Type="System.CodeDom.CodeParameterDeclarationExpressionCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="PrivateImplementationType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Property Name="SetStatements" Type="System.CodeDom.CodeStatementCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="Type" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="CodeMethodInvokeExpression" Type="System.CodeDom.CodeMethodInvokeExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="Method" Type="System.CodeDom.CodeMethodReferenceExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression" IsReadable="True" IsWritable="True" />
      <Property Name="Parameters" Type="System.CodeDom.CodeExpressionCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Constructor>
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="methodName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="parameters" Type="System.CodeDom.CodeExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeExpression" />
      </Constructor>
      <Constructor>
        <Parameter Name="method" Type="System.CodeDom.CodeMethodReferenceExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression" />
        <Parameter Name="parameters" Type="System.CodeDom.CodeExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeExpression" />
      </Constructor>
    </Class>
    <Class Name="CodeMethodReferenceExpression" Type="System.CodeDom.CodeMethodReferenceExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="MethodName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="TargetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Property Name="TypeArguments" Type="System.CodeDom.CodeTypeReferenceCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Constructor>
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="methodName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="methodName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="typeParameters" Type="System.CodeDom.CodeTypeReference[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeTypeReference" />
      </Constructor>
    </Class>
    <Class Name="CodeMethodReturnStatement" Type="System.CodeDom.CodeMethodReturnStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement">
      <Property Name="Expression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
    </Class>
    <Class Name="CodeNamespace" Type="System.CodeDom.CodeNamespace" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
      <Property Name="Comments" Type="System.CodeDom.CodeCommentStatementCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="Imports" Type="System.CodeDom.CodeNamespaceImportCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Types" Type="System.CodeDom.CodeTypeDeclarationCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Event Name="PopulateComments" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="PopulateImports" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="PopulateTypes" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
    </Class>
    <Class Name="CodeNamespaceCollection" Type="System.CodeDom.CodeNamespaceCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.CodeDom.CodeNamespace" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeNamespace" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeNamespaceCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeNamespace[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeNamespace" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeNamespace" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeNamespace[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeNamespace" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeNamespaceCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeNamespace" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.CodeDom.CodeNamespace[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeNamespace" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeNamespace" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeNamespace" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeNamespace" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
    </Class>
    <Class Name="CodeNamespaceImport" Type="System.CodeDom.CodeNamespaceImport" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
      <Property Name="LinePragma" Type="System.CodeDom.CodeLinePragma" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Namespace" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="nameSpace" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CodeNamespaceImportCollection" Type="System.CodeDom.CodeNamespaceImportCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.CodeDom.CodeNamespaceImport" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeNamespaceImport" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeNamespaceImport" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeNamespaceImport[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeNamespaceImport" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
    </Class>
    <Class Name="CodeObject" Type="System.CodeDom.CodeObject" BaseName="Object" BaseType="System.Object">
      <Property Name="UserData" Type="System.Collections.IDictionary" IsInterface="True" IsReadable="True" />
    </Class>
    <Class Name="CodeObjectCreateExpression" Type="System.CodeDom.CodeObjectCreateExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="CreateType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Property Name="Parameters" Type="System.CodeDom.CodeExpressionCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Constructor>
        <Parameter Name="createType" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="parameters" Type="System.CodeDom.CodeExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeExpression" />
      </Constructor>
      <Constructor>
        <Parameter Name="createType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="parameters" Type="System.CodeDom.CodeExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeExpression" />
      </Constructor>
      <Constructor>
        <Parameter Name="createType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="parameters" Type="System.CodeDom.CodeExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeExpression" />
      </Constructor>
    </Class>
    <Class Name="CodeParameterDeclarationExpression" Type="System.CodeDom.CodeParameterDeclarationExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="CustomAttributes" Type="System.CodeDom.CodeAttributeDeclarationCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" IsWritable="True" />
      <Property Name="Direction" Type="System.CodeDom.FieldDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Type" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CodeParameterDeclarationExpressionCollection" Type="System.CodeDom.CodeParameterDeclarationExpressionCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.CodeDom.CodeParameterDeclarationExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeParameterDeclarationExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression" />
      </Method>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeParameterDeclarationExpressionCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeParameterDeclarationExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeParameterDeclarationExpression" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeParameterDeclarationExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeParameterDeclarationExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeParameterDeclarationExpression" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeParameterDeclarationExpressionCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeParameterDeclarationExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.CodeDom.CodeParameterDeclarationExpression[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeParameterDeclarationExpression" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeParameterDeclarationExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeParameterDeclarationExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeParameterDeclarationExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression" />
      </Method>
    </Class>
    <Class Name="CodePrimitiveExpression" Type="System.CodeDom.CodePrimitiveExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="Value" Type="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="value" Type="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CodePropertyReferenceExpression" Type="System.CodeDom.CodePropertyReferenceExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="PropertyName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="TargetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="propertyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CodePropertySetValueReferenceExpression" Type="System.CodeDom.CodePropertySetValueReferenceExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression" />
    <Class Name="CodeRegionDirective" Type="System.CodeDom.CodeRegionDirective" BaseName="CodeDirective" BaseType="System.CodeDom.CodeDirective">
      <Property Name="RegionMode" Type="System.CodeDom.CodeRegionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="RegionText" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="regionMode" Type="System.CodeDom.CodeRegionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="regionText" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Enumeration Name="CodeRegionMode" Type="System.CodeDom.CodeRegionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="End" Type="System.CodeDom.CodeRegionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="None" Type="System.CodeDom.CodeRegionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Start" Type="System.CodeDom.CodeRegionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="CodeRemoveEventStatement" Type="System.CodeDom.CodeRemoveEventStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement">
      <Property Name="Event" Type="System.CodeDom.CodeEventReferenceExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression" IsReadable="True" IsWritable="True" />
      <Property Name="Listener" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="eventRef" Type="System.CodeDom.CodeEventReferenceExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression" />
        <Parameter Name="listener" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="eventName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="listener" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
    </Class>
    <Class Name="CodeSnippetCompileUnit" Type="System.CodeDom.CodeSnippetCompileUnit" BaseName="CodeCompileUnit" BaseType="System.CodeDom.CodeCompileUnit">
      <Property Name="LinePragma" Type="System.CodeDom.CodeLinePragma" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Value" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CodeSnippetExpression" Type="System.CodeDom.CodeSnippetExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="Value" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CodeSnippetStatement" Type="System.CodeDom.CodeSnippetStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement">
      <Property Name="Value" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CodeSnippetTypeMember" Type="System.CodeDom.CodeSnippetTypeMember" BaseName="CodeTypeMember" BaseType="System.CodeDom.CodeTypeMember">
      <Property Name="Text" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="text" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CodeStatement" Type="System.CodeDom.CodeStatement" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
      <Property Name="EndDirectives" Type="System.CodeDom.CodeDirectiveCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="LinePragma" Type="System.CodeDom.CodeLinePragma" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="StartDirectives" Type="System.CodeDom.CodeDirectiveCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
    </Class>
    <Class Name="CodeStatementCollection" Type="System.CodeDom.CodeStatementCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.CodeDom.CodeStatement" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeStatement" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeStatementCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeStatement[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeStatement" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeStatement" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeStatement[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeStatement" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeStatementCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeStatement" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.CodeDom.CodeStatement[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeStatement" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeStatement" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeStatement" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeStatement" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
    </Class>
    <Class Name="CodeThisReferenceExpression" Type="System.CodeDom.CodeThisReferenceExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression" />
    <Class Name="CodeThrowExceptionStatement" Type="System.CodeDom.CodeThrowExceptionStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement">
      <Property Name="ToThrow" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="toThrow" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
    </Class>
    <Class Name="CodeTryCatchFinallyStatement" Type="System.CodeDom.CodeTryCatchFinallyStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement">
      <Property Name="CatchClauses" Type="System.CodeDom.CodeCatchClauseCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="FinallyStatements" Type="System.CodeDom.CodeStatementCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="TryStatements" Type="System.CodeDom.CodeStatementCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Constructor>
        <Parameter Name="tryStatements" Type="System.CodeDom.CodeStatement[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeStatement" />
        <Parameter Name="catchClauses" Type="System.CodeDom.CodeCatchClause[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeCatchClause" />
      </Constructor>
      <Constructor>
        <Parameter Name="tryStatements" Type="System.CodeDom.CodeStatement[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeStatement" />
        <Parameter Name="catchClauses" Type="System.CodeDom.CodeCatchClause[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeCatchClause" />
        <Parameter Name="finallyStatements" Type="System.CodeDom.CodeStatement[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeStatement" />
      </Constructor>
    </Class>
    <Class Name="CodeTypeConstructor" Type="System.CodeDom.CodeTypeConstructor" BaseName="CodeMemberMethod" BaseType="System.CodeDom.CodeMemberMethod" />
    <Class Name="CodeTypeDeclaration" Type="System.CodeDom.CodeTypeDeclaration" BaseName="CodeTypeMember" BaseType="System.CodeDom.CodeTypeMember">
      <Property Name="BaseTypes" Type="System.CodeDom.CodeTypeReferenceCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="IsClass" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IsEnum" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IsInterface" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IsPartial" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IsStruct" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Members" Type="System.CodeDom.CodeTypeMemberCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="TypeAttributes" Type="System.Reflection.TypeAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="TypeParameters" Type="System.CodeDom.CodeTypeParameterCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Event Name="PopulateBaseTypes" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="PopulateMembers" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
    </Class>
    <Class Name="CodeTypeDeclarationCollection" Type="System.CodeDom.CodeTypeDeclarationCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.CodeDom.CodeTypeDeclaration" BaseName="CodeTypeMember" BaseType="System.CodeDom.CodeTypeMember">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration" BaseName="CodeTypeMember" BaseType="System.CodeDom.CodeTypeMember" />
      </Method>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclarationCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeTypeDeclaration" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration" BaseName="CodeTypeMember" BaseType="System.CodeDom.CodeTypeMember" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeTypeDeclaration" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclarationCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration" BaseName="CodeTypeMember" BaseType="System.CodeDom.CodeTypeMember" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.CodeDom.CodeTypeDeclaration[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration" BaseName="CodeTypeMember" BaseType="System.CodeDom.CodeTypeMember" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration" BaseName="CodeTypeMember" BaseType="System.CodeDom.CodeTypeMember" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration" BaseName="CodeTypeMember" BaseType="System.CodeDom.CodeTypeMember" />
      </Method>
    </Class>
    <Class Name="CodeTypeDelegate" Type="System.CodeDom.CodeTypeDelegate" BaseName="CodeTypeDeclaration" BaseType="System.CodeDom.CodeTypeDeclaration">
      <Property Name="Parameters" Type="System.CodeDom.CodeParameterDeclarationExpressionCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="ReturnType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CodeTypeMember" Type="System.CodeDom.CodeTypeMember" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
      <Property Name="Attributes" Type="System.CodeDom.MemberAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="Comments" Type="System.CodeDom.CodeCommentStatementCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="CustomAttributes" Type="System.CodeDom.CodeAttributeDeclarationCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" IsWritable="True" />
      <Property Name="EndDirectives" Type="System.CodeDom.CodeDirectiveCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="LinePragma" Type="System.CodeDom.CodeLinePragma" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="StartDirectives" Type="System.CodeDom.CodeDirectiveCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
    </Class>
    <Class Name="CodeTypeMemberCollection" Type="System.CodeDom.CodeTypeMemberCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.CodeDom.CodeTypeMember" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeTypeMember" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeMemberCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeMember[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeTypeMember" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeMember" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeMember[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeTypeMember" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeMemberCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeMember" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.CodeDom.CodeTypeMember[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeTypeMember" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeMember" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeTypeMember" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeMember" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
    </Class>
    <Class Name="CodeTypeOfExpression" Type="System.CodeDom.CodeTypeOfExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="Type" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
    </Class>
    <Class Name="CodeTypeParameter" Type="System.CodeDom.CodeTypeParameter" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
      <Property Name="Constraints" Type="System.CodeDom.CodeTypeReferenceCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="CustomAttributes" Type="System.CodeDom.CodeAttributeDeclarationCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="HasConstructorConstraint" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CodeTypeParameterCollection" Type="System.CodeDom.CodeTypeParameterCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.CodeDom.CodeTypeParameter" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeTypeParameter" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeParameterCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeParameter[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeTypeParameter" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeParameter" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeParameter[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeTypeParameter" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeParameterCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeParameter" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.CodeDom.CodeTypeParameter[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeTypeParameter" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeParameter" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeTypeParameter" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeParameter" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
    </Class>
    <Class Name="CodeTypeReference" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
      <Property Name="ArrayElementType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Property Name="ArrayRank" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="BaseType" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Options" Type="System.CodeDom.CodeTypeReferenceOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="TypeArguments" Type="System.CodeDom.CodeTypeReferenceCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="codeTypeReferenceOption" Type="System.CodeDom.CodeTypeReferenceOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="typeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="codeTypeReferenceOption" Type="System.CodeDom.CodeTypeReferenceOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="typeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="typeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="typeArguments" Type="System.CodeDom.CodeTypeReference[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeTypeReference" />
      </Constructor>
      <Constructor>
        <Parameter Name="typeParameter" Type="System.CodeDom.CodeTypeParameter" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="baseType" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="rank" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="arrayType" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="rank" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="CodeTypeReferenceCollection" Type="System.CodeDom.CodeTypeReferenceCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeReferenceCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeReference[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeTypeReference" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeReference[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeTypeReference" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeReferenceCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.CodeDom.CodeTypeReference[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeTypeReference" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
    </Class>
    <Class Name="CodeTypeReferenceExpression" Type="System.CodeDom.CodeTypeReferenceExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="Type" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
    </Class>
    <Enumeration Name="CodeTypeReferenceOptions" Type="System.CodeDom.CodeTypeReferenceOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="GenericTypeParameter" Type="System.CodeDom.CodeTypeReferenceOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="GlobalReference" Type="System.CodeDom.CodeTypeReferenceOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="CodeVariableDeclarationStatement" Type="System.CodeDom.CodeVariableDeclarationStatement" BaseName="CodeStatement" BaseType="System.CodeDom.CodeStatement">
      <Property Name="InitExpression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Type" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="initExpression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="initExpression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="initExpression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Constructor>
    </Class>
    <Class Name="CodeVariableReferenceExpression" Type="System.CodeDom.CodeVariableReferenceExpression" BaseName="CodeExpression" BaseType="System.CodeDom.CodeExpression">
      <Property Name="VariableName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="variableName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Enumeration Name="FieldDirection" Type="System.CodeDom.FieldDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="In" Type="System.CodeDom.FieldDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Out" Type="System.CodeDom.FieldDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Ref" Type="System.CodeDom.FieldDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Enumeration Name="MemberAttributes" Type="System.CodeDom.MemberAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Abstract" Type="System.CodeDom.MemberAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="AccessMask" Type="System.CodeDom.MemberAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="61440" />
      <Field Name="Assembly" Type="System.CodeDom.MemberAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4096" />
      <Field Name="Const" Type="System.CodeDom.MemberAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="Family" Type="System.CodeDom.MemberAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="12288" />
      <Field Name="FamilyAndAssembly" Type="System.CodeDom.MemberAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8192" />
      <Field Name="FamilyOrAssembly" Type="System.CodeDom.MemberAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16384" />
      <Field Name="Final" Type="System.CodeDom.MemberAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="New" Type="System.CodeDom.MemberAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="Overloaded" Type="System.CodeDom.MemberAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="256" />
      <Field Name="Override" Type="System.CodeDom.MemberAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Private" Type="System.CodeDom.MemberAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="20480" />
      <Field Name="Public" Type="System.CodeDom.MemberAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="24576" />
      <Field Name="ScopeMask" Type="System.CodeDom.MemberAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="15" />
      <Field Name="Static" Type="System.CodeDom.MemberAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="VTableMask" Type="System.CodeDom.MemberAttributes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="240" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.CodeDom.Compiler">
    <Class Name="CodeCompiler" Type="System.CodeDom.Compiler.CodeCompiler" BaseName="CodeGenerator" BaseType="System.CodeDom.Compiler.CodeGenerator">
      <ImplementedInterface Type="System.CodeDom.Compiler.ICodeGenerator" />
      <ImplementedInterface Type="System.CodeDom.Compiler.ICodeCompiler" />
    </Class>
    <Class Name="CodeDomProvider" Type="System.CodeDom.Compiler.CodeDomProvider" BaseName="Component" BaseType="System.ComponentModel.Component">
      <ImplementedInterface Type="System.ComponentModel.IComponent" />
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="FileExtension" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="LanguageOptions" Type="System.CodeDom.Compiler.LanguageOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Method Name="CompileAssemblyFromDom" Type="System.CodeDom.Compiler.CompilerResults" BaseName="Object" BaseType="System.Object">
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="compilationUnits" Type="System.CodeDom.CodeCompileUnit[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeCompileUnit" />
      </Method>
      <Method Name="CompileAssemblyFromFile" Type="System.CodeDom.Compiler.CompilerResults" BaseName="Object" BaseType="System.Object">
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileNames" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
      </Method>
      <Method Name="CompileAssemblyFromSource" Type="System.CodeDom.Compiler.CompilerResults" BaseName="Object" BaseType="System.Object">
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="sources" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
      </Method>
      <Method Name="CreateCompiler" Type="System.CodeDom.Compiler.ICodeCompiler" IsInterface="True" />
      <Method Name="CreateEscapedIdentifier" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateGenerator" Type="System.CodeDom.Compiler.ICodeGenerator" IsInterface="True" />
      <Method Name="CreateGenerator" Type="System.CodeDom.Compiler.ICodeGenerator" IsInterface="True">
        <Parameter Name="output" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Method>
      <Method Name="CreateGenerator" Type="System.CodeDom.Compiler.ICodeGenerator" IsInterface="True">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateParser" Type="System.CodeDom.Compiler.ICodeParser" IsInterface="True" />
      <Method Name="CreateProvider" Type="System.CodeDom.Compiler.CodeDomProvider" BaseName="Component" BaseType="System.ComponentModel.Component" IsStatic="True">
        <Parameter Name="language" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary`2&lt;System.String, System.String&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="CreateProvider" Type="System.CodeDom.Compiler.CodeDomProvider" BaseName="Component" BaseType="System.ComponentModel.Component" IsStatic="True">
        <Parameter Name="language" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateValidIdentifier" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GenerateCodeFromCompileUnit" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GenerateCodeFromExpression" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GenerateCodeFromMember" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GenerateCodeFromNamespace" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GenerateCodeFromStatement" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GenerateCodeFromType" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="codeType" Type="System.CodeDom.CodeTypeDeclaration" BaseName="CodeTypeMember" BaseType="System.CodeDom.CodeTypeMember" />
        <Parameter Name="writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetAllCompilerInfo" Type="System.CodeDom.Compiler.CompilerInfo[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.Compiler.CompilerInfo" IsStatic="True" />
      <Method Name="GetCompilerInfo" Type="System.CodeDom.Compiler.CompilerInfo" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="language" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetConverter" Type="System.ComponentModel.TypeConverter" BaseName="Object" BaseType="System.Object">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetLanguageFromExtension" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="extension" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetTypeOutput" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="IsDefinedExtension" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="extension" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="IsDefinedLanguage" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="language" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="IsValidIdentifier" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Parse" Type="System.CodeDom.CodeCompileUnit" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
        <Parameter Name="codeStream" Type="System.IO.TextReader" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Method>
      <Method Name="Supports" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="generatorSupport" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
    </Class>
    <Class Name="CodeGenerator" Type="System.CodeDom.Compiler.CodeGenerator" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.CodeDom.Compiler.ICodeGenerator" />
      <Method Name="GenerateCodeFromMember" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="IsValidLanguageIndependentIdentifier" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ValidateIdentifiers" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="e" Type="System.CodeDom.CodeObject" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="CodeGeneratorOptions" Type="System.CodeDom.Compiler.CodeGeneratorOptions" BaseName="Object" BaseType="System.Object">
      <Property Name="BlankLinesBetweenMembers" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="BracingStyle" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ElseOnClosing" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IndentString" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="VerbatimOrder" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Method Name="get_Item" Type="System.Object">
        <Parameter Name="index" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
    </Class>
    <Class Name="CodeParser" Type="System.CodeDom.Compiler.CodeParser" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.CodeDom.Compiler.ICodeParser" />
      <Method Name="Parse" Type="System.CodeDom.CodeCompileUnit" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
        <Parameter Name="codeStream" Type="System.IO.TextReader" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Method>
    </Class>
    <Class Name="CompilerError" Type="System.CodeDom.Compiler.CompilerError" BaseName="Object" BaseType="System.Object">
      <Property Name="Column" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ErrorNumber" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ErrorText" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="FileName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="IsWarning" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Line" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="line" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="column" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="errorNumber" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="errorText" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="CompilerErrorCollection" Type="System.CodeDom.Compiler.CompilerErrorCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="HasErrors" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="HasWarnings" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.CodeDom.Compiler.CompilerError" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerError" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerErrorCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerError[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.Compiler.CompilerError" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerError" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerError[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.Compiler.CompilerError" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerErrorCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerError" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.CodeDom.Compiler.CompilerError[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.Compiler.CompilerError" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerError" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerError" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerError" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="CompilerInfo" Type="System.CodeDom.Compiler.CompilerInfo" BaseName="Object" BaseType="System.Object">
      <Property Name="CodeDomProviderType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="IsCodeDomProviderTypeValid" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="CreateDefaultCompilerParameters" Type="System.CodeDom.Compiler.CompilerParameters" BaseName="Object" BaseType="System.Object" />
      <Method Name="CreateProvider" Type="System.CodeDom.Compiler.CodeDomProvider" BaseName="Component" BaseType="System.ComponentModel.Component">
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary`2&lt;System.String, System.String&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="CreateProvider" Type="System.CodeDom.Compiler.CodeDomProvider" BaseName="Component" BaseType="System.ComponentModel.Component" />
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="o" Type="System.Object" />
      </Method>
      <Method Name="GetExtensions" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetLanguages" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
    </Class>
    <Class Name="CompilerParameters" Type="System.CodeDom.Compiler.CompilerParameters" BaseName="Object" BaseType="System.Object">
      <Property Name="CompilerOptions" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="CoreAssemblyFileName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="EmbeddedResources" Type="System.Collections.Specialized.StringCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Evidence" Type="System.Security.Policy.Evidence" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="GenerateExecutable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="GenerateInMemory" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IncludeDebugInformation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="LinkedResources" Type="System.Collections.Specialized.StringCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="MainClass" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="OutputAssembly" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ReferencedAssemblies" Type="System.Collections.Specialized.StringCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="TempFiles" Type="System.CodeDom.Compiler.TempFileCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="TreatWarningsAsErrors" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="UserToken" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="WarningLevel" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Win32Resource" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="assemblyNames" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
        <Parameter Name="outputName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="includeDebugInformation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="assemblyNames" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
      </Constructor>
      <Constructor>
        <Parameter Name="assemblyNames" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
        <Parameter Name="outputName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CompilerResults" Type="System.CodeDom.Compiler.CompilerResults" BaseName="Object" BaseType="System.Object">
      <Property Name="CompiledAssembly" Type="System.Reflection.Assembly" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Errors" Type="System.CodeDom.Compiler.CompilerErrorCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="Evidence" Type="System.Security.Policy.Evidence" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="NativeCompilerReturnValue" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Output" Type="System.Collections.Specialized.StringCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="PathToAssembly" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="TempFiles" Type="System.CodeDom.Compiler.TempFileCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="tempFiles" Type="System.CodeDom.Compiler.TempFileCollection" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="Executor" Type="System.CodeDom.Compiler.Executor" BaseName="Object" BaseType="System.Object">
      <Method Name="ExecWait" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="cmd" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="tempFiles" Type="System.CodeDom.Compiler.TempFileCollection" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ExecWaitWithCapture" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="cmd" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="tempFiles" Type="System.CodeDom.Compiler.TempFileCollection" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="outputName" Type="System.String&amp;" IsByRef="True" ElementType="System.String" />
        <Parameter Name="errorName" Type="System.String&amp;" IsByRef="True" ElementType="System.String" />
      </Method>
      <Method Name="ExecWaitWithCapture" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="cmd" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="currentDir" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="tempFiles" Type="System.CodeDom.Compiler.TempFileCollection" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="outputName" Type="System.String&amp;" IsByRef="True" ElementType="System.String" />
        <Parameter Name="errorName" Type="System.String&amp;" IsByRef="True" ElementType="System.String" />
      </Method>
      <Method Name="ExecWaitWithCapture" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="userToken" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="cmd" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="tempFiles" Type="System.CodeDom.Compiler.TempFileCollection" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="outputName" Type="System.String&amp;" IsByRef="True" ElementType="System.String" />
        <Parameter Name="errorName" Type="System.String&amp;" IsByRef="True" ElementType="System.String" />
      </Method>
      <Method Name="ExecWaitWithCapture" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="userToken" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="cmd" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="currentDir" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="tempFiles" Type="System.CodeDom.Compiler.TempFileCollection" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="outputName" Type="System.String&amp;" IsByRef="True" ElementType="System.String" />
        <Parameter Name="errorName" Type="System.String&amp;" IsByRef="True" ElementType="System.String" />
      </Method>
    </Class>
    <Class Name="GeneratedCodeAttribute" Type="System.CodeDom.Compiler.GeneratedCodeAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Tool" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Version" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="tool" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="version" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Enumeration Name="GeneratorSupport" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="ArraysOfArrays" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="AssemblyAttributes" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4096" />
      <Field Name="ChainedConstructorArguments" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32768" />
      <Field Name="ComplexExpressions" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="524288" />
      <Field Name="DeclareDelegates" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="512" />
      <Field Name="DeclareEnums" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="256" />
      <Field Name="DeclareEvents" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2048" />
      <Field Name="DeclareIndexerProperties" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="33554432" />
      <Field Name="DeclareInterfaces" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1024" />
      <Field Name="DeclareValueTypes" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="128" />
      <Field Name="EntryPointMethod" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="GenericTypeDeclaration" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16777216" />
      <Field Name="GenericTypeReference" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8388608" />
      <Field Name="GotoStatements" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="MultidimensionalArrays" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="MultipleInterfaceMembers" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="131072" />
      <Field Name="NestedTypes" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="65536" />
      <Field Name="ParameterAttributes" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8192" />
      <Field Name="PartialTypes" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4194304" />
      <Field Name="PublicStaticMembers" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="262144" />
      <Field Name="ReferenceParameters" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16384" />
      <Field Name="Resources" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2097152" />
      <Field Name="ReturnTypeAttributes" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
      <Field Name="StaticConstructors" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="TryCatchStatements" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="Win32Resources" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1048576" />
    </Enumeration>
    <Interface Name="ICodeCompiler" Type="System.CodeDom.Compiler.ICodeCompiler" IsInterface="True">
      <Method Name="CompileAssemblyFromDom" Type="System.CodeDom.Compiler.CompilerResults" BaseName="Object" BaseType="System.Object">
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="compilationUnit" Type="System.CodeDom.CodeCompileUnit" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="CompileAssemblyFromDomBatch" Type="System.CodeDom.Compiler.CompilerResults" BaseName="Object" BaseType="System.Object">
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="compilationUnits" Type="System.CodeDom.CodeCompileUnit[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.CodeDom.CodeCompileUnit" />
      </Method>
      <Method Name="CompileAssemblyFromFile" Type="System.CodeDom.Compiler.CompilerResults" BaseName="Object" BaseType="System.Object">
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CompileAssemblyFromFileBatch" Type="System.CodeDom.Compiler.CompilerResults" BaseName="Object" BaseType="System.Object">
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileNames" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
      </Method>
      <Method Name="CompileAssemblyFromSource" Type="System.CodeDom.Compiler.CompilerResults" BaseName="Object" BaseType="System.Object">
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CompileAssemblyFromSourceBatch" Type="System.CodeDom.Compiler.CompilerResults" BaseName="Object" BaseType="System.Object">
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="sources" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
      </Method>
    </Interface>
    <Interface Name="ICodeGenerator" Type="System.CodeDom.Compiler.ICodeGenerator" IsInterface="True">
      <Method Name="CreateEscapedIdentifier" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateValidIdentifier" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GenerateCodeFromCompileUnit" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="e" Type="System.CodeDom.CodeCompileUnit" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="w" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GenerateCodeFromExpression" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="e" Type="System.CodeDom.CodeExpression" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="w" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GenerateCodeFromNamespace" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="e" Type="System.CodeDom.CodeNamespace" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="w" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GenerateCodeFromStatement" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="e" Type="System.CodeDom.CodeStatement" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
        <Parameter Name="w" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GenerateCodeFromType" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="e" Type="System.CodeDom.CodeTypeDeclaration" BaseName="CodeTypeMember" BaseType="System.CodeDom.CodeTypeMember" />
        <Parameter Name="w" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetTypeOutput" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject" />
      </Method>
      <Method Name="IsValidIdentifier" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Supports" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="supports" Type="System.CodeDom.Compiler.GeneratorSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="ValidateIdentifier" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Interface>
    <Interface Name="ICodeParser" Type="System.CodeDom.Compiler.ICodeParser" IsInterface="True">
      <Method Name="Parse" Type="System.CodeDom.CodeCompileUnit" BaseName="CodeObject" BaseType="System.CodeDom.CodeObject">
        <Parameter Name="codeStream" Type="System.IO.TextReader" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Method>
    </Interface>
    <Class Name="IndentedTextWriter" Type="System.CodeDom.Compiler.IndentedTextWriter" BaseName="TextWriter" BaseType="System.IO.TextWriter">
      <ImplementedInterface Type="System.IDisposable" />
      <Field Name="DefaultTabString" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="    " />
      <Property Name="Encoding" Type="System.Text.Encoding" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Indent" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="InnerWriter" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" IsReadable="True" />
      <Property Name="NewLine" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="tabString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Constructor>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Flush" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="s" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Char[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Char" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Char[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Char" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg0" Type="System.Object" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="s" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Char[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Char" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Char[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Char" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg0" Type="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arg" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.UInt32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WriteLineNoTabs" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="s" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Enumeration Name="LanguageOptions" Type="System.CodeDom.Compiler.LanguageOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="CaseInsensitive" Type="System.CodeDom.Compiler.LanguageOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="None" Type="System.CodeDom.Compiler.LanguageOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="TempFileCollection" Type="System.CodeDom.Compiler.TempFileCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="BasePath" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="KeepFiles" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="TempDir" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="tempDir" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="keepFiles" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="tempDir" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="AddExtension" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="fileExtension" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="keepFile" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AddExtension" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="fileExtension" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddFile" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="keepFile" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="fileNames" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
        <Parameter Name="start" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Delete" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
    </Class>
  </Namespace>
  <Namespace Name="System.Collections.Concurrent">
    <Class Name="BlockingCollection`1&lt;T&gt;" Type="System.Collections.Concurrent.BlockingCollection`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Concurrent.BlockingCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" />
      <Property Name="BoundedCapacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsAddingCompleted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsCompleted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="boundedCapacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="collection" Type="System.Collections.Concurrent.IProducerConsumerCollection`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="boundedCapacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="collection" Type="System.Collections.Concurrent.IProducerConsumerCollection`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Collections.Concurrent.BlockingCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Collections.Concurrent.BlockingCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AddToAny" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" ContainsGenericMethodParameters="True">
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection`1[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Concurrent.BlockingCollection`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" ContainsGenericParameters="True" />
        <Parameter Name="item" Type="System.Collections.Concurrent.BlockingCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="AddToAny" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" ContainsGenericMethodParameters="True">
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection`1[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Concurrent.BlockingCollection`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" ContainsGenericParameters="True" />
        <Parameter Name="item" Type="System.Collections.Concurrent.BlockingCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CompleteAdding" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="array" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Concurrent.BlockingCollection`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="GetConsumingEnumerable" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Concurrent.BlockingCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="GetConsumingEnumerable" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Concurrent.BlockingCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Take" Type="System.Collections.Concurrent.BlockingCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" ContainsGenericMethodParameters="True" />
      <Method Name="Take" Type="System.Collections.Concurrent.BlockingCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" ContainsGenericMethodParameters="True">
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TakeFromAny" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" ContainsGenericMethodParameters="True">
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection`1[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Concurrent.BlockingCollection`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" ContainsGenericParameters="True" />
        <Parameter Name="item" Type="T&amp;" IsByRef="True" ElementType="System.Collections.Concurrent.BlockingCollection`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="TakeFromAny" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" ContainsGenericMethodParameters="True">
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection`1[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Concurrent.BlockingCollection`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" ContainsGenericParameters="True" />
        <Parameter Name="item" Type="T&amp;" IsByRef="True" ElementType="System.Collections.Concurrent.BlockingCollection`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ToArray" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Concurrent.BlockingCollection`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True" />
      <Method Name="TryAdd" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Collections.Concurrent.BlockingCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="TryAdd" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Collections.Concurrent.BlockingCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="timeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TryAdd" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Collections.Concurrent.BlockingCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TryAdd" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Collections.Concurrent.BlockingCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TryAddToAny" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" ContainsGenericMethodParameters="True">
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection`1[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Concurrent.BlockingCollection`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" ContainsGenericParameters="True" />
        <Parameter Name="item" Type="System.Collections.Concurrent.BlockingCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="TryAddToAny" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" ContainsGenericMethodParameters="True">
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection`1[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Concurrent.BlockingCollection`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" ContainsGenericParameters="True" />
        <Parameter Name="item" Type="System.Collections.Concurrent.BlockingCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="timeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TryAddToAny" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" ContainsGenericMethodParameters="True">
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection`1[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Concurrent.BlockingCollection`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" ContainsGenericParameters="True" />
        <Parameter Name="item" Type="System.Collections.Concurrent.BlockingCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TryAddToAny" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" ContainsGenericMethodParameters="True">
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection`1[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Concurrent.BlockingCollection`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" ContainsGenericParameters="True" />
        <Parameter Name="item" Type="System.Collections.Concurrent.BlockingCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TryTake" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="T&amp;" IsByRef="True" ElementType="System.Collections.Concurrent.BlockingCollection`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="TryTake" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="T&amp;" IsByRef="True" ElementType="System.Collections.Concurrent.BlockingCollection`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="timeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TryTake" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="T&amp;" IsByRef="True" ElementType="System.Collections.Concurrent.BlockingCollection`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TryTake" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="T&amp;" IsByRef="True" ElementType="System.Collections.Concurrent.BlockingCollection`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TryTakeFromAny" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" ContainsGenericMethodParameters="True">
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection`1[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Concurrent.BlockingCollection`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" ContainsGenericParameters="True" />
        <Parameter Name="item" Type="T&amp;" IsByRef="True" ElementType="System.Collections.Concurrent.BlockingCollection`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="TryTakeFromAny" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" ContainsGenericMethodParameters="True">
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection`1[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Concurrent.BlockingCollection`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" ContainsGenericParameters="True" />
        <Parameter Name="item" Type="T&amp;" IsByRef="True" ElementType="System.Collections.Concurrent.BlockingCollection`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="timeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TryTakeFromAny" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" ContainsGenericMethodParameters="True">
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection`1[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Concurrent.BlockingCollection`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" ContainsGenericParameters="True" />
        <Parameter Name="item" Type="T&amp;" IsByRef="True" ElementType="System.Collections.Concurrent.BlockingCollection`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TryTakeFromAny" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" ContainsGenericMethodParameters="True">
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection`1[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Concurrent.BlockingCollection`1&lt;System.Collections.Concurrent.BlockingCollection`1+T&gt;" ContainsGenericParameters="True" />
        <Parameter Name="item" Type="T&amp;" IsByRef="True" ElementType="System.Collections.Concurrent.BlockingCollection`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="ConcurrentBag`1&lt;T&gt;" Type="System.Collections.Concurrent.ConcurrentBag`1&lt;System.Collections.Concurrent.ConcurrentBag`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Concurrent.ConcurrentBag`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Concurrent.IProducerConsumerCollection`1&lt;System.Collections.Concurrent.ConcurrentBag`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Concurrent.ConcurrentBag`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Collections.Concurrent.ConcurrentBag`1+T&gt;" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsEmpty" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Concurrent.ConcurrentBag`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Collections.Concurrent.ConcurrentBag`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="array" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Concurrent.ConcurrentBag`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Generic.IEnumerator`1&lt;System.Collections.Concurrent.ConcurrentBag`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Concurrent.ConcurrentBag`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="ToArray" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Concurrent.ConcurrentBag`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True" />
      <Method Name="TryPeek" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="result" Type="T&amp;" IsByRef="True" ElementType="System.Collections.Concurrent.ConcurrentBag`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="TryTake" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="result" Type="T&amp;" IsByRef="True" ElementType="System.Collections.Concurrent.ConcurrentBag`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.Collections.Generic">
    <Interface Name="ISet`1&lt;T&gt;" Type="System.Collections.Generic.ISet`1&lt;System.Collections.Generic.ISet`1+T&gt;" IsInterface="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.ISet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Collections.Generic.ISet`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.ISet`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="Add" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Collections.Generic.ISet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="ExceptWith" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.ISet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="IntersectWith" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.ISet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="IsProperSubsetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.ISet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="IsProperSupersetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.ISet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="IsSubsetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.ISet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="IsSupersetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.ISet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Overlaps" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.ISet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SetEquals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.ISet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SymmetricExceptWith" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.ISet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="UnionWith" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.ISet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
    </Interface>
    <Class Name="LinkedList`1&lt;T&gt;" Type="System.Collections.Generic.LinkedList`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.LinkedList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.Serialization.IDeserializationCallback" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="First" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsReadable="True">
        <GenericTypeArgument Type="System.Collections.Generic.LinkedList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Property>
      <Property Name="Last" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsReadable="True">
        <GenericTypeArgument Type="System.Collections.Generic.LinkedList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Property>
      <Constructor>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Method Name="AddAfter" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="newNode" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="AddAfter" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.LinkedList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="value" Type="System.Collections.Generic.LinkedList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="AddBefore" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.LinkedList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="value" Type="System.Collections.Generic.LinkedList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="AddBefore" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="newNode" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="AddFirst" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.LinkedList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="value" Type="System.Collections.Generic.LinkedList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="AddFirst" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="AddLast" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.LinkedList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="value" Type="System.Collections.Generic.LinkedList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="AddLast" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="value" Type="System.Collections.Generic.LinkedList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="array" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Generic.LinkedList`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Find" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.LinkedList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="value" Type="System.Collections.Generic.LinkedList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="FindLast" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.LinkedList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="value" Type="System.Collections.Generic.LinkedList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Generic.LinkedList`1&lt;System.Collections.Generic.LinkedList`1+T&gt;+Enumerator" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.LinkedList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="GetObjectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="OnDeserialization" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="sender" Type="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="value" Type="System.Collections.Generic.LinkedList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedList`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="RemoveFirst" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="RemoveLast" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
    </Class>
    <Struct Name="LinkedList`1&lt;T&gt;.Enumerator" Type="System.Collections.Generic.LinkedList`1&lt;System.Collections.Generic.LinkedList`1+Enumerator+T&gt;+Enumerator" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.LinkedList`1+Enumerator+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerator`1&lt;System.Collections.Generic.LinkedList`1+Enumerator+T&gt;" />
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Collections.IEnumerator" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.Serialization.IDeserializationCallback" />
      <Property Name="Current" Type="System.Collections.Generic.LinkedList`1+Enumerator+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" IsReadable="True" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="MoveNext" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
    </Struct>
    <Class Name="LinkedListNode`1&lt;T&gt;" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedListNode`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.LinkedListNode`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <Property Name="List" Type="System.Collections.Generic.LinkedList`1&lt;System.Collections.Generic.LinkedListNode`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsReadable="True">
        <GenericTypeArgument Type="System.Collections.Generic.LinkedListNode`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Property>
      <Property Name="Next" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedListNode`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True" IsReadable="True">
        <GenericTypeParameter Type="System.Collections.Generic.LinkedListNode`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Property>
      <Property Name="Previous" Type="System.Collections.Generic.LinkedListNode`1&lt;System.Collections.Generic.LinkedListNode`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True" IsReadable="True">
        <GenericTypeParameter Type="System.Collections.Generic.LinkedListNode`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Property>
      <Property Name="Value" Type="System.Collections.Generic.LinkedListNode`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="value" Type="System.Collections.Generic.LinkedListNode`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Constructor>
    </Class>
    <Class Name="Queue`1&lt;T&gt;" Type="System.Collections.Generic.Queue`1&lt;System.Collections.Generic.Queue`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.Queue`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.Queue`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Collections.Generic.Queue`1+T&gt;" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.Queue`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Collections.Generic.Queue`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="array" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Generic.Queue`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="arrayIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Dequeue" Type="System.Collections.Generic.Queue`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" ContainsGenericMethodParameters="True" />
      <Method Name="Enqueue" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Collections.Generic.Queue`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Generic.Queue`1&lt;System.Collections.Generic.Queue`1+T&gt;+Enumerator" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.Queue`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="Peek" Type="System.Collections.Generic.Queue`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" ContainsGenericMethodParameters="True" />
      <Method Name="ToArray" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Generic.Queue`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True" />
      <Method Name="TrimExcess" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
    </Class>
    <Struct Name="Queue`1&lt;T&gt;.Enumerator" Type="System.Collections.Generic.Queue`1&lt;System.Collections.Generic.Queue`1+Enumerator+T&gt;+Enumerator" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.Queue`1+Enumerator+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerator`1&lt;System.Collections.Generic.Queue`1+Enumerator+T&gt;" />
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Collections.IEnumerator" />
      <Property Name="Current" Type="System.Collections.Generic.Queue`1+Enumerator+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" IsReadable="True" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="MoveNext" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
    </Struct>
    <Class Name="SortedDictionary`2&lt;TKey, TValue&gt;" Type="System.Collections.Generic.SortedDictionary`2&lt;System.Collections.Generic.SortedDictionary`2+TKey, System.Collections.Generic.SortedDictionary`2+TValue&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.SortedDictionary`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Collections.Generic.SortedDictionary`2+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <ImplementedInterface Type="System.Collections.Generic.IDictionary`2&lt;System.Collections.Generic.SortedDictionary`2+TKey, System.Collections.Generic.SortedDictionary`2+TValue&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.Collections.Generic.SortedDictionary`2+TKey, System.Collections.Generic.SortedDictionary`2+TValue&gt;&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.Collections.Generic.SortedDictionary`2+TKey, System.Collections.Generic.SortedDictionary`2+TValue&gt;&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IDictionary" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyDictionary`2&lt;System.Collections.Generic.SortedDictionary`2+TKey, System.Collections.Generic.SortedDictionary`2+TValue&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.Collections.Generic.SortedDictionary`2+TKey, System.Collections.Generic.SortedDictionary`2+TValue&gt;&gt;" />
      <Property Name="Comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Collections.Generic.SortedDictionary`2+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsReadable="True">
        <GenericTypeArgument Type="System.Collections.Generic.SortedDictionary`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Property>
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Keys" Type="System.Collections.Generic.SortedDictionary`2&lt;System.Collections.Generic.SortedDictionary`2+TKey, System.Collections.Generic.SortedDictionary`2+TValue&gt;+KeyCollection" BaseName="Object" BaseType="System.Object" IsNested="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsReadable="True">
        <GenericTypeArgument Type="System.Collections.Generic.SortedDictionary`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <GenericTypeArgument Type="System.Collections.Generic.SortedDictionary`2+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      </Property>
      <Property Name="Values" Type="System.Collections.Generic.SortedDictionary`2&lt;System.Collections.Generic.SortedDictionary`2+TKey, System.Collections.Generic.SortedDictionary`2+TValue&gt;+ValueCollection" BaseName="Object" BaseType="System.Object" IsNested="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsReadable="True">
        <GenericTypeArgument Type="System.Collections.Generic.SortedDictionary`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <GenericTypeArgument Type="System.Collections.Generic.SortedDictionary`2+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      </Property>
      <Method Name="get_Item" Type="System.Collections.Generic.SortedDictionary`2+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" ContainsGenericMethodParameters="True">
        <Parameter Name="key" Type="System.Collections.Generic.SortedDictionary`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="key" Type="System.Collections.Generic.SortedDictionary`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="value" Type="System.Collections.Generic.SortedDictionary`2+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      </Method>
      <Constructor>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Collections.Generic.SortedDictionary`2+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary`2&lt;System.Collections.Generic.SortedDictionary`2+TKey, System.Collections.Generic.SortedDictionary`2+TValue&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary`2&lt;System.Collections.Generic.SortedDictionary`2+TKey, System.Collections.Generic.SortedDictionary`2+TValue&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Collections.Generic.SortedDictionary`2+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="key" Type="System.Collections.Generic.SortedDictionary`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="value" Type="System.Collections.Generic.SortedDictionary`2+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="ContainsKey" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="key" Type="System.Collections.Generic.SortedDictionary`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="ContainsValue" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="value" Type="System.Collections.Generic.SortedDictionary`2+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="array" Type="KeyValuePair`2[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Generic.KeyValuePair`2&lt;System.Collections.Generic.SortedDictionary`2+TKey, System.Collections.Generic.SortedDictionary`2+TValue&gt;" ContainsGenericParameters="True" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Generic.SortedDictionary`2&lt;System.Collections.Generic.SortedDictionary`2+TKey, System.Collections.Generic.SortedDictionary`2+TValue&gt;+Enumerator" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.SortedDictionary`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <GenericTypeArgument Type="System.Collections.Generic.SortedDictionary`2+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      </Method>
      <Method Name="Remove" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="key" Type="System.Collections.Generic.SortedDictionary`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="TryGetValue" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="key" Type="System.Collections.Generic.SortedDictionary`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="value" Type="TValue&amp;" IsByRef="True" ElementType="System.Collections.Generic.SortedDictionary`2+TValue" IsGenericParameterElement="True" ContainsGenericParameters="True" />
      </Method>
    </Class>
    <Struct Name="SortedDictionary`2&lt;TKey, TValue&gt;.Enumerator" Type="System.Collections.Generic.SortedDictionary`2&lt;System.Collections.Generic.SortedDictionary`2+Enumerator+TKey, System.Collections.Generic.SortedDictionary`2+Enumerator+TValue&gt;+Enumerator" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.SortedDictionary`2+Enumerator+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Collections.Generic.SortedDictionary`2+Enumerator+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerator`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.Collections.Generic.SortedDictionary`2+Enumerator+TKey, System.Collections.Generic.SortedDictionary`2+Enumerator+TValue&gt;&gt;" />
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Collections.IEnumerator" />
      <ImplementedInterface Type="System.Collections.IDictionaryEnumerator" />
      <Property Name="Current" Type="System.Collections.Generic.KeyValuePair`2&lt;System.Collections.Generic.SortedDictionary`2+Enumerator+TKey, System.Collections.Generic.SortedDictionary`2+Enumerator+TValue&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsReadable="True">
        <GenericTypeArgument Type="System.Collections.Generic.SortedDictionary`2+Enumerator+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <GenericTypeArgument Type="System.Collections.Generic.SortedDictionary`2+Enumerator+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      </Property>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="MoveNext" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
    </Struct>
    <Class Name="SortedDictionary`2&lt;TKey, TValue&gt;.KeyCollection" Type="System.Collections.Generic.SortedDictionary`2&lt;System.Collections.Generic.SortedDictionary`2+KeyCollection+TKey, System.Collections.Generic.SortedDictionary`2+KeyCollection+TValue&gt;+KeyCollection" BaseName="Object" BaseType="System.Object" IsNested="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.SortedDictionary`2+KeyCollection+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Collections.Generic.SortedDictionary`2+KeyCollection+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Collections.Generic.SortedDictionary`2+KeyCollection+TKey&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.SortedDictionary`2+KeyCollection+TKey&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Collections.Generic.SortedDictionary`2+KeyCollection+TKey&gt;" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="dictionary" Type="System.Collections.Generic.SortedDictionary`2&lt;System.Collections.Generic.SortedDictionary`2+KeyCollection+TKey, System.Collections.Generic.SortedDictionary`2+KeyCollection+TValue&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="array" Type="TKey[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Generic.SortedDictionary`2+KeyCollection+TKey" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Generic.SortedDictionary`2&lt;System.Collections.Generic.SortedDictionary`2+KeyCollection+TKey, System.Collections.Generic.SortedDictionary`2+KeyCollection+TValue&gt;+KeyCollection+Enumerator" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.SortedDictionary`2+KeyCollection+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <GenericTypeArgument Type="System.Collections.Generic.SortedDictionary`2+KeyCollection+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      </Method>
    </Class>
    <Struct Name="SortedDictionary`2&lt;TKey, TValue&gt;.KeyCollection.Enumerator" Type="System.Collections.Generic.SortedDictionary`2&lt;System.Collections.Generic.SortedDictionary`2+KeyCollection+Enumerator+TKey, System.Collections.Generic.SortedDictionary`2+KeyCollection+Enumerator+TValue&gt;+KeyCollection+Enumerator" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.SortedDictionary`2+KeyCollection+Enumerator+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Collections.Generic.SortedDictionary`2+KeyCollection+Enumerator+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerator`1&lt;System.Collections.Generic.SortedDictionary`2+KeyCollection+Enumerator+TKey&gt;" />
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Collections.IEnumerator" />
      <Property Name="Current" Type="System.Collections.Generic.SortedDictionary`2+KeyCollection+Enumerator+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" IsReadable="True" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="MoveNext" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
    </Struct>
    <Class Name="SortedDictionary`2&lt;TKey, TValue&gt;.ValueCollection" Type="System.Collections.Generic.SortedDictionary`2&lt;System.Collections.Generic.SortedDictionary`2+ValueCollection+TKey, System.Collections.Generic.SortedDictionary`2+ValueCollection+TValue&gt;+ValueCollection" BaseName="Object" BaseType="System.Object" IsNested="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.SortedDictionary`2+ValueCollection+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Collections.Generic.SortedDictionary`2+ValueCollection+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Collections.Generic.SortedDictionary`2+ValueCollection+TValue&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.SortedDictionary`2+ValueCollection+TValue&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Collections.Generic.SortedDictionary`2+ValueCollection+TValue&gt;" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="dictionary" Type="System.Collections.Generic.SortedDictionary`2&lt;System.Collections.Generic.SortedDictionary`2+ValueCollection+TKey, System.Collections.Generic.SortedDictionary`2+ValueCollection+TValue&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="array" Type="TValue[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Generic.SortedDictionary`2+ValueCollection+TValue" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Generic.SortedDictionary`2&lt;System.Collections.Generic.SortedDictionary`2+ValueCollection+TKey, System.Collections.Generic.SortedDictionary`2+ValueCollection+TValue&gt;+ValueCollection+Enumerator" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.SortedDictionary`2+ValueCollection+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <GenericTypeArgument Type="System.Collections.Generic.SortedDictionary`2+ValueCollection+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      </Method>
    </Class>
    <Struct Name="SortedDictionary`2&lt;TKey, TValue&gt;.ValueCollection.Enumerator" Type="System.Collections.Generic.SortedDictionary`2&lt;System.Collections.Generic.SortedDictionary`2+ValueCollection+Enumerator+TKey, System.Collections.Generic.SortedDictionary`2+ValueCollection+Enumerator+TValue&gt;+ValueCollection+Enumerator" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.SortedDictionary`2+ValueCollection+Enumerator+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Collections.Generic.SortedDictionary`2+ValueCollection+Enumerator+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerator`1&lt;System.Collections.Generic.SortedDictionary`2+ValueCollection+Enumerator+TValue&gt;" />
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Collections.IEnumerator" />
      <Property Name="Current" Type="System.Collections.Generic.SortedDictionary`2+ValueCollection+Enumerator+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" IsReadable="True" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="MoveNext" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
    </Struct>
    <Class Name="SortedList`2&lt;TKey, TValue&gt;" Type="System.Collections.Generic.SortedList`2&lt;System.Collections.Generic.SortedList`2+TKey, System.Collections.Generic.SortedList`2+TValue&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.SortedList`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <GenericTypeParameter Type="System.Collections.Generic.SortedList`2+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      <ImplementedInterface Type="System.Collections.Generic.IDictionary`2&lt;System.Collections.Generic.SortedList`2+TKey, System.Collections.Generic.SortedList`2+TValue&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.Collections.Generic.SortedList`2+TKey, System.Collections.Generic.SortedList`2+TValue&gt;&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.Collections.Generic.SortedList`2+TKey, System.Collections.Generic.SortedList`2+TValue&gt;&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IDictionary" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyDictionary`2&lt;System.Collections.Generic.SortedList`2+TKey, System.Collections.Generic.SortedList`2+TValue&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.Collections.Generic.SortedList`2+TKey, System.Collections.Generic.SortedList`2+TValue&gt;&gt;" />
      <Property Name="Capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Collections.Generic.SortedList`2+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsReadable="True">
        <GenericTypeArgument Type="System.Collections.Generic.SortedList`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Property>
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Keys" Type="System.Collections.Generic.IList`1&lt;System.Collections.Generic.SortedList`2+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsReadable="True">
        <GenericTypeArgument Type="System.Collections.Generic.SortedList`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Property>
      <Property Name="Values" Type="System.Collections.Generic.IList`1&lt;System.Collections.Generic.SortedList`2+TValue&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsReadable="True">
        <GenericTypeArgument Type="System.Collections.Generic.SortedList`2+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      </Property>
      <Method Name="get_Item" Type="System.Collections.Generic.SortedList`2+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" ContainsGenericMethodParameters="True">
        <Parameter Name="key" Type="System.Collections.Generic.SortedList`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="key" Type="System.Collections.Generic.SortedList`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="value" Type="System.Collections.Generic.SortedList`2+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      </Method>
      <Constructor>
        <Parameter Name="capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Collections.Generic.SortedList`2+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Collections.Generic.SortedList`2+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary`2&lt;System.Collections.Generic.SortedList`2+TKey, System.Collections.Generic.SortedList`2+TValue&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary`2&lt;System.Collections.Generic.SortedList`2+TKey, System.Collections.Generic.SortedList`2+TValue&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Collections.Generic.SortedList`2+TKey&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="key" Type="System.Collections.Generic.SortedList`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="value" Type="System.Collections.Generic.SortedList`2+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="ContainsKey" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="key" Type="System.Collections.Generic.SortedList`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="ContainsValue" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="value" Type="System.Collections.Generic.SortedList`2+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Generic.IEnumerator`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.Collections.Generic.SortedList`2+TKey, System.Collections.Generic.SortedList`2+TValue&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.KeyValuePair`2&lt;System.Collections.Generic.SortedList`2+TKey, System.Collections.Generic.SortedList`2+TValue&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="IndexOfKey" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="key" Type="System.Collections.Generic.SortedList`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="IndexOfValue" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="value" Type="System.Collections.Generic.SortedList`2+TValue" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="1" />
      </Method>
      <Method Name="Remove" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="key" Type="System.Collections.Generic.SortedList`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="RemoveAt" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TrimExcess" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="TryGetValue" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="key" Type="System.Collections.Generic.SortedList`2+TKey" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="value" Type="TValue&amp;" IsByRef="True" ElementType="System.Collections.Generic.SortedList`2+TValue" IsGenericParameterElement="True" ContainsGenericParameters="True" />
      </Method>
    </Class>
    <Class Name="SortedSet`1&lt;T&gt;" Type="System.Collections.Generic.SortedSet`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.SortedSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Generic.ISet`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.Serialization.IDeserializationCallback" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" />
      <Property Name="Comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsReadable="True">
        <GenericTypeArgument Type="System.Collections.Generic.SortedSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Property>
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Max" Type="System.Collections.Generic.SortedSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" IsReadable="True" />
      <Property Name="Min" Type="System.Collections.Generic.SortedSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" IsReadable="True" />
      <Constructor>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Method Name="Add" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Collections.Generic.SortedSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Collections.Generic.SortedSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="array" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Generic.SortedSet`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="array" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Generic.SortedSet`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="array" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Generic.SortedSet`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CreateSetComparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Collections.Generic.SortedSet`1&lt;System.Collections.Generic.SortedSet`1+T&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.SortedSet`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="CreateSetComparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Collections.Generic.SortedSet`1&lt;System.Collections.Generic.SortedSet`1+T&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" IsStatic="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.SortedSet`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True" />
        <Parameter Name="memberEqualityComparer" Type="System.Collections.Generic.IEqualityComparer`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="ExceptWith" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Generic.SortedSet`1&lt;System.Collections.Generic.SortedSet`1+T&gt;+Enumerator" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.SortedSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="GetViewBetween" Type="System.Collections.Generic.SortedSet`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeParameter Type="System.Collections.Generic.SortedSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="lowerValue" Type="System.Collections.Generic.SortedSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="upperValue" Type="System.Collections.Generic.SortedSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="IntersectWith" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="IsProperSubsetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="IsProperSupersetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="IsSubsetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="IsSupersetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Overlaps" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Remove" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Collections.Generic.SortedSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="RemoveWhere" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="match" Type="System.Predicate`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="Reverse" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.SortedSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="SetEquals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="SymmetricExceptWith" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="TryGetValue" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="equalValue" Type="System.Collections.Generic.SortedSet`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
        <Parameter Name="actualValue" Type="T&amp;" IsByRef="True" ElementType="System.Collections.Generic.SortedSet`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
      </Method>
      <Method Name="UnionWith" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.SortedSet`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Method>
    </Class>
    <Struct Name="SortedSet`1&lt;T&gt;.Enumerator" Type="System.Collections.Generic.SortedSet`1&lt;System.Collections.Generic.SortedSet`1+Enumerator+T&gt;+Enumerator" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.SortedSet`1+Enumerator+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerator`1&lt;System.Collections.Generic.SortedSet`1+Enumerator+T&gt;" />
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Collections.IEnumerator" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.Serialization.IDeserializationCallback" />
      <Property Name="Current" Type="System.Collections.Generic.SortedSet`1+Enumerator+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" IsReadable="True" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="MoveNext" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
    </Struct>
    <Class Name="Stack`1&lt;T&gt;" Type="System.Collections.Generic.Stack`1&lt;System.Collections.Generic.Stack`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.Stack`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.Stack`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Collections.Generic.Stack`1+T&gt;" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.Stack`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Collections.Generic.Stack`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="array" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Generic.Stack`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" />
        <Parameter Name="arrayIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Generic.Stack`1&lt;System.Collections.Generic.Stack`1+T&gt;+Enumerator" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True">
        <GenericTypeArgument Type="System.Collections.Generic.Stack`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="Peek" Type="System.Collections.Generic.Stack`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" ContainsGenericMethodParameters="True" />
      <Method Name="Pop" Type="System.Collections.Generic.Stack`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" ContainsGenericMethodParameters="True" />
      <Method Name="Push" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="item" Type="System.Collections.Generic.Stack`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      </Method>
      <Method Name="ToArray" Type="T[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Collections.Generic.Stack`1+T" IsGenericParameterElement="True" ContainsGenericParameters="True" ContainsGenericMethodParameters="True" />
      <Method Name="TrimExcess" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
    </Class>
    <Struct Name="Stack`1&lt;T&gt;.Enumerator" Type="System.Collections.Generic.Stack`1&lt;System.Collections.Generic.Stack`1+Enumerator+T&gt;+Enumerator" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.Generic.Stack`1+Enumerator+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerator`1&lt;System.Collections.Generic.Stack`1+Enumerator+T&gt;" />
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Collections.IEnumerator" />
      <Property Name="Current" Type="System.Collections.Generic.Stack`1+Enumerator+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" IsReadable="True" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="MoveNext" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
    </Struct>
  </Namespace>
  <Namespace Name="System.Collections.ObjectModel">
    <Class Name="ObservableCollection`1&lt;T&gt;" Type="System.Collections.ObjectModel.ObservableCollection`1&lt;System.Collections.ObjectModel.ObservableCollection`1+T&gt;" BaseName="Collection`1&lt;T&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Collections.ObjectModel.ObservableCollection`1+T&gt;" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.ObjectModel.ObservableCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Generic.IList`1&lt;System.Collections.ObjectModel.ObservableCollection`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Collections.ObjectModel.ObservableCollection`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.ObjectModel.ObservableCollection`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyList`1&lt;System.Collections.ObjectModel.ObservableCollection`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Collections.ObjectModel.ObservableCollection`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Specialized.INotifyCollectionChanged" />
      <ImplementedInterface Type="System.ComponentModel.INotifyPropertyChanged" />
      <Constructor>
        <Parameter Name="list" Type="System.Collections.Generic.List`1&lt;System.Collections.ObjectModel.ObservableCollection`1+T&gt;" BaseName="Object" BaseType="System.Object" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.ObjectModel.ObservableCollection`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Method Name="Move" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="oldIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="newIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Event Name="CollectionChanged" Type="System.Collections.Specialized.NotifyCollectionChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Class Name="ReadOnlyObservableCollection`1&lt;T&gt;" Type="System.Collections.ObjectModel.ReadOnlyObservableCollection`1&lt;System.Collections.ObjectModel.ReadOnlyObservableCollection`1+T&gt;" BaseName="ReadOnlyCollection`1&lt;T&gt;" BaseType="System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Collections.ObjectModel.ReadOnlyObservableCollection`1+T&gt;" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.Collections.ObjectModel.ReadOnlyObservableCollection`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Generic.IList`1&lt;System.Collections.ObjectModel.ReadOnlyObservableCollection`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Collections.ObjectModel.ReadOnlyObservableCollection`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Collections.ObjectModel.ReadOnlyObservableCollection`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyList`1&lt;System.Collections.ObjectModel.ReadOnlyObservableCollection`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Collections.ObjectModel.ReadOnlyObservableCollection`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Specialized.INotifyCollectionChanged" />
      <ImplementedInterface Type="System.ComponentModel.INotifyPropertyChanged" />
      <Constructor>
        <Parameter Name="list" Type="System.Collections.ObjectModel.ObservableCollection`1&lt;System.Collections.ObjectModel.ReadOnlyObservableCollection`1+T&gt;" BaseName="Collection`1&lt;T&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Collections.ObjectModel.ReadOnlyObservableCollection`1+T&gt;" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
    </Class>
  </Namespace>
  <Namespace Name="System.Collections.Specialized">
    <Struct Name="BitVector32" Type="System.Collections.Specialized.BitVector32" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
      <Property Name="Data" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="bit" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="bit" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="get_Item" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="section" Type="System.Collections.Specialized.BitVector32+Section" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="section" Type="System.Collections.Specialized.BitVector32+Section" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" />
        <Parameter Name="value" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Constructor>
        <Parameter Name="data" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Collections.Specialized.BitVector32" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="CreateMask" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" />
      <Method Name="CreateMask" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="previous" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CreateSection" Type="System.Collections.Specialized.BitVector32+Section" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" IsStatic="True">
        <Parameter Name="maxValue" Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CreateSection" Type="System.Collections.Specialized.BitVector32+Section" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" IsStatic="True">
        <Parameter Name="maxValue" Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="previous" Type="System.Collections.Specialized.BitVector32+Section" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="o" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="value" Type="System.Collections.Specialized.BitVector32" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Struct>
    <Struct Name="BitVector32.Section" Type="System.Collections.Specialized.BitVector32+Section" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True">
      <Property Name="Mask" Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Offset" Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="o" Type="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Collections.Specialized.BitVector32+Section" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="op_Equality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="a" Type="System.Collections.Specialized.BitVector32+Section" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" />
        <Parameter Name="b" Type="System.Collections.Specialized.BitVector32+Section" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" />
      </Method>
      <Method Name="op_Inequality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="a" Type="System.Collections.Specialized.BitVector32+Section" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" />
        <Parameter Name="b" Type="System.Collections.Specialized.BitVector32+Section" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="value" Type="System.Collections.Specialized.BitVector32+Section" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsNested="True" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Struct>
    <Class Name="CollectionsUtil" Type="System.Collections.Specialized.CollectionsUtil" BaseName="Object" BaseType="System.Object">
      <Method Name="CreateCaseInsensitiveHashtable" Type="System.Collections.Hashtable" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CreateCaseInsensitiveHashtable" Type="System.Collections.Hashtable" BaseName="Object" BaseType="System.Object" IsStatic="True" />
      <Method Name="CreateCaseInsensitiveHashtable" Type="System.Collections.Hashtable" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="d" Type="System.Collections.IDictionary" IsInterface="True" />
      </Method>
      <Method Name="CreateCaseInsensitiveSortedList" Type="System.Collections.SortedList" BaseName="Object" BaseType="System.Object" IsStatic="True" />
    </Class>
    <Class Name="HybridDictionary" Type="System.Collections.Specialized.HybridDictionary" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.IDictionary" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsFixedSize" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSynchronized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Keys" Type="System.Collections.ICollection" IsInterface="True" IsReadable="True" />
      <Property Name="SyncRoot" Type="System.Object" IsReadable="True" />
      <Property Name="Values" Type="System.Collections.ICollection" IsInterface="True" IsReadable="True" />
      <Method Name="get_Item" Type="System.Object">
        <Parameter Name="key" Type="System.Object" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Constructor>
        <Parameter Name="initialSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="caseInsensitive" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="initialSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="caseInsensitive" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Array" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IDictionaryEnumerator" IsInterface="True" />
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.Object" />
      </Method>
    </Class>
    <Interface Name="INotifyCollectionChanged" Type="System.Collections.Specialized.INotifyCollectionChanged" IsInterface="True">
      <Event Name="CollectionChanged" Type="System.Collections.Specialized.NotifyCollectionChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Interface>
    <Interface Name="IOrderedDictionary" Type="System.Collections.Specialized.IOrderedDictionary" IsInterface="True">
      <ImplementedInterface Type="System.Collections.IDictionary" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IDictionaryEnumerator" IsInterface="True" />
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="RemoveAt" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Interface>
    <Class Name="ListDictionary" Type="System.Collections.Specialized.ListDictionary" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.IDictionary" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsFixedSize" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSynchronized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Keys" Type="System.Collections.ICollection" IsInterface="True" IsReadable="True" />
      <Property Name="SyncRoot" Type="System.Object" IsReadable="True" />
      <Property Name="Values" Type="System.Collections.ICollection" IsInterface="True" IsReadable="True" />
      <Method Name="get_Item" Type="System.Object">
        <Parameter Name="key" Type="System.Object" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Constructor>
        <Parameter Name="comparer" Type="System.Collections.IComparer" IsInterface="True" />
      </Constructor>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Array" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IDictionaryEnumerator" IsInterface="True" />
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.Object" />
      </Method>
    </Class>
    <Class Name="NameObjectCollectionBase" Type="System.Collections.Specialized.NameObjectCollectionBase" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.Serialization.IDeserializationCallback" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Keys" Type="System.Collections.Specialized.NameObjectCollectionBase+KeysCollection" BaseName="Object" BaseType="System.Object" IsNested="True" IsReadable="True" />
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
      <Method Name="GetObjectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="OnDeserialization" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
      </Method>
    </Class>
    <Class Name="NameObjectCollectionBase.KeysCollection" Type="System.Collections.Specialized.NameObjectCollectionBase+KeysCollection" BaseName="Object" BaseType="System.Object" IsNested="True">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Get" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
    </Class>
    <Class Name="NameValueCollection" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.Serialization.IDeserializationCallback" />
      <Property Name="AllKeys" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" IsReadable="True" />
      <Method Name="get_Item" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="get_Item" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Constructor>
        <Parameter Name="col" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="hashProvider" Type="System.Collections.IHashCodeProvider" IsInterface="True" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" IsInterface="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" IsInterface="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" IsInterface="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="col" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="hashProvider" Type="System.Collections.IHashCodeProvider" IsInterface="True" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" IsInterface="True" />
      </Constructor>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="c" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="dest" Type="System.Array" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Get" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Get" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetKey" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetValues" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetValues" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="HasKeys" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Set" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Enumeration Name="NotifyCollectionChangedAction" Type="System.Collections.Specialized.NotifyCollectionChangedAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Add" Type="System.Collections.Specialized.NotifyCollectionChangedAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Move" Type="System.Collections.Specialized.NotifyCollectionChangedAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Remove" Type="System.Collections.Specialized.NotifyCollectionChangedAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Replace" Type="System.Collections.Specialized.NotifyCollectionChangedAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Reset" Type="System.Collections.Specialized.NotifyCollectionChangedAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
    </Enumeration>
    <Class Name="NotifyCollectionChangedEventArgs" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Action" Type="System.Collections.Specialized.NotifyCollectionChangedAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="NewItems" Type="System.Collections.IList" IsInterface="True" IsReadable="True" />
      <Property Name="NewStartingIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="OldItems" Type="System.Collections.IList" IsInterface="True" IsReadable="True" />
      <Property Name="OldStartingIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="action" Type="System.Collections.Specialized.NotifyCollectionChangedAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="action" Type="System.Collections.Specialized.NotifyCollectionChangedAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="changedItem" Type="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="action" Type="System.Collections.Specialized.NotifyCollectionChangedAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="changedItem" Type="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="action" Type="System.Collections.Specialized.NotifyCollectionChangedAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="changedItems" Type="System.Collections.IList" IsInterface="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="action" Type="System.Collections.Specialized.NotifyCollectionChangedAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="changedItems" Type="System.Collections.IList" IsInterface="True" />
        <Parameter Name="startingIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="action" Type="System.Collections.Specialized.NotifyCollectionChangedAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="newItem" Type="System.Object" />
        <Parameter Name="oldItem" Type="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="action" Type="System.Collections.Specialized.NotifyCollectionChangedAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="newItem" Type="System.Object" />
        <Parameter Name="oldItem" Type="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="action" Type="System.Collections.Specialized.NotifyCollectionChangedAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="newItems" Type="System.Collections.IList" IsInterface="True" />
        <Parameter Name="oldItems" Type="System.Collections.IList" IsInterface="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="action" Type="System.Collections.Specialized.NotifyCollectionChangedAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="newItems" Type="System.Collections.IList" IsInterface="True" />
        <Parameter Name="oldItems" Type="System.Collections.IList" IsInterface="True" />
        <Parameter Name="startingIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="action" Type="System.Collections.Specialized.NotifyCollectionChangedAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="changedItem" Type="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="oldIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="action" Type="System.Collections.Specialized.NotifyCollectionChangedAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="changedItems" Type="System.Collections.IList" IsInterface="True" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="oldIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="NotifyCollectionChangedEventHandler" Type="System.Collections.Specialized.NotifyCollectionChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="OrderedDictionary" Type="System.Collections.Specialized.OrderedDictionary" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.Specialized.IOrderedDictionary" />
      <ImplementedInterface Type="System.Collections.IDictionary" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.Serialization.IDeserializationCallback" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Keys" Type="System.Collections.ICollection" IsInterface="True" IsReadable="True" />
      <Property Name="Values" Type="System.Collections.ICollection" IsInterface="True" IsReadable="True" />
      <Method Name="get_Item" Type="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="get_Item" Type="System.Object">
        <Parameter Name="key" Type="System.Object" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Constructor>
        <Parameter Name="capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" IsInterface="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" IsInterface="True" />
      </Constructor>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="AsReadOnly" Type="System.Collections.Specialized.OrderedDictionary" BaseName="Object" BaseType="System.Object" />
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Array" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IDictionaryEnumerator" IsInterface="True" />
      <Method Name="GetObjectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.Object" />
      </Method>
      <Method Name="RemoveAt" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="StringCollection" Type="System.Collections.Specialized.StringCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSynchronized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SyncRoot" Type="System.Object" IsReadable="True" />
      <Method Name="get_Item" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Specialized.StringEnumerator" BaseName="Object" BaseType="System.Object" />
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="RemoveAt" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="StringDictionary" Type="System.Collections.Specialized.StringDictionary" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSynchronized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Keys" Type="System.Collections.ICollection" IsInterface="True" IsReadable="True" />
      <Property Name="SyncRoot" Type="System.Object" IsReadable="True" />
      <Property Name="Values" Type="System.Collections.ICollection" IsInterface="True" IsReadable="True" />
      <Method Name="get_Item" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="key" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ContainsKey" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ContainsValue" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Array" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="StringEnumerator" Type="System.Collections.Specialized.StringEnumerator" BaseName="Object" BaseType="System.Object">
      <Property Name="Current" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="MoveNext" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Reset" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
  </Namespace>
  <Namespace Name="System.ComponentModel">
    <Class Name="AddingNewEventArgs" Type="System.ComponentModel.AddingNewEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="NewObject" Type="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="newObject" Type="System.Object" />
      </Constructor>
    </Class>
    <Class Name="AddingNewEventHandler" Type="System.ComponentModel.AddingNewEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.AddingNewEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.AddingNewEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="AmbientValueAttribute" Type="System.ComponentModel.AmbientValueAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Value" Type="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="ArrayConverter" Type="System.ComponentModel.ArrayConverter" BaseName="CollectionConverter" BaseType="System.ComponentModel.CollectionConverter">
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetPropertiesSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="AsyncCompletedEventArgs" Type="System.ComponentModel.AsyncCompletedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Cancelled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Error" Type="System.Exception" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="UserState" Type="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="error" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="cancelled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="userState" Type="System.Object" />
      </Constructor>
    </Class>
    <Class Name="AsyncCompletedEventHandler" Type="System.ComponentModel.AsyncCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="AsyncOperation" Type="System.ComponentModel.AsyncOperation" BaseName="Object" BaseType="System.Object">
      <Property Name="SynchronizationContext" Type="System.Threading.SynchronizationContext" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="UserSuppliedState" Type="System.Object" IsReadable="True" />
      <Method Name="OperationCompleted" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Post" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="arg" Type="System.Object" />
      </Method>
      <Method Name="PostOperationCompleted" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="arg" Type="System.Object" />
      </Method>
    </Class>
    <Class Name="AsyncOperationManager" Type="System.ComponentModel.AsyncOperationManager" BaseName="Object" BaseType="System.Object">
      <Property Name="SynchronizationContext" Type="System.Threading.SynchronizationContext" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Method Name="CreateOperation" Type="System.ComponentModel.AsyncOperation" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Method>
    </Class>
    <Class Name="AttributeCollection" Type="System.ComponentModel.AttributeCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Field Name="Empty" Type="System.ComponentModel.AttributeCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.Attribute" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="get_Item" Type="System.Attribute" BaseName="Object" BaseType="System.Object">
        <Parameter Name="attributeType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Constructor>
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Constructor>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="attribute" Type="System.Attribute" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Array" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="FromExisting" Type="System.ComponentModel.AttributeCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="existing" Type="System.ComponentModel.AttributeCollection" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="newAttributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
      <Method Name="Matches" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="attribute" Type="System.Attribute" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Matches" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
    </Class>
    <Class Name="AttributeProviderAttribute" Type="System.ComponentModel.AttributeProviderAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="PropertyName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="TypeName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="typeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="typeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="propertyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
    </Class>
    <Class Name="BackgroundWorker" Type="System.ComponentModel.BackgroundWorker" BaseName="Component" BaseType="System.ComponentModel.Component">
      <ImplementedInterface Type="System.ComponentModel.IComponent" />
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="CancellationPending" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsBusy" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="WorkerReportsProgress" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="WorkerSupportsCancellation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Method Name="CancelAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ReportProgress" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="percentProgress" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ReportProgress" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="percentProgress" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="userState" Type="System.Object" />
      </Method>
      <Method Name="RunWorkerAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="RunWorkerAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="argument" Type="System.Object" />
      </Method>
      <Event Name="DoWork" Type="System.ComponentModel.DoWorkEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.DoWorkEventArgs" BaseName="CancelEventArgs" BaseType="System.ComponentModel.CancelEventArgs" />
      </Event>
      <Event Name="ProgressChanged" Type="System.ComponentModel.ProgressChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.ProgressChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="RunWorkerCompleted" Type="System.ComponentModel.RunWorkerCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.RunWorkerCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Event>
    </Class>
    <Class Name="BaseNumberConverter" Type="System.ComponentModel.BaseNumberConverter" BaseName="TypeConverter" BaseType="System.ComponentModel.TypeConverter">
      <Method Name="CanConvertFrom" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="sourceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="CanConvertTo" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="t" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertFrom" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Class>
    <Class Name="BindableAttribute" Type="System.ComponentModel.BindableAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.BindableAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="No" Type="System.ComponentModel.BindableAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Yes" Type="System.ComponentModel.BindableAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Bindable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Direction" Type="System.ComponentModel.BindingDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="bindable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="bindable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="direction" Type="System.ComponentModel.BindingDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="flags" Type="System.ComponentModel.BindableSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="flags" Type="System.ComponentModel.BindableSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="direction" Type="System.ComponentModel.BindingDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Enumeration Name="BindableSupport" Type="System.ComponentModel.BindableSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Default" Type="System.ComponentModel.BindableSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="No" Type="System.ComponentModel.BindableSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Yes" Type="System.ComponentModel.BindableSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Enumeration Name="BindingDirection" Type="System.ComponentModel.BindingDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="OneWay" Type="System.ComponentModel.BindingDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="TwoWay" Type="System.ComponentModel.BindingDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="BindingList`1&lt;T&gt;" Type="System.ComponentModel.BindingList`1&lt;System.ComponentModel.BindingList`1+T&gt;" BaseName="Collection`1&lt;T&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.ComponentModel.BindingList`1+T&gt;" IsGenericType="True" IsGenericTypeDefinition="True" ContainsGenericParameters="True">
      <GenericTypeParameter Type="System.ComponentModel.BindingList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" />
      <ImplementedInterface Type="System.Collections.Generic.IList`1&lt;System.ComponentModel.BindingList`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.ComponentModel.BindingList`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.ComponentModel.BindingList`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyList`1&lt;System.ComponentModel.BindingList`1+T&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.ComponentModel.BindingList`1+T&gt;" />
      <ImplementedInterface Type="System.ComponentModel.IBindingList" />
      <ImplementedInterface Type="System.ComponentModel.ICancelAddNew" />
      <ImplementedInterface Type="System.ComponentModel.IRaiseItemChangedEvents" />
      <Property Name="AllowEdit" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="AllowNew" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="AllowRemove" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="RaiseListChangedEvents" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="list" Type="System.Collections.Generic.IList`1&lt;System.ComponentModel.BindingList`1+T&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" ContainsGenericParameters="True" />
      </Constructor>
      <Method Name="AddNew" Type="System.ComponentModel.BindingList`1+T" BaseName="Object" BaseType="System.Object" IsNested="True" ContainsGenericParameters="True" IsGenericParameter="True" GenericParameterPosition="0" ContainsGenericMethodParameters="True" />
      <Method Name="CancelNew" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="itemIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="EndNew" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="itemIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ResetBindings" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True" />
      <Method Name="ResetItem" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" ContainsGenericMethodParameters="True">
        <Parameter Name="position" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Event Name="AddingNew" Type="System.ComponentModel.AddingNewEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.AddingNewEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="ListChanged" Type="System.ComponentModel.ListChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.ListChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Class Name="BooleanConverter" Type="System.ComponentModel.BooleanConverter" BaseName="TypeConverter" BaseType="System.ComponentModel.TypeConverter">
      <Method Name="CanConvertFrom" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="sourceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertFrom" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="GetStandardValues" Type="System.ComponentModel.TypeConverter+StandardValuesCollection" BaseName="Object" BaseType="System.Object" IsNested="True">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="GetStandardValuesExclusive" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="GetStandardValuesSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="BrowsableAttribute" Type="System.ComponentModel.BrowsableAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.BrowsableAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="No" Type="System.ComponentModel.BrowsableAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Yes" Type="System.ComponentModel.BrowsableAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Browsable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="browsable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="ByteConverter" Type="System.ComponentModel.ByteConverter" BaseName="BaseNumberConverter" BaseType="System.ComponentModel.BaseNumberConverter" />
    <Class Name="CancelEventArgs" Type="System.ComponentModel.CancelEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Cancel" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="cancel" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="CancelEventHandler" Type="System.ComponentModel.CancelEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="CategoryAttribute" Type="System.ComponentModel.CategoryAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Action" Type="System.ComponentModel.CategoryAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Appearance" Type="System.ComponentModel.CategoryAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Asynchronous" Type="System.ComponentModel.CategoryAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Behavior" Type="System.ComponentModel.CategoryAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Category" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Data" Type="System.ComponentModel.CategoryAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Default" Type="System.ComponentModel.CategoryAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Design" Type="System.ComponentModel.CategoryAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="DragDrop" Type="System.ComponentModel.CategoryAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Focus" Type="System.ComponentModel.CategoryAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Format" Type="System.ComponentModel.CategoryAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Key" Type="System.ComponentModel.CategoryAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Layout" Type="System.ComponentModel.CategoryAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Mouse" Type="System.ComponentModel.CategoryAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="WindowStyle" Type="System.ComponentModel.CategoryAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Constructor>
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="CharConverter" Type="System.ComponentModel.CharConverter" BaseName="TypeConverter" BaseType="System.ComponentModel.TypeConverter">
      <Method Name="CanConvertFrom" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="sourceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertFrom" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Class>
    <Enumeration Name="CollectionChangeAction" Type="System.ComponentModel.CollectionChangeAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Add" Type="System.ComponentModel.CollectionChangeAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Refresh" Type="System.ComponentModel.CollectionChangeAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Remove" Type="System.ComponentModel.CollectionChangeAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Class Name="CollectionChangeEventArgs" Type="System.ComponentModel.CollectionChangeEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Action" Type="System.ComponentModel.CollectionChangeAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Element" Type="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="action" Type="System.ComponentModel.CollectionChangeAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="element" Type="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CollectionChangeEventHandler" Type="System.ComponentModel.CollectionChangeEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.CollectionChangeEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.CollectionChangeEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="CollectionConverter" Type="System.ComponentModel.CollectionConverter" BaseName="TypeConverter" BaseType="System.ComponentModel.TypeConverter">
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetPropertiesSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="ComplexBindingPropertiesAttribute" Type="System.ComponentModel.ComplexBindingPropertiesAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.ComplexBindingPropertiesAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="DataMember" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="DataSource" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="dataSource" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="dataSource" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="dataMember" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="Component" Type="System.ComponentModel.Component" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
      <ImplementedInterface Type="System.ComponentModel.IComponent" />
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Container" Type="System.ComponentModel.IContainer" IsInterface="True" IsReadable="True" />
      <Property Name="Site" Type="System.ComponentModel.ISite" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Event Name="Disposed" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
    </Class>
    <Class Name="ComponentCollection" Type="System.ComponentModel.ComponentCollection" BaseName="ReadOnlyCollectionBase" BaseType="System.Collections.ReadOnlyCollectionBase">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.ComponentModel.IComponent" IsInterface="True">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="get_Item" Type="System.ComponentModel.IComponent" IsInterface="True">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Constructor>
        <Parameter Name="components" Type="System.ComponentModel.IComponent[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.ComponentModel.IComponent" />
      </Constructor>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.ComponentModel.IComponent[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.ComponentModel.IComponent" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="ComponentConverter" Type="System.ComponentModel.ComponentConverter" BaseName="ReferenceConverter" BaseType="System.ComponentModel.ReferenceConverter">
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetPropertiesSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="ComponentEditor" Type="System.ComponentModel.ComponentEditor" BaseName="Object" BaseType="System.Object">
      <Method Name="EditComponent" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="EditComponent" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="component" Type="System.Object" />
      </Method>
    </Class>
    <Class Name="ComponentResourceManager" Type="System.ComponentModel.ComponentResourceManager" BaseName="ResourceManager" BaseType="System.Resources.ResourceManager">
      <Constructor>
        <Parameter Name="t" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Method Name="ApplyResources" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="objectName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ApplyResources" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="objectName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="Container" Type="System.ComponentModel.Container" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.ComponentModel.IContainer" />
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Components" Type="System.ComponentModel.ComponentCollection" BaseName="ReadOnlyCollectionBase" BaseType="System.Collections.ReadOnlyCollectionBase" IsReadable="True" />
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.ComponentModel.IComponent" IsInterface="True" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.ComponentModel.IComponent" IsInterface="True" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.ComponentModel.IComponent" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="ContainerFilterService" Type="System.ComponentModel.ContainerFilterService" BaseName="Object" BaseType="System.Object">
      <Method Name="FilterComponents" Type="System.ComponentModel.ComponentCollection" BaseName="ReadOnlyCollectionBase" BaseType="System.Collections.ReadOnlyCollectionBase">
        <Parameter Name="components" Type="System.ComponentModel.ComponentCollection" BaseName="ReadOnlyCollectionBase" BaseType="System.Collections.ReadOnlyCollectionBase" />
      </Method>
    </Class>
    <Class Name="CultureInfoConverter" Type="System.ComponentModel.CultureInfoConverter" BaseName="TypeConverter" BaseType="System.ComponentModel.TypeConverter">
      <Method Name="CanConvertFrom" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="sourceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="CanConvertTo" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertFrom" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetStandardValues" Type="System.ComponentModel.TypeConverter+StandardValuesCollection" BaseName="Object" BaseType="System.Object" IsNested="True">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="GetStandardValuesExclusive" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="GetStandardValuesSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="CustomTypeDescriptor" Type="System.ComponentModel.CustomTypeDescriptor" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.ComponentModel.ICustomTypeDescriptor" />
      <Method Name="GetAttributes" Type="System.ComponentModel.AttributeCollection" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetClassName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetComponentName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetConverter" Type="System.ComponentModel.TypeConverter" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetDefaultEvent" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      <Method Name="GetDefaultProperty" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      <Method Name="GetEditor" Type="System.Object">
        <Parameter Name="editorBaseType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetEvents" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetEvents" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetPropertyOwner" Type="System.Object">
        <Parameter Name="pd" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
    </Class>
    <Class Name="DataErrorsChangedEventArgs" Type="System.ComponentModel.DataErrorsChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="PropertyName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="propertyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="DataObjectAttribute" Type="System.ComponentModel.DataObjectAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="DataObject" Type="System.ComponentModel.DataObjectAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Default" Type="System.ComponentModel.DataObjectAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="NonDataObject" Type="System.ComponentModel.DataObjectAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="IsDataObject" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="isDataObject" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="DataObjectFieldAttribute" Type="System.ComponentModel.DataObjectFieldAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="IsIdentity" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsNullable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Length" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PrimaryKey" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="primaryKey" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="primaryKey" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="isIdentity" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="primaryKey" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="isIdentity" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="isNullable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="primaryKey" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="isIdentity" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="isNullable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="length" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="DataObjectMethodAttribute" Type="System.ComponentModel.DataObjectMethodAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="IsDefault" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MethodType" Type="System.ComponentModel.DataObjectMethodType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="methodType" Type="System.ComponentModel.DataObjectMethodType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="methodType" Type="System.ComponentModel.DataObjectMethodType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="isDefault" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Match" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
    </Class>
    <Enumeration Name="DataObjectMethodType" Type="System.ComponentModel.DataObjectMethodType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Delete" Type="System.ComponentModel.DataObjectMethodType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Fill" Type="System.ComponentModel.DataObjectMethodType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Insert" Type="System.ComponentModel.DataObjectMethodType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Select" Type="System.ComponentModel.DataObjectMethodType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Update" Type="System.ComponentModel.DataObjectMethodType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Class Name="DateTimeConverter" Type="System.ComponentModel.DateTimeConverter" BaseName="TypeConverter" BaseType="System.ComponentModel.TypeConverter">
      <Method Name="CanConvertFrom" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="sourceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="CanConvertTo" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertFrom" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Class>
    <Class Name="DateTimeOffsetConverter" Type="System.ComponentModel.DateTimeOffsetConverter" BaseName="TypeConverter" BaseType="System.ComponentModel.TypeConverter">
      <Method Name="CanConvertFrom" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="sourceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="CanConvertTo" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertFrom" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Class>
    <Class Name="DecimalConverter" Type="System.ComponentModel.DecimalConverter" BaseName="BaseNumberConverter" BaseType="System.ComponentModel.BaseNumberConverter">
      <Method Name="CanConvertTo" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Class>
    <Class Name="DefaultBindingPropertyAttribute" Type="System.ComponentModel.DefaultBindingPropertyAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.DefaultBindingPropertyAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="DefaultEventAttribute" Type="System.ComponentModel.DefaultEventAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.DefaultEventAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="DefaultPropertyAttribute" Type="System.ComponentModel.DefaultPropertyAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.DefaultPropertyAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="DefaultValueAttribute" Type="System.ComponentModel.DefaultValueAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Value" Type="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="DescriptionAttribute" Type="System.ComponentModel.DescriptionAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.DescriptionAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Description" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="description" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="DesignerAttribute" Type="System.ComponentModel.DesignerAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="DesignerBaseTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="DesignerTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="TypeId" Type="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="designerTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="designerType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Constructor>
        <Parameter Name="designerTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="designerBaseTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="designerTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="designerBaseType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Constructor>
        <Parameter Name="designerType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="designerBaseType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="DesignerCategoryAttribute" Type="System.ComponentModel.DesignerCategoryAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Component" Type="System.ComponentModel.DesignerCategoryAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Default" Type="System.ComponentModel.DesignerCategoryAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Form" Type="System.ComponentModel.DesignerCategoryAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Generic" Type="System.ComponentModel.DesignerCategoryAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Category" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="TypeId" Type="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Enumeration Name="DesignerSerializationVisibility" Type="System.ComponentModel.DesignerSerializationVisibility" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Content" Type="System.ComponentModel.DesignerSerializationVisibility" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Hidden" Type="System.ComponentModel.DesignerSerializationVisibility" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Visible" Type="System.ComponentModel.DesignerSerializationVisibility" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="DesignerSerializationVisibilityAttribute" Type="System.ComponentModel.DesignerSerializationVisibilityAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Content" Type="System.ComponentModel.DesignerSerializationVisibilityAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Default" Type="System.ComponentModel.DesignerSerializationVisibilityAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Hidden" Type="System.ComponentModel.DesignerSerializationVisibilityAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Visible" Type="System.ComponentModel.DesignerSerializationVisibilityAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Visibility" Type="System.ComponentModel.DesignerSerializationVisibility" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="visibility" Type="System.ComponentModel.DesignerSerializationVisibility" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="DesignOnlyAttribute" Type="System.ComponentModel.DesignOnlyAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.DesignOnlyAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="No" Type="System.ComponentModel.DesignOnlyAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Yes" Type="System.ComponentModel.DesignOnlyAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="IsDesignOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="isDesignOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="DesignTimeVisibleAttribute" Type="System.ComponentModel.DesignTimeVisibleAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.DesignTimeVisibleAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="No" Type="System.ComponentModel.DesignTimeVisibleAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Yes" Type="System.ComponentModel.DesignTimeVisibleAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Visible" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="visible" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="DisplayNameAttribute" Type="System.ComponentModel.DisplayNameAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.DisplayNameAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="DisplayName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="displayName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="DoubleConverter" Type="System.ComponentModel.DoubleConverter" BaseName="BaseNumberConverter" BaseType="System.ComponentModel.BaseNumberConverter" />
    <Class Name="DoWorkEventArgs" Type="System.ComponentModel.DoWorkEventArgs" BaseName="CancelEventArgs" BaseType="System.ComponentModel.CancelEventArgs">
      <Property Name="Argument" Type="System.Object" IsReadable="True" />
      <Property Name="Result" Type="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="argument" Type="System.Object" />
      </Constructor>
    </Class>
    <Class Name="DoWorkEventHandler" Type="System.ComponentModel.DoWorkEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.DoWorkEventArgs" BaseName="CancelEventArgs" BaseType="System.ComponentModel.CancelEventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.DoWorkEventArgs" BaseName="CancelEventArgs" BaseType="System.ComponentModel.CancelEventArgs" />
      </Method>
    </Class>
    <Class Name="EditorAttribute" Type="System.ComponentModel.EditorAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="EditorBaseTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="EditorTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="TypeId" Type="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="typeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="baseTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="typeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="baseType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="baseType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="EditorBrowsableAttribute" Type="System.ComponentModel.EditorBrowsableAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="State" Type="System.ComponentModel.EditorBrowsableState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="state" Type="System.ComponentModel.EditorBrowsableState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Enumeration Name="EditorBrowsableState" Type="System.ComponentModel.EditorBrowsableState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Advanced" Type="System.ComponentModel.EditorBrowsableState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Always" Type="System.ComponentModel.EditorBrowsableState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Never" Type="System.ComponentModel.EditorBrowsableState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="EnumConverter" Type="System.ComponentModel.EnumConverter" BaseName="TypeConverter" BaseType="System.ComponentModel.TypeConverter">
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Method Name="CanConvertFrom" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="sourceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="CanConvertTo" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertFrom" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetStandardValues" Type="System.ComponentModel.TypeConverter+StandardValuesCollection" BaseName="Object" BaseType="System.Object" IsNested="True">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="GetStandardValuesExclusive" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="GetStandardValuesSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="IsValid" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
    </Class>
    <Class Name="EventDescriptor" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor">
      <Property Name="ComponentType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="EventType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="IsMulticast" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="AddEventHandler" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="RemoveEventHandler" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="EventDescriptorCollection" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <Field Name="Empty" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="get_Item" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Constructor>
        <Parameter Name="events" Type="System.ComponentModel.EventDescriptor[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.ComponentModel.EventDescriptor" />
      </Constructor>
      <Constructor>
        <Parameter Name="events" Type="System.ComponentModel.EventDescriptor[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.ComponentModel.EventDescriptor" />
        <Parameter Name="readOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
      <Method Name="Find" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ignoreCase" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
      <Method Name="RemoveAt" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Sort" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object" />
      <Method Name="Sort" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="names" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
      </Method>
      <Method Name="Sort" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="names" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" IsInterface="True" />
      </Method>
      <Method Name="Sort" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="comparer" Type="System.Collections.IComparer" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="EventHandlerList" Type="System.ComponentModel.EventHandlerList" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Method Name="get_Item" Type="System.Delegate" BaseName="Object" BaseType="System.Object">
        <Parameter Name="key" Type="System.Object" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddHandler" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddHandlers" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="listToAddFrom" Type="System.ComponentModel.EventHandlerList" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="RemoveHandler" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="ExpandableObjectConverter" Type="System.ComponentModel.ExpandableObjectConverter" BaseName="TypeConverter" BaseType="System.ComponentModel.TypeConverter">
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetPropertiesSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="ExtenderProvidedPropertyAttribute" Type="System.ComponentModel.ExtenderProvidedPropertyAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="ExtenderProperty" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" IsReadable="True" />
      <Property Name="Provider" Type="System.ComponentModel.IExtenderProvider" IsInterface="True" IsReadable="True" />
      <Property Name="ReceiverType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="GuidConverter" Type="System.ComponentModel.GuidConverter" BaseName="TypeConverter" BaseType="System.ComponentModel.TypeConverter">
      <Method Name="CanConvertFrom" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="sourceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="CanConvertTo" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertFrom" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Class>
    <Class Name="HandledEventArgs" Type="System.ComponentModel.HandledEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Handled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="defaultHandledValue" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="HandledEventHandler" Type="System.ComponentModel.HandledEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.HandledEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.HandledEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Interface Name="IBindingList" Type="System.ComponentModel.IBindingList" IsInterface="True">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="AllowEdit" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="AllowNew" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="AllowRemove" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSorted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SortDirection" Type="System.ComponentModel.ListSortDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="SortProperty" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" IsReadable="True" />
      <Property Name="SupportsChangeNotification" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SupportsSearching" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SupportsSorting" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="AddIndex" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
      <Method Name="AddNew" Type="System.Object" />
      <Method Name="ApplySort" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="direction" Type="System.ComponentModel.ListSortDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Find" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="key" Type="System.Object" />
      </Method>
      <Method Name="RemoveIndex" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
      <Method Name="RemoveSort" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Event Name="ListChanged" Type="System.ComponentModel.ListChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.ListChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Interface>
    <Interface Name="IBindingListView" Type="System.ComponentModel.IBindingListView" IsInterface="True">
      <ImplementedInterface Type="System.ComponentModel.IBindingList" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Filter" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="SortDescriptions" Type="System.ComponentModel.ListSortDescriptionCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SupportsAdvancedSorting" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SupportsFiltering" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="ApplySort" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sorts" Type="System.ComponentModel.ListSortDescriptionCollection" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="RemoveFilter" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Interface>
    <Interface Name="ICancelAddNew" Type="System.ComponentModel.ICancelAddNew" IsInterface="True">
      <Method Name="CancelNew" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="itemIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="EndNew" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="itemIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Interface>
    <Interface Name="IChangeTracking" Type="System.ComponentModel.IChangeTracking" IsInterface="True">
      <Property Name="IsChanged" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="AcceptChanges" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Interface>
    <Interface Name="IComNativeDescriptorHandler" Type="System.ComponentModel.IComNativeDescriptorHandler" IsInterface="True">
      <Method Name="GetAttributes" Type="System.ComponentModel.AttributeCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="GetClassName" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="GetConverter" Type="System.ComponentModel.TypeConverter" BaseName="Object" BaseType="System.Object">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="GetDefaultEvent" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="GetDefaultProperty" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="GetEditor" Type="System.Object">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="baseEditorType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetEvents" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="GetEvents" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetName" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetPropertyValue" Type="System.Object">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="success" Type="System.Boolean&amp;" IsByRef="True" ElementType="System.Boolean" />
      </Method>
      <Method Name="GetPropertyValue" Type="System.Object">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="dispid" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="success" Type="System.Boolean&amp;" IsByRef="True" ElementType="System.Boolean" />
      </Method>
    </Interface>
    <Interface Name="IComponent" Type="System.ComponentModel.IComponent" IsInterface="True">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Site" Type="System.ComponentModel.ISite" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Event Name="Disposed" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
    </Interface>
    <Interface Name="IContainer" Type="System.ComponentModel.IContainer" IsInterface="True">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Components" Type="System.ComponentModel.ComponentCollection" BaseName="ReadOnlyCollectionBase" BaseType="System.Collections.ReadOnlyCollectionBase" IsReadable="True" />
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.ComponentModel.IComponent" IsInterface="True" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.ComponentModel.IComponent" IsInterface="True" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.ComponentModel.IComponent" IsInterface="True" />
      </Method>
    </Interface>
    <Interface Name="ICustomTypeDescriptor" Type="System.ComponentModel.ICustomTypeDescriptor" IsInterface="True">
      <Method Name="GetAttributes" Type="System.ComponentModel.AttributeCollection" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetClassName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetComponentName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetConverter" Type="System.ComponentModel.TypeConverter" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetDefaultEvent" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      <Method Name="GetDefaultProperty" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      <Method Name="GetEditor" Type="System.Object">
        <Parameter Name="editorBaseType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetEvents" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetEvents" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetPropertyOwner" Type="System.Object">
        <Parameter Name="pd" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
    </Interface>
    <Interface Name="IDataErrorInfo" Type="System.ComponentModel.IDataErrorInfo" IsInterface="True">
      <Property Name="Error" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="get_Item" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="columnName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Interface>
    <Interface Name="IEditableObject" Type="System.ComponentModel.IEditableObject" IsInterface="True">
      <Method Name="BeginEdit" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="CancelEdit" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="EndEdit" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Interface>
    <Interface Name="IExtenderProvider" Type="System.ComponentModel.IExtenderProvider" IsInterface="True">
      <Method Name="CanExtend" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="extendee" Type="System.Object" />
      </Method>
    </Interface>
    <Interface Name="IIntellisenseBuilder" Type="System.ComponentModel.IIntellisenseBuilder" IsInterface="True">
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="Show" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="language" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="newValue" Type="System.String&amp;" IsByRef="True" ElementType="System.String" />
      </Method>
    </Interface>
    <Interface Name="IListSource" Type="System.ComponentModel.IListSource" IsInterface="True">
      <Property Name="ContainsListCollection" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="GetList" Type="System.Collections.IList" IsInterface="True" />
    </Interface>
    <Class Name="ImmutableObjectAttribute" Type="System.ComponentModel.ImmutableObjectAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.ImmutableObjectAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="No" Type="System.ComponentModel.ImmutableObjectAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Yes" Type="System.ComponentModel.ImmutableObjectAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Immutable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="immutable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Interface Name="INestedContainer" Type="System.ComponentModel.INestedContainer" IsInterface="True">
      <ImplementedInterface Type="System.ComponentModel.IContainer" />
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Owner" Type="System.ComponentModel.IComponent" IsInterface="True" IsReadable="True" />
    </Interface>
    <Interface Name="INestedSite" Type="System.ComponentModel.INestedSite" IsInterface="True">
      <ImplementedInterface Type="System.ComponentModel.ISite" />
      <ImplementedInterface Type="System.IServiceProvider" />
      <Property Name="FullName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Interface>
    <Class Name="InheritanceAttribute" Type="System.ComponentModel.InheritanceAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.InheritanceAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Inherited" Type="System.ComponentModel.InheritanceAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="InheritedReadOnly" Type="System.ComponentModel.InheritanceAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="NotInherited" Type="System.ComponentModel.InheritanceAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="InheritanceLevel" Type="System.ComponentModel.InheritanceLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="inheritanceLevel" Type="System.ComponentModel.InheritanceLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Enumeration Name="InheritanceLevel" Type="System.ComponentModel.InheritanceLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Inherited" Type="System.ComponentModel.InheritanceLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="InheritedReadOnly" Type="System.ComponentModel.InheritanceLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="NotInherited" Type="System.ComponentModel.InheritanceLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
    </Enumeration>
    <Class Name="InitializationEventAttribute" Type="System.ComponentModel.InitializationEventAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="EventName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="eventName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Interface Name="INotifyDataErrorInfo" Type="System.ComponentModel.INotifyDataErrorInfo" IsInterface="True">
      <Property Name="HasErrors" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="GetErrors" Type="System.Collections.IEnumerable" IsInterface="True">
        <Parameter Name="propertyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Event Name="ErrorsChanged" Type="System.EventHandler`1&lt;System.ComponentModel.DataErrorsChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.ComponentModel.DataErrorsChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.DataErrorsChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Interface>
    <Interface Name="INotifyPropertyChanged" Type="System.ComponentModel.INotifyPropertyChanged" IsInterface="True">
      <Event Name="PropertyChanged" Type="System.ComponentModel.PropertyChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Interface>
    <Interface Name="INotifyPropertyChanging" Type="System.ComponentModel.INotifyPropertyChanging" IsInterface="True">
      <Event Name="PropertyChanging" Type="System.ComponentModel.PropertyChangingEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangingEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Interface>
    <Class Name="InstallerTypeAttribute" Type="System.ComponentModel.InstallerTypeAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="InstallerType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Constructor>
        <Parameter Name="installerType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Constructor>
        <Parameter Name="typeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="InstanceCreationEditor" Type="System.ComponentModel.InstanceCreationEditor" BaseName="Object" BaseType="System.Object">
      <Property Name="Text" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="CreateInstance" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="instanceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Class>
    <Class Name="Int16Converter" Type="System.ComponentModel.Int16Converter" BaseName="BaseNumberConverter" BaseType="System.ComponentModel.BaseNumberConverter" />
    <Class Name="Int32Converter" Type="System.ComponentModel.Int32Converter" BaseName="BaseNumberConverter" BaseType="System.ComponentModel.BaseNumberConverter" />
    <Class Name="Int64Converter" Type="System.ComponentModel.Int64Converter" BaseName="BaseNumberConverter" BaseType="System.ComponentModel.BaseNumberConverter" />
    <Class Name="InvalidAsynchronousStateException" Type="System.ComponentModel.InvalidAsynchronousStateException" BaseName="ArgumentException" BaseType="System.ArgumentException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="InvalidEnumArgumentException" Type="System.ComponentModel.InvalidEnumArgumentException" BaseName="ArgumentException" BaseType="System.ArgumentException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="argumentName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="invalidValue" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="enumClass" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
    </Class>
    <Interface Name="IRaiseItemChangedEvents" Type="System.ComponentModel.IRaiseItemChangedEvents" IsInterface="True">
      <Property Name="RaisesItemChangedEvents" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Interface>
    <Interface Name="IRevertibleChangeTracking" Type="System.ComponentModel.IRevertibleChangeTracking" IsInterface="True">
      <ImplementedInterface Type="System.ComponentModel.IChangeTracking" />
      <Method Name="RejectChanges" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Interface>
    <Interface Name="ISite" Type="System.ComponentModel.ISite" IsInterface="True">
      <ImplementedInterface Type="System.IServiceProvider" />
      <Property Name="Component" Type="System.ComponentModel.IComponent" IsInterface="True" IsReadable="True" />
      <Property Name="Container" Type="System.ComponentModel.IContainer" IsInterface="True" IsReadable="True" />
      <Property Name="DesignMode" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
    </Interface>
    <Interface Name="ISupportInitialize" Type="System.ComponentModel.ISupportInitialize" IsInterface="True">
      <Method Name="BeginInit" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="EndInit" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Interface>
    <Interface Name="ISupportInitializeNotification" Type="System.ComponentModel.ISupportInitializeNotification" IsInterface="True">
      <ImplementedInterface Type="System.ComponentModel.ISupportInitialize" />
      <Property Name="IsInitialized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Event Name="Initialized" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
    </Interface>
    <Interface Name="ISynchronizeInvoke" Type="System.ComponentModel.ISynchronizeInvoke" IsInterface="True">
      <Property Name="InvokeRequired" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="method" Type="System.Delegate" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Object">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Object">
        <Parameter Name="method" Type="System.Delegate" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
    </Interface>
    <Interface Name="ITypeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True">
      <ImplementedInterface Type="System.IServiceProvider" />
      <Property Name="Container" Type="System.ComponentModel.IContainer" IsInterface="True" IsReadable="True" />
      <Property Name="Instance" Type="System.Object" IsReadable="True" />
      <Property Name="PropertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" IsReadable="True" />
      <Method Name="OnComponentChanged" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="OnComponentChanging" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Interface>
    <Interface Name="ITypedList" Type="System.ComponentModel.ITypedList" IsInterface="True">
      <Method Name="GetItemProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.ComponentModel.PropertyDescriptor" />
      </Method>
      <Method Name="GetListName" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.ComponentModel.PropertyDescriptor" />
      </Method>
    </Interface>
    <Class Name="License" Type="System.ComponentModel.License" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="LicenseKey" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="LicenseContext" Type="System.ComponentModel.LicenseContext" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IServiceProvider" />
      <Property Name="UsageMode" Type="System.ComponentModel.LicenseUsageMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Method Name="GetSavedLicenseKey" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="resourceAssembly" Type="System.Reflection.Assembly" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetService" Type="System.Object">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="SetSavedLicenseKey" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="key" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="LicenseException" Type="System.ComponentModel.LicenseException" BaseName="SystemException" BaseType="System.SystemException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Property Name="LicensedType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="instance" Type="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="GetObjectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="LicenseManager" Type="System.ComponentModel.LicenseManager" BaseName="Object" BaseType="System.Object">
      <Property Name="CurrentContext" Type="System.ComponentModel.LicenseContext" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="UsageMode" Type="System.ComponentModel.LicenseUsageMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" />
      <Method Name="CreateWithContext" Type="System.Object" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="creationContext" Type="System.ComponentModel.LicenseContext" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateWithContext" Type="System.Object" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="creationContext" Type="System.ComponentModel.LicenseContext" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="IsLicensed" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="IsValid" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="IsValid" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="license" Type="System.ComponentModel.License&amp;" IsByRef="True" ElementType="System.ComponentModel.License" />
      </Method>
      <Method Name="LockContext" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="contextUser" Type="System.Object" />
      </Method>
      <Method Name="UnlockContext" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="contextUser" Type="System.Object" />
      </Method>
      <Method Name="Validate" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Validate" Type="System.ComponentModel.License" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="instance" Type="System.Object" />
      </Method>
    </Class>
    <Class Name="LicenseProvider" Type="System.ComponentModel.LicenseProvider" BaseName="Object" BaseType="System.Object">
      <Method Name="GetLicense" Type="System.ComponentModel.License" BaseName="Object" BaseType="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.LicenseContext" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="allowExceptions" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="LicenseProviderAttribute" Type="System.ComponentModel.LicenseProviderAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.LicenseProviderAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="LicenseProvider" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="TypeId" Type="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="typeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Enumeration Name="LicenseUsageMode" Type="System.ComponentModel.LicenseUsageMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Designtime" Type="System.ComponentModel.LicenseUsageMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Runtime" Type="System.ComponentModel.LicenseUsageMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="LicFileLicenseProvider" Type="System.ComponentModel.LicFileLicenseProvider" BaseName="LicenseProvider" BaseType="System.ComponentModel.LicenseProvider">
      <Method Name="GetLicense" Type="System.ComponentModel.License" BaseName="Object" BaseType="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.LicenseContext" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="allowExceptions" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="ListBindableAttribute" Type="System.ComponentModel.ListBindableAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.ListBindableAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="No" Type="System.ComponentModel.ListBindableAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Yes" Type="System.ComponentModel.ListBindableAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="ListBindable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="listBindable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="flags" Type="System.ComponentModel.BindableSupport" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="ListChangedEventArgs" Type="System.ComponentModel.ListChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="ListChangedType" Type="System.ComponentModel.ListChangedType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="NewIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="OldIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PropertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" IsReadable="True" />
      <Constructor>
        <Parameter Name="listChangedType" Type="System.ComponentModel.ListChangedType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="newIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="listChangedType" Type="System.ComponentModel.ListChangedType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="newIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="propDesc" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Constructor>
      <Constructor>
        <Parameter Name="listChangedType" Type="System.ComponentModel.ListChangedType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="propDesc" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Constructor>
      <Constructor>
        <Parameter Name="listChangedType" Type="System.ComponentModel.ListChangedType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="newIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="oldIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="ListChangedEventHandler" Type="System.ComponentModel.ListChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.ListChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.ListChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Enumeration Name="ListChangedType" Type="System.ComponentModel.ListChangedType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="ItemAdded" Type="System.ComponentModel.ListChangedType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="ItemChanged" Type="System.ComponentModel.ListChangedType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="ItemDeleted" Type="System.ComponentModel.ListChangedType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="ItemMoved" Type="System.ComponentModel.ListChangedType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="PropertyDescriptorAdded" Type="System.ComponentModel.ListChangedType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="PropertyDescriptorChanged" Type="System.ComponentModel.ListChangedType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="PropertyDescriptorDeleted" Type="System.ComponentModel.ListChangedType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Reset" Type="System.ComponentModel.ListChangedType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="ListSortDescription" Type="System.ComponentModel.ListSortDescription" BaseName="Object" BaseType="System.Object">
      <Property Name="PropertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" IsReadable="True" IsWritable="True" />
      <Property Name="SortDirection" Type="System.ComponentModel.ListSortDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="direction" Type="System.ComponentModel.ListSortDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
    </Class>
    <Class Name="ListSortDescriptionCollection" Type="System.ComponentModel.ListSortDescriptionCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.ComponentModel.ListSortDescription" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.ComponentModel.ListSortDescription" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Constructor>
        <Parameter Name="sorts" Type="System.ComponentModel.ListSortDescription[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.ComponentModel.ListSortDescription" />
      </Constructor>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Array" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Object" />
      </Method>
    </Class>
    <Enumeration Name="ListSortDirection" Type="System.ComponentModel.ListSortDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Ascending" Type="System.ComponentModel.ListSortDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Descending" Type="System.ComponentModel.ListSortDirection" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="LocalizableAttribute" Type="System.ComponentModel.LocalizableAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.LocalizableAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="No" Type="System.ComponentModel.LocalizableAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Yes" Type="System.ComponentModel.LocalizableAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="IsLocalizable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="isLocalizable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="LookupBindingPropertiesAttribute" Type="System.ComponentModel.LookupBindingPropertiesAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.LookupBindingPropertiesAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="DataSource" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="DisplayMember" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="LookupMember" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ValueMember" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="dataSource" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="displayMember" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="valueMember" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="lookupMember" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="MarshalByValueComponent" Type="System.ComponentModel.MarshalByValueComponent" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.ComponentModel.IComponent" />
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.IServiceProvider" />
      <Property Name="Container" Type="System.ComponentModel.IContainer" IsInterface="True" IsReadable="True" />
      <Property Name="DesignMode" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Site" Type="System.ComponentModel.ISite" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetService" Type="System.Object">
        <Parameter Name="service" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Event Name="Disposed" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
    </Class>
    <Class Name="MaskedTextProvider" Type="System.ComponentModel.MaskedTextProvider" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.ICloneable" />
      <Property Name="AllowPromptAsInput" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="AsciiOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="AssignedEditPositionCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="AvailableEditPositionCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="DefaultPasswordChar" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="EditPositionCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="EditPositions" Type="System.Collections.IEnumerator" IsInterface="True" IsReadable="True" />
      <Property Name="IncludeLiterals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IncludePrompt" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="InvalidIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="IsPassword" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="LastAssignedPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Length" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Mask" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="MaskCompleted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MaskFull" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PasswordChar" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="PromptChar" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ResetOnPrompt" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ResetOnSpace" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="SkipLiterals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Method Name="get_Item" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Constructor>
        <Parameter Name="mask" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="mask" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="mask" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="mask" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="mask" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="passwordChar" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="mask" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="passwordChar" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="mask" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="promptChar" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="passwordChar" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Add" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Add" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" IsByRef="True" ElementType="System.Int32" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" IsByRef="True" ElementType="System.ComponentModel.MaskedTextResultHint" />
      </Method>
      <Method Name="Add" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" IsByRef="True" ElementType="System.Int32" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" IsByRef="True" ElementType="System.ComponentModel.MaskedTextResultHint" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" IsByRef="True" ElementType="System.ComponentModel.MaskedTextResultHint" />
      </Method>
      <Method Name="Clone" Type="System.Object" />
      <Method Name="FindAssignedEditPositionFrom" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="position" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="direction" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="FindAssignedEditPositionInRange" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="startPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="endPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="direction" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="FindEditPositionFrom" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="position" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="direction" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="FindEditPositionInRange" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="startPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="endPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="direction" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="FindNonEditPositionFrom" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="position" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="direction" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="FindNonEditPositionInRange" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="startPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="endPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="direction" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="FindUnassignedEditPositionFrom" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="position" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="direction" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="FindUnassignedEditPositionInRange" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="startPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="endPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="direction" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetOperationResultFromHint" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="InsertAt" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="position" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="InsertAt" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="position" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" IsByRef="True" ElementType="System.Int32" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" IsByRef="True" ElementType="System.ComponentModel.MaskedTextResultHint" />
      </Method>
      <Method Name="InsertAt" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="position" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="InsertAt" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="position" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" IsByRef="True" ElementType="System.Int32" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" IsByRef="True" ElementType="System.ComponentModel.MaskedTextResultHint" />
      </Method>
      <Method Name="IsAvailablePosition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="position" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IsEditPosition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="position" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IsValidInputChar" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="c" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IsValidMaskChar" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="c" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IsValidPasswordChar" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="c" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Remove" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Remove" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="testPosition" Type="System.Int32&amp;" IsByRef="True" ElementType="System.Int32" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" IsByRef="True" ElementType="System.ComponentModel.MaskedTextResultHint" />
      </Method>
      <Method Name="RemoveAt" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="position" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="RemoveAt" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="startPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="endPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="RemoveAt" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="startPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="endPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" IsByRef="True" ElementType="System.Int32" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" IsByRef="True" ElementType="System.ComponentModel.MaskedTextResultHint" />
      </Method>
      <Method Name="Replace" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="position" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Replace" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="position" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" IsByRef="True" ElementType="System.Int32" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" IsByRef="True" ElementType="System.ComponentModel.MaskedTextResultHint" />
      </Method>
      <Method Name="Replace" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="startPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="endPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" IsByRef="True" ElementType="System.Int32" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" IsByRef="True" ElementType="System.ComponentModel.MaskedTextResultHint" />
      </Method>
      <Method Name="Replace" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="position" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Replace" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="position" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" IsByRef="True" ElementType="System.Int32" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" IsByRef="True" ElementType="System.ComponentModel.MaskedTextResultHint" />
      </Method>
      <Method Name="Replace" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="startPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="endPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" IsByRef="True" ElementType="System.Int32" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" IsByRef="True" ElementType="System.ComponentModel.MaskedTextResultHint" />
      </Method>
      <Method Name="Set" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Set" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" IsByRef="True" ElementType="System.Int32" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" IsByRef="True" ElementType="System.ComponentModel.MaskedTextResultHint" />
      </Method>
      <Method Name="ToDisplayString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="startPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="length" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="startPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="length" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="includePrompt" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="includeLiterals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="includePrompt" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="includeLiterals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="startPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="length" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="includePrompt" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="includeLiterals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="startPosition" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="length" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="VerifyChar" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="position" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint&amp;" IsByRef="True" ElementType="System.ComponentModel.MaskedTextResultHint" />
      </Method>
      <Method Name="VerifyEscapeChar" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.Char" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="position" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="VerifyString" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="VerifyString" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" IsByRef="True" ElementType="System.Int32" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" IsByRef="True" ElementType="System.ComponentModel.MaskedTextResultHint" />
      </Method>
    </Class>
    <Enumeration Name="MaskedTextResultHint" Type="System.ComponentModel.MaskedTextResultHint" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AlphanumericCharacterExpected" Type="System.ComponentModel.MaskedTextResultHint" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2" />
      <Field Name="AsciiCharacterExpected" Type="System.ComponentModel.MaskedTextResultHint" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
      <Field Name="CharacterEscaped" Type="System.ComponentModel.MaskedTextResultHint" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="DigitExpected" Type="System.ComponentModel.MaskedTextResultHint" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-3" />
      <Field Name="InvalidInput" Type="System.ComponentModel.MaskedTextResultHint" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-51" />
      <Field Name="LetterExpected" Type="System.ComponentModel.MaskedTextResultHint" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-4" />
      <Field Name="NoEffect" Type="System.ComponentModel.MaskedTextResultHint" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="NonEditPosition" Type="System.ComponentModel.MaskedTextResultHint" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-54" />
      <Field Name="PositionOutOfRange" Type="System.ComponentModel.MaskedTextResultHint" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-55" />
      <Field Name="PromptCharNotAllowed" Type="System.ComponentModel.MaskedTextResultHint" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-52" />
      <Field Name="SideEffect" Type="System.ComponentModel.MaskedTextResultHint" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="SignedDigitExpected" Type="System.ComponentModel.MaskedTextResultHint" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-5" />
      <Field Name="Success" Type="System.ComponentModel.MaskedTextResultHint" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="UnavailableEditPosition" Type="System.ComponentModel.MaskedTextResultHint" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-53" />
      <Field Name="Unknown" Type="System.ComponentModel.MaskedTextResultHint" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="MemberDescriptor" Type="System.ComponentModel.MemberDescriptor" BaseName="Object" BaseType="System.Object">
      <Property Name="Attributes" Type="System.ComponentModel.AttributeCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Category" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Description" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="DesignTimeOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="DisplayName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="IsBrowsable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="MergablePropertyAttribute" Type="System.ComponentModel.MergablePropertyAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.MergablePropertyAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="No" Type="System.ComponentModel.MergablePropertyAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Yes" Type="System.ComponentModel.MergablePropertyAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="AllowMerge" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="allowMerge" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="MultilineStringConverter" Type="System.ComponentModel.MultilineStringConverter" BaseName="TypeConverter" BaseType="System.ComponentModel.TypeConverter">
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetPropertiesSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="NestedContainer" Type="System.ComponentModel.NestedContainer" BaseName="Container" BaseType="System.ComponentModel.Container">
      <ImplementedInterface Type="System.ComponentModel.IContainer" />
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.ComponentModel.INestedContainer" />
      <Property Name="Owner" Type="System.ComponentModel.IComponent" IsInterface="True" IsReadable="True" />
      <Constructor>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" IsInterface="True" />
      </Constructor>
    </Class>
    <Class Name="NotifyParentPropertyAttribute" Type="System.ComponentModel.NotifyParentPropertyAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.NotifyParentPropertyAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="No" Type="System.ComponentModel.NotifyParentPropertyAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Yes" Type="System.ComponentModel.NotifyParentPropertyAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="NotifyParent" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="notifyParent" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="NullableConverter" Type="System.ComponentModel.NullableConverter" BaseName="TypeConverter" BaseType="System.ComponentModel.TypeConverter">
      <Property Name="NullableType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="UnderlyingType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="UnderlyingTypeConverter" Type="System.ComponentModel.TypeConverter" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Method Name="CanConvertFrom" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="sourceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="CanConvertTo" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertFrom" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="CreateInstance" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" IsInterface="True" />
      </Method>
      <Method Name="GetCreateInstanceSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetPropertiesSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="GetStandardValues" Type="System.ComponentModel.TypeConverter+StandardValuesCollection" BaseName="Object" BaseType="System.Object" IsNested="True">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="GetStandardValuesExclusive" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="GetStandardValuesSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="IsValid" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
    </Class>
    <Class Name="ParenthesizePropertyNameAttribute" Type="System.ComponentModel.ParenthesizePropertyNameAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.ParenthesizePropertyNameAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="NeedParenthesis" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="needParenthesis" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="o" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="PasswordPropertyTextAttribute" Type="System.ComponentModel.PasswordPropertyTextAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.PasswordPropertyTextAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="No" Type="System.ComponentModel.PasswordPropertyTextAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Yes" Type="System.ComponentModel.PasswordPropertyTextAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Password" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="password" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="o" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="ProgressChangedEventArgs" Type="System.ComponentModel.ProgressChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="ProgressPercentage" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="UserState" Type="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="progressPercentage" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="userState" Type="System.Object" />
      </Constructor>
    </Class>
    <Class Name="ProgressChangedEventHandler" Type="System.ComponentModel.ProgressChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.ProgressChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.ProgressChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="PropertyChangedEventArgs" Type="System.ComponentModel.PropertyChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="PropertyName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="propertyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="PropertyChangedEventHandler" Type="System.ComponentModel.PropertyChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="PropertyChangingEventArgs" Type="System.ComponentModel.PropertyChangingEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="PropertyName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="propertyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="PropertyChangingEventHandler" Type="System.ComponentModel.PropertyChangingEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangingEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangingEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="PropertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor">
      <Property Name="ComponentType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="Converter" Type="System.ComponentModel.TypeConverter" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="IsLocalizable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PropertyType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="SerializationVisibility" Type="System.ComponentModel.DesignerSerializationVisibility" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="SupportsChangeEvents" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="AddValueChanged" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
      </Method>
      <Method Name="CanResetValue" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetChildProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetChildProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="filter" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetChildProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="instance" Type="System.Object" />
      </Method>
      <Method Name="GetChildProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetEditor" Type="System.Object">
        <Parameter Name="editorBaseType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetValue" Type="System.Object">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="RemoveValueChanged" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
      </Method>
      <Method Name="ResetValue" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="SetValue" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ShouldSerializeValue" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.Object" />
      </Method>
    </Class>
    <Class Name="PropertyDescriptorCollection" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.IDictionary" />
      <Field Name="Empty" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="get_Item" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Constructor>
        <Parameter Name="properties" Type="System.ComponentModel.PropertyDescriptor[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.ComponentModel.PropertyDescriptor" />
      </Constructor>
      <Constructor>
        <Parameter Name="properties" Type="System.ComponentModel.PropertyDescriptor[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="readOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Array" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Find" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ignoreCase" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
      <Method Name="RemoveAt" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Sort" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object" />
      <Method Name="Sort" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="names" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
      </Method>
      <Method Name="Sort" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="names" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" IsInterface="True" />
      </Method>
      <Method Name="Sort" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="comparer" Type="System.Collections.IComparer" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="PropertyTabAttribute" Type="System.ComponentModel.PropertyTabAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="TabClasses" Type="System.Type[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Type" IsReadable="True" />
      <Property Name="TabScopes" Type="System.ComponentModel.PropertyTabScope[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.ComponentModel.PropertyTabScope" IsReadable="True" />
      <Constructor>
        <Parameter Name="tabClass" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Constructor>
        <Parameter Name="tabClassName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="tabClass" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="tabScope" Type="System.ComponentModel.PropertyTabScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="tabClassName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="tabScope" Type="System.ComponentModel.PropertyTabScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="other" Type="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="other" Type="System.ComponentModel.PropertyTabAttribute" BaseName="Attribute" BaseType="System.Attribute" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Enumeration Name="PropertyTabScope" Type="System.ComponentModel.PropertyTabScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Component" Type="System.ComponentModel.PropertyTabScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Document" Type="System.ComponentModel.PropertyTabScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Global" Type="System.ComponentModel.PropertyTabScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Static" Type="System.ComponentModel.PropertyTabScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="ProvidePropertyAttribute" Type="System.ComponentModel.ProvidePropertyAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="PropertyName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ReceiverTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="TypeId" Type="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="propertyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="receiverType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Constructor>
        <Parameter Name="propertyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="receiverTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="ReadOnlyAttribute" Type="System.ComponentModel.ReadOnlyAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.ReadOnlyAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="No" Type="System.ComponentModel.ReadOnlyAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Yes" Type="System.ComponentModel.ReadOnlyAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="IsReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="isReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="RecommendedAsConfigurableAttribute" Type="System.ComponentModel.RecommendedAsConfigurableAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.RecommendedAsConfigurableAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="No" Type="System.ComponentModel.RecommendedAsConfigurableAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Yes" Type="System.ComponentModel.RecommendedAsConfigurableAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="RecommendedAsConfigurable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="recommendedAsConfigurable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="ReferenceConverter" Type="System.ComponentModel.ReferenceConverter" BaseName="TypeConverter" BaseType="System.ComponentModel.TypeConverter">
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Method Name="CanConvertFrom" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="sourceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertFrom" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetStandardValues" Type="System.ComponentModel.TypeConverter+StandardValuesCollection" BaseName="Object" BaseType="System.Object" IsNested="True">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="GetStandardValuesExclusive" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="GetStandardValuesSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="RefreshEventArgs" Type="System.ComponentModel.RefreshEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="ComponentChanged" Type="System.Object" IsReadable="True" />
      <Property Name="TypeChanged" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Constructor>
        <Parameter Name="componentChanged" Type="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="typeChanged" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
    </Class>
    <Class Name="RefreshEventHandler" Type="System.ComponentModel.RefreshEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="e" Type="System.ComponentModel.RefreshEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="e" Type="System.ComponentModel.RefreshEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Enumeration Name="RefreshProperties" Type="System.ComponentModel.RefreshProperties" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="All" Type="System.ComponentModel.RefreshProperties" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="None" Type="System.ComponentModel.RefreshProperties" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Repaint" Type="System.ComponentModel.RefreshProperties" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Class Name="RefreshPropertiesAttribute" Type="System.ComponentModel.RefreshPropertiesAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="All" Type="System.ComponentModel.RefreshPropertiesAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Default" Type="System.ComponentModel.RefreshPropertiesAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Repaint" Type="System.ComponentModel.RefreshPropertiesAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="RefreshProperties" Type="System.ComponentModel.RefreshProperties" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="refresh" Type="System.ComponentModel.RefreshProperties" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="RunInstallerAttribute" Type="System.ComponentModel.RunInstallerAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.RunInstallerAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="No" Type="System.ComponentModel.RunInstallerAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Yes" Type="System.ComponentModel.RunInstallerAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="RunInstaller" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="runInstaller" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="RunWorkerCompletedEventArgs" Type="System.ComponentModel.RunWorkerCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs">
      <Property Name="Result" Type="System.Object" IsReadable="True" />
      <Property Name="UserState" Type="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="result" Type="System.Object" />
        <Parameter Name="error" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="cancelled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="RunWorkerCompletedEventHandler" Type="System.ComponentModel.RunWorkerCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.RunWorkerCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.RunWorkerCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Method>
    </Class>
    <Class Name="SByteConverter" Type="System.ComponentModel.SByteConverter" BaseName="BaseNumberConverter" BaseType="System.ComponentModel.BaseNumberConverter" />
    <Class Name="SettingsBindableAttribute" Type="System.ComponentModel.SettingsBindableAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="No" Type="System.ComponentModel.SettingsBindableAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="Yes" Type="System.ComponentModel.SettingsBindableAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="Bindable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="bindable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="SingleConverter" Type="System.ComponentModel.SingleConverter" BaseName="BaseNumberConverter" BaseType="System.ComponentModel.BaseNumberConverter" />
    <Class Name="StringConverter" Type="System.ComponentModel.StringConverter" BaseName="TypeConverter" BaseType="System.ComponentModel.TypeConverter">
      <Method Name="CanConvertFrom" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="sourceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertFrom" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
    </Class>
    <Class Name="SyntaxCheck" Type="System.ComponentModel.SyntaxCheck" BaseName="Object" BaseType="System.Object">
      <Method Name="CheckMachineName" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CheckPath" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CheckRootedPath" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="TimeSpanConverter" Type="System.ComponentModel.TimeSpanConverter" BaseName="TypeConverter" BaseType="System.ComponentModel.TypeConverter">
      <Method Name="CanConvertFrom" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="sourceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="CanConvertTo" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertFrom" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Class>
    <Class Name="ToolboxItemAttribute" Type="System.ComponentModel.ToolboxItemAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.ToolboxItemAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Field Name="None" Type="System.ComponentModel.ToolboxItemAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="ToolboxItemType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="ToolboxItemTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="defaultType" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="toolboxItemTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="toolboxItemType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="ToolboxItemFilterAttribute" Type="System.ComponentModel.ToolboxItemFilterAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="FilterString" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="FilterType" Type="System.ComponentModel.ToolboxItemFilterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="TypeId" Type="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="filterString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="filterString" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="filterType" Type="System.ComponentModel.ToolboxItemFilterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Match" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Enumeration Name="ToolboxItemFilterType" Type="System.ComponentModel.ToolboxItemFilterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Allow" Type="System.ComponentModel.ToolboxItemFilterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Custom" Type="System.ComponentModel.ToolboxItemFilterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Prevent" Type="System.ComponentModel.ToolboxItemFilterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Require" Type="System.ComponentModel.ToolboxItemFilterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
    </Enumeration>
    <Class Name="TypeConverter" Type="System.ComponentModel.TypeConverter" BaseName="Object" BaseType="System.Object">
      <Method Name="CanConvertFrom" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sourceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="CanConvertFrom" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="sourceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="CanConvertTo" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="CanConvertTo" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertFrom" Type="System.Object">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ConvertFrom" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ConvertFromInvariantString" Type="System.Object">
        <Parameter Name="text" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ConvertFromInvariantString" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="text" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ConvertFromString" Type="System.Object">
        <Parameter Name="text" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ConvertFromString" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="text" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ConvertFromString" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="text" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertToInvariantString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ConvertToInvariantString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ConvertToString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ConvertToString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ConvertToString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="CreateInstance" Type="System.Object">
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" IsInterface="True" />
      </Method>
      <Method Name="CreateInstance" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" IsInterface="True" />
      </Method>
      <Method Name="GetCreateInstanceSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetCreateInstanceSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetPropertiesSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetPropertiesSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="GetStandardValues" Type="System.Collections.ICollection" IsInterface="True" />
      <Method Name="GetStandardValues" Type="System.ComponentModel.TypeConverter+StandardValuesCollection" BaseName="Object" BaseType="System.Object" IsNested="True">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="GetStandardValuesExclusive" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetStandardValuesExclusive" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="GetStandardValuesSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetStandardValuesSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="IsValid" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="IsValid" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
    </Class>
    <Class Name="TypeConverter.StandardValuesCollection" Type="System.ComponentModel.TypeConverter+StandardValuesCollection" BaseName="Object" BaseType="System.Object" IsNested="True">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Constructor>
        <Parameter Name="values" Type="System.Collections.ICollection" IsInterface="True" />
      </Constructor>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Array" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
    </Class>
    <Class Name="TypeConverterAttribute" Type="System.ComponentModel.TypeConverterAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.TypeConverterAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="ConverterTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Constructor>
        <Parameter Name="typeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="TypeDescriptionProvider" Type="System.ComponentModel.TypeDescriptionProvider" BaseName="Object" BaseType="System.Object">
      <Method Name="CreateInstance" Type="System.Object">
        <Parameter Name="provider" Type="System.IServiceProvider" IsInterface="True" />
        <Parameter Name="objectType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="argTypes" Type="System.Type[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Type" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="GetCache" Type="System.Collections.IDictionary" IsInterface="True">
        <Parameter Name="instance" Type="System.Object" />
      </Method>
      <Method Name="GetExtendedTypeDescriptor" Type="System.ComponentModel.ICustomTypeDescriptor" IsInterface="True">
        <Parameter Name="instance" Type="System.Object" />
      </Method>
      <Method Name="GetFullComponentName" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="GetReflectionType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo">
        <Parameter Name="objectType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetReflectionType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo">
        <Parameter Name="instance" Type="System.Object" />
      </Method>
      <Method Name="GetReflectionType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo">
        <Parameter Name="objectType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="instance" Type="System.Object" />
      </Method>
      <Method Name="GetRuntimeType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo">
        <Parameter Name="reflectionType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetTypeDescriptor" Type="System.ComponentModel.ICustomTypeDescriptor" IsInterface="True">
        <Parameter Name="objectType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetTypeDescriptor" Type="System.ComponentModel.ICustomTypeDescriptor" IsInterface="True">
        <Parameter Name="instance" Type="System.Object" />
      </Method>
      <Method Name="GetTypeDescriptor" Type="System.ComponentModel.ICustomTypeDescriptor" IsInterface="True">
        <Parameter Name="objectType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="instance" Type="System.Object" />
      </Method>
      <Method Name="IsSupportedType" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Class>
    <Class Name="TypeDescriptionProviderAttribute" Type="System.ComponentModel.TypeDescriptionProviderAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="TypeName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="typeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
    </Class>
    <Class Name="TypeDescriptor" Type="System.ComponentModel.TypeDescriptor" BaseName="Object" BaseType="System.Object">
      <Property Name="ComNativeDescriptorHandler" Type="System.ComponentModel.IComNativeDescriptorHandler" IsInterface="True" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="ComObjectType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" IsStatic="True" />
      <Property Name="InterfaceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" IsStatic="True" />
      <Method Name="AddAttributes" Type="System.ComponentModel.TypeDescriptionProvider" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="AddAttributes" Type="System.ComponentModel.TypeDescriptionProvider" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="AddEditorTable" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="editorBaseType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="table" Type="System.Collections.Hashtable" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddProvider" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="AddProvider" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="instance" Type="System.Object" />
      </Method>
      <Method Name="AddProviderTransparent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="AddProviderTransparent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="instance" Type="System.Object" />
      </Method>
      <Method Name="CreateAssociation" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="primary" Type="System.Object" />
        <Parameter Name="secondary" Type="System.Object" />
      </Method>
      <Method Name="CreateDesigner" Type="System.ComponentModel.Design.IDesigner" IsInterface="True" IsStatic="True">
        <Parameter Name="component" Type="System.ComponentModel.IComponent" IsInterface="True" />
        <Parameter Name="designerBaseType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="CreateEvent" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" IsStatic="True">
        <Parameter Name="componentType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="CreateEvent" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" IsStatic="True">
        <Parameter Name="componentType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="oldEventDescriptor" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="CreateInstance" Type="System.Object" IsStatic="True">
        <Parameter Name="provider" Type="System.IServiceProvider" IsInterface="True" />
        <Parameter Name="objectType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="argTypes" Type="System.Type[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Type" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="CreateProperty" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" IsStatic="True">
        <Parameter Name="componentType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="CreateProperty" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" IsStatic="True">
        <Parameter Name="componentType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="oldPropertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetAssociation" Type="System.Object" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="primary" Type="System.Object" />
      </Method>
      <Method Name="GetAttributes" Type="System.ComponentModel.AttributeCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="componentType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetAttributes" Type="System.ComponentModel.AttributeCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="GetAttributes" Type="System.ComponentModel.AttributeCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetClassName" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="GetClassName" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetClassName" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="componentType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetComponentName" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="GetComponentName" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetConverter" Type="System.ComponentModel.TypeConverter" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="GetConverter" Type="System.ComponentModel.TypeConverter" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetConverter" Type="System.ComponentModel.TypeConverter" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetDefaultEvent" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" IsStatic="True">
        <Parameter Name="componentType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetDefaultEvent" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="GetDefaultEvent" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetDefaultProperty" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" IsStatic="True">
        <Parameter Name="componentType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetDefaultProperty" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="GetDefaultProperty" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEditor" Type="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetEditor" Type="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEditor" Type="System.Object" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="editorBaseType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetEvents" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="componentType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetEvents" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="componentType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetEvents" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="GetEvents" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEvents" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetEvents" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetFullComponentName" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="componentType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="componentType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
      </Method>
      <Method Name="GetProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Attribute" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetProvider" Type="System.ComponentModel.TypeDescriptionProvider" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetProvider" Type="System.ComponentModel.TypeDescriptionProvider" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="instance" Type="System.Object" />
      </Method>
      <Method Name="GetReflectionType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetReflectionType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsStatic="True">
        <Parameter Name="instance" Type="System.Object" />
      </Method>
      <Method Name="Refresh" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="Refresh" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Refresh" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="module" Type="System.Reflection.Module" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Refresh" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="assembly" Type="System.Reflection.Assembly" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="RemoveAssociation" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="primary" Type="System.Object" />
        <Parameter Name="secondary" Type="System.Object" />
      </Method>
      <Method Name="RemoveAssociations" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="primary" Type="System.Object" />
      </Method>
      <Method Name="RemoveProvider" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="RemoveProvider" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="instance" Type="System.Object" />
      </Method>
      <Method Name="RemoveProviderTransparent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="RemoveProviderTransparent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="instance" Type="System.Object" />
      </Method>
      <Method Name="SortDescriptorArray" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="infos" Type="System.Collections.IList" IsInterface="True" />
      </Method>
      <Event Name="Refreshed" Type="System.ComponentModel.RefreshEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="e" Type="System.ComponentModel.RefreshEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Class Name="TypeListConverter" Type="System.ComponentModel.TypeListConverter" BaseName="TypeConverter" BaseType="System.ComponentModel.TypeConverter">
      <Method Name="CanConvertFrom" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="sourceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="CanConvertTo" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertFrom" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetStandardValues" Type="System.ComponentModel.TypeConverter+StandardValuesCollection" BaseName="Object" BaseType="System.Object" IsNested="True">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="GetStandardValuesExclusive" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
      <Method Name="GetStandardValuesSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="UInt16Converter" Type="System.ComponentModel.UInt16Converter" BaseName="BaseNumberConverter" BaseType="System.ComponentModel.BaseNumberConverter" />
    <Class Name="UInt32Converter" Type="System.ComponentModel.UInt32Converter" BaseName="BaseNumberConverter" BaseType="System.ComponentModel.BaseNumberConverter" />
    <Class Name="UInt64Converter" Type="System.ComponentModel.UInt64Converter" BaseName="BaseNumberConverter" BaseType="System.ComponentModel.BaseNumberConverter" />
    <Class Name="WarningException" Type="System.ComponentModel.WarningException" BaseName="SystemException" BaseType="System.SystemException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Property Name="HelpTopic" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="HelpUrl" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="helpUrl" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="helpUrl" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="helpTopic" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="GetObjectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="Win32Exception" Type="System.ComponentModel.Win32Exception" BaseName="ExternalException" BaseType="System.Runtime.InteropServices.ExternalException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Property Name="NativeErrorCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="error" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="error" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="GetObjectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.ComponentModel.Design">
    <Class Name="ActiveDesignerEventArgs" Type="System.ComponentModel.Design.ActiveDesignerEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="NewDesigner" Type="System.ComponentModel.Design.IDesignerHost" IsInterface="True" IsReadable="True" />
      <Property Name="OldDesigner" Type="System.ComponentModel.Design.IDesignerHost" IsInterface="True" IsReadable="True" />
      <Constructor>
        <Parameter Name="oldDesigner" Type="System.ComponentModel.Design.IDesignerHost" IsInterface="True" />
        <Parameter Name="newDesigner" Type="System.ComponentModel.Design.IDesignerHost" IsInterface="True" />
      </Constructor>
    </Class>
    <Class Name="ActiveDesignerEventHandler" Type="System.ComponentModel.Design.ActiveDesignerEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ActiveDesignerEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ActiveDesignerEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="CheckoutException" Type="System.ComponentModel.Design.CheckoutException" BaseName="ExternalException" BaseType="System.Runtime.InteropServices.ExternalException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Field Name="Canceled" Type="System.ComponentModel.Design.CheckoutException" BaseName="ExternalException" BaseType="System.Runtime.InteropServices.ExternalException" IsReadable="True" IsStatic="True" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="errorCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="CommandID" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object">
      <Property Name="Guid" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ID" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="menuGroup" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="commandID" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="ComponentChangedEventArgs" Type="System.ComponentModel.Design.ComponentChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Component" Type="System.Object" IsReadable="True" />
      <Property Name="Member" Type="System.ComponentModel.MemberDescriptor" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="NewValue" Type="System.Object" IsReadable="True" />
      <Property Name="OldValue" Type="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Constructor>
    </Class>
    <Class Name="ComponentChangedEventHandler" Type="System.ComponentModel.Design.ComponentChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="ComponentChangingEventArgs" Type="System.ComponentModel.Design.ComponentChangingEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Component" Type="System.Object" IsReadable="True" />
      <Property Name="Member" Type="System.ComponentModel.MemberDescriptor" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="ComponentChangingEventHandler" Type="System.ComponentModel.Design.ComponentChangingEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangingEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangingEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="ComponentEventArgs" Type="System.ComponentModel.Design.ComponentEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Component" Type="System.ComponentModel.IComponent" IsInterface="True" IsReadable="True" />
      <Constructor>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" IsInterface="True" />
      </Constructor>
    </Class>
    <Class Name="ComponentEventHandler" Type="System.ComponentModel.Design.ComponentEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="ComponentRenameEventArgs" Type="System.ComponentModel.Design.ComponentRenameEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Component" Type="System.Object" IsReadable="True" />
      <Property Name="NewName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="OldName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="oldName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="newName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="ComponentRenameEventHandler" Type="System.ComponentModel.Design.ComponentRenameEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentRenameEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentRenameEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="DesignerCollection" Type="System.ComponentModel.Design.DesignerCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.ComponentModel.Design.IDesignerHost" IsInterface="True">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Constructor>
        <Parameter Name="designers" Type="System.ComponentModel.Design.IDesignerHost[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.ComponentModel.Design.IDesignerHost" />
      </Constructor>
      <Constructor>
        <Parameter Name="designers" Type="System.Collections.IList" IsInterface="True" />
      </Constructor>
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
    </Class>
    <Class Name="DesignerEventArgs" Type="System.ComponentModel.Design.DesignerEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Designer" Type="System.ComponentModel.Design.IDesignerHost" IsInterface="True" IsReadable="True" />
      <Constructor>
        <Parameter Name="host" Type="System.ComponentModel.Design.IDesignerHost" IsInterface="True" />
      </Constructor>
    </Class>
    <Class Name="DesignerEventHandler" Type="System.ComponentModel.Design.DesignerEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.DesignerEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.DesignerEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="DesignerOptionService" Type="System.ComponentModel.Design.DesignerOptionService" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.ComponentModel.Design.IDesignerOptionService" />
      <Property Name="Options" Type="System.ComponentModel.Design.DesignerOptionService+DesignerOptionCollection" BaseName="Object" BaseType="System.Object" IsNested="True" IsReadable="True" />
    </Class>
    <Class Name="DesignerOptionService.DesignerOptionCollection" Type="System.ComponentModel.Design.DesignerOptionService+DesignerOptionCollection" BaseName="Object" BaseType="System.Object" IsNested="True">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Parent" Type="System.ComponentModel.Design.DesignerOptionService+DesignerOptionCollection" BaseName="Object" BaseType="System.Object" IsNested="True" IsReadable="True" />
      <Property Name="Properties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="get_Item" Type="System.ComponentModel.Design.DesignerOptionService+DesignerOptionCollection" BaseName="Object" BaseType="System.Object" IsNested="True">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="get_Item" Type="System.ComponentModel.Design.DesignerOptionService+DesignerOptionCollection" BaseName="Object" BaseType="System.Object" IsNested="True">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Array" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.ComponentModel.Design.DesignerOptionService+DesignerOptionCollection" BaseName="Object" BaseType="System.Object" IsNested="True" />
      </Method>
      <Method Name="ShowDialog" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="DesignerTransaction" Type="System.ComponentModel.Design.DesignerTransaction" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Canceled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Committed" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Description" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="Cancel" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Commit" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="DesignerTransactionCloseEventArgs" Type="System.ComponentModel.Design.DesignerTransactionCloseEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="LastTransaction" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TransactionCommitted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="commit" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="commit" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="lastTransaction" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="DesignerTransactionCloseEventHandler" Type="System.ComponentModel.Design.DesignerTransactionCloseEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.DesignerTransactionCloseEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.DesignerTransactionCloseEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="DesignerVerb" Type="System.ComponentModel.Design.DesignerVerb" BaseName="MenuCommand" BaseType="System.ComponentModel.Design.MenuCommand">
      <Property Name="Description" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Text" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="text" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="text" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="startCommandID" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="DesignerVerbCollection" Type="System.ComponentModel.Design.DesignerVerbCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.ComponentModel.Design.DesignerVerb" BaseName="MenuCommand" BaseType="System.ComponentModel.Design.MenuCommand">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.ComponentModel.Design.DesignerVerb" BaseName="MenuCommand" BaseType="System.ComponentModel.Design.MenuCommand" />
      </Method>
      <Constructor>
        <Parameter Name="value" Type="System.ComponentModel.Design.DesignerVerb[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.ComponentModel.Design.DesignerVerb" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.ComponentModel.Design.DesignerVerb" BaseName="MenuCommand" BaseType="System.ComponentModel.Design.MenuCommand" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.ComponentModel.Design.DesignerVerb[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.ComponentModel.Design.DesignerVerb" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.ComponentModel.Design.DesignerVerbCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.ComponentModel.Design.DesignerVerb" BaseName="MenuCommand" BaseType="System.ComponentModel.Design.MenuCommand" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.ComponentModel.Design.DesignerVerb[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.ComponentModel.Design.DesignerVerb" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.ComponentModel.Design.DesignerVerb" BaseName="MenuCommand" BaseType="System.ComponentModel.Design.MenuCommand" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.ComponentModel.Design.DesignerVerb" BaseName="MenuCommand" BaseType="System.ComponentModel.Design.MenuCommand" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.ComponentModel.Design.DesignerVerb" BaseName="MenuCommand" BaseType="System.ComponentModel.Design.MenuCommand" />
      </Method>
    </Class>
    <Class Name="DesigntimeLicenseContext" Type="System.ComponentModel.Design.DesigntimeLicenseContext" BaseName="LicenseContext" BaseType="System.ComponentModel.LicenseContext">
      <ImplementedInterface Type="System.IServiceProvider" />
      <Property Name="UsageMode" Type="System.ComponentModel.LicenseUsageMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Method Name="GetSavedLicenseKey" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="resourceAssembly" Type="System.Reflection.Assembly" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SetSavedLicenseKey" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="key" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="DesigntimeLicenseContextSerializer" Type="System.ComponentModel.Design.DesigntimeLicenseContextSerializer" BaseName="Object" BaseType="System.Object">
      <Method Name="Serialize" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="o" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="cryptoKey" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="context" Type="System.ComponentModel.Design.DesigntimeLicenseContext" BaseName="LicenseContext" BaseType="System.ComponentModel.LicenseContext" />
      </Method>
    </Class>
    <Enumeration Name="HelpContextType" Type="System.ComponentModel.Design.HelpContextType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Ambient" Type="System.ComponentModel.Design.HelpContextType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Selection" Type="System.ComponentModel.Design.HelpContextType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="ToolWindowSelection" Type="System.ComponentModel.Design.HelpContextType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Window" Type="System.ComponentModel.Design.HelpContextType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="HelpKeywordAttribute" Type="System.ComponentModel.Design.HelpKeywordAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Field Name="Default" Type="System.ComponentModel.Design.HelpKeywordAttribute" BaseName="Attribute" BaseType="System.Attribute" IsReadable="True" IsStatic="True" />
      <Property Name="HelpKeyword" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="keyword" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="t" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsDefaultAttribute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Enumeration Name="HelpKeywordType" Type="System.ComponentModel.Design.HelpKeywordType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="F1Keyword" Type="System.ComponentModel.Design.HelpKeywordType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="FilterKeyword" Type="System.ComponentModel.Design.HelpKeywordType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="GeneralKeyword" Type="System.ComponentModel.Design.HelpKeywordType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Interface Name="IComponentChangeService" Type="System.ComponentModel.Design.IComponentChangeService" IsInterface="True">
      <Method Name="OnComponentChanged" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Method>
      <Method Name="OnComponentChanging" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Event Name="ComponentAdded" Type="System.ComponentModel.Design.ComponentEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="ComponentAdding" Type="System.ComponentModel.Design.ComponentEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="ComponentChanged" Type="System.ComponentModel.Design.ComponentChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="ComponentChanging" Type="System.ComponentModel.Design.ComponentChangingEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangingEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="ComponentRemoved" Type="System.ComponentModel.Design.ComponentEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="ComponentRemoving" Type="System.ComponentModel.Design.ComponentEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="ComponentRename" Type="System.ComponentModel.Design.ComponentRenameEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentRenameEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Interface>
    <Interface Name="IComponentDiscoveryService" Type="System.ComponentModel.Design.IComponentDiscoveryService" IsInterface="True">
      <Method Name="GetComponentTypes" Type="System.Collections.ICollection" IsInterface="True">
        <Parameter Name="designerHost" Type="System.ComponentModel.Design.IDesignerHost" IsInterface="True" />
        <Parameter Name="baseType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Interface>
    <Interface Name="IComponentInitializer" Type="System.ComponentModel.Design.IComponentInitializer" IsInterface="True">
      <Method Name="InitializeExistingComponent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" IsInterface="True" />
      </Method>
      <Method Name="InitializeNewComponent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" IsInterface="True" />
      </Method>
    </Interface>
    <Interface Name="IDesigner" Type="System.ComponentModel.Design.IDesigner" IsInterface="True">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Component" Type="System.ComponentModel.IComponent" IsInterface="True" IsReadable="True" />
      <Property Name="Verbs" Type="System.ComponentModel.Design.DesignerVerbCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Method Name="DoDefaultAction" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Initialize" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.ComponentModel.IComponent" IsInterface="True" />
      </Method>
    </Interface>
    <Interface Name="IDesignerEventService" Type="System.ComponentModel.Design.IDesignerEventService" IsInterface="True">
      <Property Name="ActiveDesigner" Type="System.ComponentModel.Design.IDesignerHost" IsInterface="True" IsReadable="True" />
      <Property Name="Designers" Type="System.ComponentModel.Design.DesignerCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Event Name="ActiveDesignerChanged" Type="System.ComponentModel.Design.ActiveDesignerEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ActiveDesignerEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="DesignerCreated" Type="System.ComponentModel.Design.DesignerEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.DesignerEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="DesignerDisposed" Type="System.ComponentModel.Design.DesignerEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.DesignerEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="SelectionChanged" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
    </Interface>
    <Interface Name="IDesignerFilter" Type="System.ComponentModel.Design.IDesignerFilter" IsInterface="True">
      <Method Name="PostFilterAttributes" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="attributes" Type="System.Collections.IDictionary" IsInterface="True" />
      </Method>
      <Method Name="PostFilterEvents" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="events" Type="System.Collections.IDictionary" IsInterface="True" />
      </Method>
      <Method Name="PostFilterProperties" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="properties" Type="System.Collections.IDictionary" IsInterface="True" />
      </Method>
      <Method Name="PreFilterAttributes" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="attributes" Type="System.Collections.IDictionary" IsInterface="True" />
      </Method>
      <Method Name="PreFilterEvents" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="events" Type="System.Collections.IDictionary" IsInterface="True" />
      </Method>
      <Method Name="PreFilterProperties" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="properties" Type="System.Collections.IDictionary" IsInterface="True" />
      </Method>
    </Interface>
    <Interface Name="IDesignerHost" Type="System.ComponentModel.Design.IDesignerHost" IsInterface="True">
      <ImplementedInterface Type="System.ComponentModel.Design.IServiceContainer" />
      <ImplementedInterface Type="System.IServiceProvider" />
      <Property Name="Container" Type="System.ComponentModel.IContainer" IsInterface="True" IsReadable="True" />
      <Property Name="InTransaction" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Loading" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="RootComponent" Type="System.ComponentModel.IComponent" IsInterface="True" IsReadable="True" />
      <Property Name="RootComponentClassName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="TransactionDescription" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="Activate" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="CreateComponent" Type="System.ComponentModel.IComponent" IsInterface="True">
        <Parameter Name="componentClass" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="CreateComponent" Type="System.ComponentModel.IComponent" IsInterface="True">
        <Parameter Name="componentClass" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateTransaction" Type="System.ComponentModel.Design.DesignerTransaction" BaseName="Object" BaseType="System.Object" />
      <Method Name="CreateTransaction" Type="System.ComponentModel.Design.DesignerTransaction" BaseName="Object" BaseType="System.Object">
        <Parameter Name="description" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DestroyComponent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.ComponentModel.IComponent" IsInterface="True" />
      </Method>
      <Method Name="GetDesigner" Type="System.ComponentModel.Design.IDesigner" IsInterface="True">
        <Parameter Name="component" Type="System.ComponentModel.IComponent" IsInterface="True" />
      </Method>
      <Method Name="GetType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo">
        <Parameter Name="typeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Event Name="Activated" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="Deactivated" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="LoadComplete" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="TransactionClosed" Type="System.ComponentModel.Design.DesignerTransactionCloseEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.DesignerTransactionCloseEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="TransactionClosing" Type="System.ComponentModel.Design.DesignerTransactionCloseEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.DesignerTransactionCloseEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="TransactionOpened" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="TransactionOpening" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
    </Interface>
    <Interface Name="IDesignerHostTransactionState" Type="System.ComponentModel.Design.IDesignerHostTransactionState" IsInterface="True">
      <Property Name="IsClosingTransaction" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Interface>
    <Interface Name="IDesignerOptionService" Type="System.ComponentModel.Design.IDesignerOptionService" IsInterface="True">
      <Method Name="GetOptionValue" Type="System.Object">
        <Parameter Name="pageName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="valueName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SetOptionValue" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="pageName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="valueName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
    </Interface>
    <Interface Name="IDictionaryService" Type="System.ComponentModel.Design.IDictionaryService" IsInterface="True">
      <Method Name="GetKey" Type="System.Object">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="GetValue" Type="System.Object">
        <Parameter Name="key" Type="System.Object" />
      </Method>
      <Method Name="SetValue" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
    </Interface>
    <Interface Name="IEventBindingService" Type="System.ComponentModel.Design.IEventBindingService" IsInterface="True">
      <Method Name="CreateUniqueMethodName" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="component" Type="System.ComponentModel.IComponent" IsInterface="True" />
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
      <Method Name="GetCompatibleMethods" Type="System.Collections.ICollection" IsInterface="True">
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
      <Method Name="GetEvent" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor">
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
      <Method Name="GetEventProperties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="events" Type="System.ComponentModel.EventDescriptorCollection" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetEventProperty" Type="System.ComponentModel.PropertyDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor">
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
      <Method Name="ShowCode" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ShowCode" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="lineNumber" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ShowCode" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.ComponentModel.IComponent" IsInterface="True" />
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" BaseName="MemberDescriptor" BaseType="System.ComponentModel.MemberDescriptor" />
      </Method>
    </Interface>
    <Interface Name="IExtenderListService" Type="System.ComponentModel.Design.IExtenderListService" IsInterface="True">
      <Method Name="GetExtenderProviders" Type="System.ComponentModel.IExtenderProvider[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.ComponentModel.IExtenderProvider" />
    </Interface>
    <Interface Name="IExtenderProviderService" Type="System.ComponentModel.Design.IExtenderProviderService" IsInterface="True">
      <Method Name="AddExtenderProvider" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="provider" Type="System.ComponentModel.IExtenderProvider" IsInterface="True" />
      </Method>
      <Method Name="RemoveExtenderProvider" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="provider" Type="System.ComponentModel.IExtenderProvider" IsInterface="True" />
      </Method>
    </Interface>
    <Interface Name="IHelpService" Type="System.ComponentModel.Design.IHelpService" IsInterface="True">
      <Method Name="AddContextAttribute" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="keywordType" Type="System.ComponentModel.Design.HelpKeywordType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="ClearContextAttributes" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="CreateLocalContext" Type="System.ComponentModel.Design.IHelpService" IsInterface="True">
        <Parameter Name="contextType" Type="System.ComponentModel.Design.HelpContextType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="RemoveContextAttribute" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="RemoveLocalContext" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="localContext" Type="System.ComponentModel.Design.IHelpService" IsInterface="True" />
      </Method>
      <Method Name="ShowHelpFromKeyword" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="helpKeyword" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ShowHelpFromUrl" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="helpUrl" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Interface>
    <Interface Name="IInheritanceService" Type="System.ComponentModel.Design.IInheritanceService" IsInterface="True">
      <Method Name="AddInheritedComponents" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.ComponentModel.IComponent" IsInterface="True" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" IsInterface="True" />
      </Method>
      <Method Name="GetInheritanceAttribute" Type="System.ComponentModel.InheritanceAttribute" BaseName="Attribute" BaseType="System.Attribute">
        <Parameter Name="component" Type="System.ComponentModel.IComponent" IsInterface="True" />
      </Method>
    </Interface>
    <Interface Name="IMenuCommandService" Type="System.ComponentModel.Design.IMenuCommandService" IsInterface="True">
      <Property Name="Verbs" Type="System.ComponentModel.Design.DesignerVerbCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Method Name="AddCommand" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddVerb" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" BaseName="MenuCommand" BaseType="System.ComponentModel.Design.MenuCommand" />
      </Method>
      <Method Name="FindCommand" Type="System.ComponentModel.Design.MenuCommand" BaseName="Object" BaseType="System.Object">
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GlobalInvoke" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="RemoveCommand" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="RemoveVerb" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" BaseName="MenuCommand" BaseType="System.ComponentModel.Design.MenuCommand" />
      </Method>
      <Method Name="ShowContextMenu" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="menuID" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="x" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="y" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Interface>
    <Interface Name="IReferenceService" Type="System.ComponentModel.Design.IReferenceService" IsInterface="True">
      <Method Name="GetComponent" Type="System.ComponentModel.IComponent" IsInterface="True">
        <Parameter Name="reference" Type="System.Object" />
      </Method>
      <Method Name="GetName" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="reference" Type="System.Object" />
      </Method>
      <Method Name="GetReference" Type="System.Object">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetReferences" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      <Method Name="GetReferences" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object">
        <Parameter Name="baseType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Interface>
    <Interface Name="IResourceService" Type="System.ComponentModel.Design.IResourceService" IsInterface="True">
      <Method Name="GetResourceReader" Type="System.Resources.IResourceReader" IsInterface="True">
        <Parameter Name="info" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetResourceWriter" Type="System.Resources.IResourceWriter" IsInterface="True">
        <Parameter Name="info" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Interface>
    <Interface Name="IRootDesigner" Type="System.ComponentModel.Design.IRootDesigner" IsInterface="True">
      <ImplementedInterface Type="System.ComponentModel.Design.IDesigner" />
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="SupportedTechnologies" Type="System.ComponentModel.Design.ViewTechnology[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.ComponentModel.Design.ViewTechnology" IsReadable="True" />
      <Method Name="GetView" Type="System.Object">
        <Parameter Name="technology" Type="System.ComponentModel.Design.ViewTechnology" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
    </Interface>
    <Interface Name="ISelectionService" Type="System.ComponentModel.Design.ISelectionService" IsInterface="True">
      <Property Name="PrimarySelection" Type="System.Object" IsReadable="True" />
      <Property Name="SelectionCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="GetComponentSelected" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.Object" />
      </Method>
      <Method Name="GetSelectedComponents" Type="System.Collections.ICollection" IsInterface="True" />
      <Method Name="SetSelectedComponents" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="components" Type="System.Collections.ICollection" IsInterface="True" />
      </Method>
      <Method Name="SetSelectedComponents" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="components" Type="System.Collections.ICollection" IsInterface="True" />
        <Parameter Name="selectionType" Type="System.ComponentModel.Design.SelectionTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Event Name="SelectionChanged" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="SelectionChanging" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
    </Interface>
    <Interface Name="IServiceContainer" Type="System.ComponentModel.Design.IServiceContainer" IsInterface="True">
      <ImplementedInterface Type="System.IServiceProvider" />
      <Method Name="AddService" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serviceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="serviceInstance" Type="System.Object" />
      </Method>
      <Method Name="AddService" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serviceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="serviceInstance" Type="System.Object" />
        <Parameter Name="promote" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AddService" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serviceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="callback" Type="System.ComponentModel.Design.ServiceCreatorCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
      </Method>
      <Method Name="AddService" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serviceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="callback" Type="System.ComponentModel.Design.ServiceCreatorCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="promote" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="RemoveService" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serviceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="RemoveService" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serviceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="promote" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Interface>
    <Interface Name="ITreeDesigner" Type="System.ComponentModel.Design.ITreeDesigner" IsInterface="True">
      <ImplementedInterface Type="System.ComponentModel.Design.IDesigner" />
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Children" Type="System.Collections.ICollection" IsInterface="True" IsReadable="True" />
      <Property Name="Parent" Type="System.ComponentModel.Design.IDesigner" IsInterface="True" IsReadable="True" />
    </Interface>
    <Interface Name="ITypeDescriptorFilterService" Type="System.ComponentModel.Design.ITypeDescriptorFilterService" IsInterface="True">
      <Method Name="FilterAttributes" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.ComponentModel.IComponent" IsInterface="True" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" IsInterface="True" />
      </Method>
      <Method Name="FilterEvents" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.ComponentModel.IComponent" IsInterface="True" />
        <Parameter Name="events" Type="System.Collections.IDictionary" IsInterface="True" />
      </Method>
      <Method Name="FilterProperties" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="component" Type="System.ComponentModel.IComponent" IsInterface="True" />
        <Parameter Name="properties" Type="System.Collections.IDictionary" IsInterface="True" />
      </Method>
    </Interface>
    <Interface Name="ITypeDiscoveryService" Type="System.ComponentModel.Design.ITypeDiscoveryService" IsInterface="True">
      <Method Name="GetTypes" Type="System.Collections.ICollection" IsInterface="True">
        <Parameter Name="baseType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="excludeGlobalTypes" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Interface>
    <Interface Name="ITypeResolutionService" Type="System.ComponentModel.Design.ITypeResolutionService" IsInterface="True">
      <Method Name="GetAssembly" Type="System.Reflection.Assembly" BaseName="Object" BaseType="System.Object">
        <Parameter Name="name" Type="System.Reflection.AssemblyName" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetAssembly" Type="System.Reflection.Assembly" BaseName="Object" BaseType="System.Object">
        <Parameter Name="name" Type="System.Reflection.AssemblyName" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="throwOnError" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetPathOfAssembly" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="name" Type="System.Reflection.AssemblyName" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="throwOnError" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="throwOnError" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="ignoreCase" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ReferenceAssembly" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.Reflection.AssemblyName" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Interface>
    <Class Name="MenuCommand" Type="System.ComponentModel.Design.MenuCommand" BaseName="Object" BaseType="System.Object">
      <Property Name="Checked" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="CommandID" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Enabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="OleStatus" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Properties" Type="System.Collections.IDictionary" IsInterface="True" IsReadable="True" />
      <Property Name="Supported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Visible" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="handler" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="command" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="arg" Type="System.Object" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Event Name="CommandChanged" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
    </Class>
    <Enumeration Name="SelectionTypes" Type="System.ComponentModel.Design.SelectionTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Add" Type="System.ComponentModel.Design.SelectionTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
      <Field Name="Auto" Type="System.ComponentModel.Design.SelectionTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Click" Type="System.ComponentModel.Design.SelectionTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="MouseDown" Type="System.ComponentModel.Design.SelectionTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="MouseUp" Type="System.ComponentModel.Design.SelectionTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="Normal" Type="System.ComponentModel.Design.SelectionTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Primary" Type="System.ComponentModel.Design.SelectionTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="Remove" Type="System.ComponentModel.Design.SelectionTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="128" />
      <Field Name="Replace" Type="System.ComponentModel.Design.SelectionTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Toggle" Type="System.ComponentModel.Design.SelectionTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="Valid" Type="System.ComponentModel.Design.SelectionTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="31" />
    </Enumeration>
    <Class Name="ServiceContainer" Type="System.ComponentModel.Design.ServiceContainer" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.ComponentModel.Design.IServiceContainer" />
      <ImplementedInterface Type="System.IServiceProvider" />
      <ImplementedInterface Type="System.IDisposable" />
      <Constructor>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" IsInterface="True" />
      </Constructor>
      <Method Name="AddService" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serviceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="serviceInstance" Type="System.Object" />
      </Method>
      <Method Name="AddService" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serviceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="serviceInstance" Type="System.Object" />
        <Parameter Name="promote" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AddService" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serviceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="callback" Type="System.ComponentModel.Design.ServiceCreatorCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
      </Method>
      <Method Name="AddService" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serviceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="callback" Type="System.ComponentModel.Design.ServiceCreatorCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="promote" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetService" Type="System.Object">
        <Parameter Name="serviceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="RemoveService" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serviceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="RemoveService" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serviceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="promote" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="ServiceCreatorCallback" Type="System.ComponentModel.Design.ServiceCreatorCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="container" Type="System.ComponentModel.Design.IServiceContainer" IsInterface="True" />
        <Parameter Name="serviceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Object">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Object">
        <Parameter Name="container" Type="System.ComponentModel.Design.IServiceContainer" IsInterface="True" />
        <Parameter Name="serviceType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Class>
    <Class Name="StandardCommands" Type="System.ComponentModel.Design.StandardCommands" BaseName="Object" BaseType="System.Object">
      <Field Name="AlignBottom" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="AlignHorizontalCenters" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="AlignLeft" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="AlignRight" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="AlignToGrid" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="AlignTop" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="AlignVerticalCenters" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="ArrangeBottom" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="ArrangeIcons" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="ArrangeRight" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="BringForward" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="BringToFront" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="CenterHorizontally" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="CenterVertically" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="Copy" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="Cut" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="Delete" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="DocumentOutline" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="F1Help" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="Group" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="HorizSpaceConcatenate" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="HorizSpaceDecrease" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="HorizSpaceIncrease" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="HorizSpaceMakeEqual" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="LineupIcons" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="LockControls" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="MultiLevelRedo" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="MultiLevelUndo" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="Paste" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="Properties" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="PropertiesWindow" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="Redo" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="Replace" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="SelectAll" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="SendBackward" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="SendToBack" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="ShowGrid" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="ShowLargeIcons" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="SizeToControl" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="SizeToControlHeight" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="SizeToControlWidth" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="SizeToFit" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="SizeToGrid" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="SnapToGrid" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="TabOrder" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="Undo" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="Ungroup" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="VerbFirst" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="VerbLast" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="VertSpaceConcatenate" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="VertSpaceDecrease" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="VertSpaceIncrease" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="VertSpaceMakeEqual" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="ViewCode" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="ViewGrid" Type="System.ComponentModel.Design.CommandID" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
    </Class>
    <Class Name="StandardToolWindows" Type="System.ComponentModel.Design.StandardToolWindows" BaseName="Object" BaseType="System.Object">
      <Field Name="ObjectBrowser" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Field Name="OutputWindow" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Field Name="ProjectExplorer" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Field Name="PropertyBrowser" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Field Name="RelatedLinks" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Field Name="ServerExplorer" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Field Name="TaskList" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Field Name="Toolbox" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
    </Class>
    <Class Name="TypeDescriptionProviderService" Type="System.ComponentModel.Design.TypeDescriptionProviderService" BaseName="Object" BaseType="System.Object">
      <Method Name="GetProvider" Type="System.ComponentModel.TypeDescriptionProvider" BaseName="Object" BaseType="System.Object">
        <Parameter Name="instance" Type="System.Object" />
      </Method>
      <Method Name="GetProvider" Type="System.ComponentModel.TypeDescriptionProvider" BaseName="Object" BaseType="System.Object">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Class>
    <Enumeration Name="ViewTechnology" Type="System.ComponentModel.Design.ViewTechnology" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Default" Type="System.ComponentModel.Design.ViewTechnology" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Passthrough" Type="System.ComponentModel.Design.ViewTechnology" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="WindowsForms" Type="System.ComponentModel.Design.ViewTechnology" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.ComponentModel.Design.Serialization">
    <Class Name="ComponentSerializationService" Type="System.ComponentModel.Design.Serialization.ComponentSerializationService" BaseName="Object" BaseType="System.Object">
      <Method Name="CreateStore" Type="System.ComponentModel.Design.Serialization.SerializationStore" BaseName="Object" BaseType="System.Object" />
      <Method Name="Deserialize" Type="System.Collections.ICollection" IsInterface="True">
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Deserialize" Type="System.Collections.ICollection" IsInterface="True">
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" IsInterface="True" />
      </Method>
      <Method Name="DeserializeTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" IsInterface="True" />
        <Parameter Name="validateRecycledTypes" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="applyDefaults" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="DeserializeTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" IsInterface="True" />
      </Method>
      <Method Name="DeserializeTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" IsInterface="True" />
        <Parameter Name="validateRecycledTypes" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="LoadStore" Type="System.ComponentModel.Design.Serialization.SerializationStore" BaseName="Object" BaseType="System.Object">
        <Parameter Name="stream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Method>
      <Method Name="Serialize" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="SerializeAbsolute" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="SerializeMember" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="owningObject" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SerializeMemberAbsolute" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="owningObject" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="ContextStack" Type="System.ComponentModel.Design.Serialization.ContextStack" BaseName="Object" BaseType="System.Object">
      <Property Name="Current" Type="System.Object" IsReadable="True" />
      <Method Name="get_Item" Type="System.Object">
        <Parameter Name="level" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="get_Item" Type="System.Object">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Append" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.Object" />
      </Method>
      <Method Name="Pop" Type="System.Object" />
      <Method Name="Push" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.Object" />
      </Method>
    </Class>
    <Class Name="DefaultSerializationProviderAttribute" Type="System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="ProviderTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="providerType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Constructor>
        <Parameter Name="providerTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="DesignerLoader" Type="System.ComponentModel.Design.Serialization.DesignerLoader" BaseName="Object" BaseType="System.Object">
      <Property Name="Loading" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="BeginLoad" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="host" Type="System.ComponentModel.Design.Serialization.IDesignerLoaderHost" IsInterface="True" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Flush" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="DesignerSerializerAttribute" Type="System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="SerializerBaseTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SerializerTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="TypeId" Type="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="serializerType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="baseSerializerType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Constructor>
        <Parameter Name="serializerTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="baseSerializerType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Constructor>
        <Parameter Name="serializerTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="baseSerializerTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Interface Name="IDesignerLoaderHost" Type="System.ComponentModel.Design.Serialization.IDesignerLoaderHost" IsInterface="True">
      <ImplementedInterface Type="System.ComponentModel.Design.IDesignerHost" />
      <ImplementedInterface Type="System.ComponentModel.Design.IServiceContainer" />
      <ImplementedInterface Type="System.IServiceProvider" />
      <Method Name="EndLoad" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="baseClassName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="successful" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" IsInterface="True" />
      </Method>
      <Method Name="Reload" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Interface>
    <Interface Name="IDesignerLoaderHost2" Type="System.ComponentModel.Design.Serialization.IDesignerLoaderHost2" IsInterface="True">
      <ImplementedInterface Type="System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      <ImplementedInterface Type="System.ComponentModel.Design.IDesignerHost" />
      <ImplementedInterface Type="System.ComponentModel.Design.IServiceContainer" />
      <ImplementedInterface Type="System.IServiceProvider" />
      <Property Name="CanReloadWithErrors" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IgnoreErrorsDuringReload" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
    </Interface>
    <Interface Name="IDesignerLoaderService" Type="System.ComponentModel.Design.Serialization.IDesignerLoaderService" IsInterface="True">
      <Method Name="AddLoadDependency" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="DependentLoadComplete" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="successful" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" IsInterface="True" />
      </Method>
      <Method Name="Reload" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Interface>
    <Interface Name="IDesignerSerializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" IsInterface="True">
      <ImplementedInterface Type="System.IServiceProvider" />
      <Property Name="Context" Type="System.ComponentModel.Design.Serialization.ContextStack" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Properties" Type="System.ComponentModel.PropertyDescriptorCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="AddSerializationProvider" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" IsInterface="True" />
      </Method>
      <Method Name="CreateInstance" Type="System.Object">
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" IsInterface="True" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="addToContainer" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetInstance" Type="System.Object">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetName" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="GetSerializer" Type="System.Object">
        <Parameter Name="objectType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="serializerType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="GetType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo">
        <Parameter Name="typeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="RemoveSerializationProvider" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" IsInterface="True" />
      </Method>
      <Method Name="ReportError" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="errorInformation" Type="System.Object" />
      </Method>
      <Method Name="SetName" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Event Name="ResolveName" Type="System.ComponentModel.Design.Serialization.ResolveNameEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.Serialization.ResolveNameEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="SerializationComplete" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
    </Interface>
    <Interface Name="IDesignerSerializationProvider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" IsInterface="True">
      <Method Name="GetSerializer" Type="System.Object">
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" IsInterface="True" />
        <Parameter Name="currentSerializer" Type="System.Object" />
        <Parameter Name="objectType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="serializerType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Interface>
    <Interface Name="IDesignerSerializationService" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationService" IsInterface="True">
      <Method Name="Deserialize" Type="System.Collections.ICollection" IsInterface="True">
        <Parameter Name="serializationData" Type="System.Object" />
      </Method>
      <Method Name="Serialize" Type="System.Object">
        <Parameter Name="objects" Type="System.Collections.ICollection" IsInterface="True" />
      </Method>
    </Interface>
    <Interface Name="INameCreationService" Type="System.ComponentModel.Design.Serialization.INameCreationService" IsInterface="True">
      <Method Name="CreateName" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="container" Type="System.ComponentModel.IContainer" IsInterface="True" />
        <Parameter Name="dataType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="IsValidName" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ValidateName" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Interface>
    <Class Name="InstanceDescriptor" Type="System.ComponentModel.Design.Serialization.InstanceDescriptor" BaseName="Object" BaseType="System.Object">
      <Property Name="Arguments" Type="System.Collections.ICollection" IsInterface="True" IsReadable="True" />
      <Property Name="IsComplete" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MemberInfo" Type="System.Reflection.MemberInfo" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" IsInterface="True" />
        <Parameter Name="isComplete" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" IsInterface="True" />
      </Constructor>
      <Method Name="Invoke" Type="System.Object" />
    </Class>
    <Struct Name="MemberRelationship" Type="System.ComponentModel.Design.Serialization.MemberRelationship" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
      <Field Name="Empty" Type="System.ComponentModel.Design.Serialization.MemberRelationship" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="IsEmpty" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Member" Type="System.ComponentModel.MemberDescriptor" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Owner" Type="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="owner" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="op_Equality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="left" Type="System.ComponentModel.Design.Serialization.MemberRelationship" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="right" Type="System.ComponentModel.Design.Serialization.MemberRelationship" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="op_Inequality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="left" Type="System.ComponentModel.Design.Serialization.MemberRelationship" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="right" Type="System.ComponentModel.Design.Serialization.MemberRelationship" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Struct>
    <Class Name="MemberRelationshipService" Type="System.ComponentModel.Design.Serialization.MemberRelationshipService" BaseName="Object" BaseType="System.Object">
      <Method Name="get_Item" Type="System.ComponentModel.Design.Serialization.MemberRelationship" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.ComponentModel.Design.Serialization.MemberRelationship" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="get_Item" Type="System.ComponentModel.Design.Serialization.MemberRelationship" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sourceOwner" Type="System.Object" />
        <Parameter Name="sourceMember" Type="System.ComponentModel.MemberDescriptor" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sourceOwner" Type="System.Object" />
        <Parameter Name="sourceMember" Type="System.ComponentModel.MemberDescriptor" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.ComponentModel.Design.Serialization.MemberRelationship" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SupportsRelationship" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="relationship" Type="System.ComponentModel.Design.Serialization.MemberRelationship" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="ResolveNameEventArgs" Type="System.ComponentModel.Design.Serialization.ResolveNameEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Value" Type="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="ResolveNameEventHandler" Type="System.ComponentModel.Design.Serialization.ResolveNameEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.Serialization.ResolveNameEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.Serialization.ResolveNameEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="RootDesignerSerializerAttribute" Type="System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Reloadable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SerializerBaseTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SerializerTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="TypeId" Type="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="serializerTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="baseSerializerTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="reloadable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="serializerType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="baseSerializerType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="reloadable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="serializerTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="baseSerializerType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="reloadable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="SerializationStore" Type="System.ComponentModel.Design.Serialization.SerializationStore" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Errors" Type="System.Collections.ICollection" IsInterface="True" IsReadable="True" />
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Save" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="stream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.Configuration">
    <Class Name="ApplicationScopedSettingAttribute" Type="System.Configuration.ApplicationScopedSettingAttribute" BaseName="SettingAttribute" BaseType="System.Configuration.SettingAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
    </Class>
    <Class Name="ApplicationSettingsBase" Type="System.Configuration.ApplicationSettingsBase" BaseName="SettingsBase" BaseType="System.Configuration.SettingsBase">
      <ImplementedInterface Type="System.ComponentModel.INotifyPropertyChanged" />
      <Property Name="Context" Type="System.Configuration.SettingsContext" BaseName="Hashtable" BaseType="System.Collections.Hashtable" IsReadable="True" />
      <Property Name="Properties" Type="System.Configuration.SettingsPropertyCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="PropertyValues" Type="System.Configuration.SettingsPropertyValueCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Providers" Type="System.Configuration.SettingsProviderCollection" BaseName="ProviderCollection" BaseType="System.Configuration.Provider.ProviderCollection" IsReadable="True" />
      <Property Name="SettingsKey" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Method Name="get_Item" Type="System.Object">
        <Parameter Name="propertyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="propertyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="GetPreviousVersion" Type="System.Object">
        <Parameter Name="propertyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Reload" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Reset" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Save" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Upgrade" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Event Name="PropertyChanged" Type="System.ComponentModel.PropertyChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="SettingChanging" Type="System.Configuration.SettingChangingEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingChangingEventArgs" BaseName="CancelEventArgs" BaseType="System.ComponentModel.CancelEventArgs" />
      </Event>
      <Event Name="SettingsLoaded" Type="System.Configuration.SettingsLoadedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingsLoadedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="SettingsSaving" Type="System.Configuration.SettingsSavingEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Class Name="ApplicationSettingsGroup" Type="System.Configuration.ApplicationSettingsGroup" BaseName="ConfigurationSectionGroup" BaseType="System.Configuration.ConfigurationSectionGroup" />
    <Class Name="AppSettingsReader" Type="System.Configuration.AppSettingsReader" BaseName="Object" BaseType="System.Object">
      <Method Name="GetValue" Type="System.Object">
        <Parameter Name="key" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Class>
    <Class Name="ClientSettingsSection" Type="System.Configuration.ClientSettingsSection" BaseName="ConfigurationSection" BaseType="System.Configuration.ConfigurationSection">
      <Property Name="Settings" Type="System.Configuration.SettingElementCollection" BaseName="ConfigurationElementCollection" BaseType="System.Configuration.ConfigurationElementCollection" IsReadable="True" />
    </Class>
    <Class Name="ConfigurationException" Type="System.Configuration.ConfigurationException" BaseName="SystemException" BaseType="System.SystemException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Property Name="BareMessage" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Filename" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Line" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Message" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="inner" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="node" Type="System.Xml.XmlNode" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="inner" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="node" Type="System.Xml.XmlNode" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="filename" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="line" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="inner" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="filename" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="line" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="GetObjectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetXmlNodeFilename" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="node" Type="System.Xml.XmlNode" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetXmlNodeLineNumber" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="node" Type="System.Xml.XmlNode" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="ConfigurationSettings" Type="System.Configuration.ConfigurationSettings" BaseName="Object" BaseType="System.Object">
      <Property Name="AppSettings" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" IsReadable="True" IsStatic="True" />
      <Method Name="GetConfig" Type="System.Object" IsStatic="True">
        <Parameter Name="sectionName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="ConfigXmlDocument" Type="System.Configuration.ConfigXmlDocument" BaseName="XmlDocument" BaseType="System.Xml.XmlDocument">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Xml.XPath.IXPathNavigable" />
      <ImplementedInterface Type="System.Configuration.Internal.IConfigErrorInfo" />
      <Property Name="Filename" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="LineNumber" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="CreateAttribute" Type="System.Xml.XmlAttribute" BaseName="XmlNode" BaseType="System.Xml.XmlNode">
        <Parameter Name="prefix" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="localName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="namespaceUri" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateCDataSection" Type="System.Xml.XmlCDataSection" BaseName="XmlCharacterData" BaseType="System.Xml.XmlCharacterData">
        <Parameter Name="data" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateComment" Type="System.Xml.XmlComment" BaseName="XmlCharacterData" BaseType="System.Xml.XmlCharacterData">
        <Parameter Name="data" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateElement" Type="System.Xml.XmlElement" BaseName="XmlLinkedNode" BaseType="System.Xml.XmlLinkedNode">
        <Parameter Name="prefix" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="localName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="namespaceUri" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateSignificantWhitespace" Type="System.Xml.XmlSignificantWhitespace" BaseName="XmlCharacterData" BaseType="System.Xml.XmlCharacterData">
        <Parameter Name="data" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateTextNode" Type="System.Xml.XmlText" BaseName="XmlCharacterData" BaseType="System.Xml.XmlCharacterData">
        <Parameter Name="text" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateWhitespace" Type="System.Xml.XmlWhitespace" BaseName="XmlCharacterData" BaseType="System.Xml.XmlCharacterData">
        <Parameter Name="data" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Load" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="filename" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="LoadSingleElement" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="filename" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="sourceReader" Type="System.Xml.XmlTextReader" BaseName="XmlReader" BaseType="System.Xml.XmlReader" />
      </Method>
    </Class>
    <Class Name="DefaultSettingValueAttribute" Type="System.Configuration.DefaultSettingValueAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Value" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="DictionarySectionHandler" Type="System.Configuration.DictionarySectionHandler" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Configuration.IConfigurationSectionHandler" />
      <Method Name="Create" Type="System.Object">
        <Parameter Name="parent" Type="System.Object" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="section" Type="System.Xml.XmlNode" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Interface Name="IApplicationSettingsProvider" Type="System.Configuration.IApplicationSettingsProvider" IsInterface="True">
      <Method Name="GetPreviousVersion" Type="System.Configuration.SettingsPropertyValue" BaseName="Object" BaseType="System.Object">
        <Parameter Name="context" Type="System.Configuration.SettingsContext" BaseName="Hashtable" BaseType="System.Collections.Hashtable" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Reset" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.Configuration.SettingsContext" BaseName="Hashtable" BaseType="System.Collections.Hashtable" />
      </Method>
      <Method Name="Upgrade" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.Configuration.SettingsContext" BaseName="Hashtable" BaseType="System.Collections.Hashtable" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Interface>
    <Interface Name="IConfigurationSectionHandler" Type="System.Configuration.IConfigurationSectionHandler" IsInterface="True">
      <Method Name="Create" Type="System.Object">
        <Parameter Name="parent" Type="System.Object" />
        <Parameter Name="configContext" Type="System.Object" />
        <Parameter Name="section" Type="System.Xml.XmlNode" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Interface>
    <Interface Name="IConfigurationSystem" Type="System.Configuration.IConfigurationSystem" IsInterface="True">
      <Method Name="GetConfig" Type="System.Object">
        <Parameter Name="configKey" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Init" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Interface>
    <Class Name="IdnElement" Type="System.Configuration.IdnElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="Enabled" Type="System.UriIdnScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="IgnoreSectionHandler" Type="System.Configuration.IgnoreSectionHandler" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Configuration.IConfigurationSectionHandler" />
      <Method Name="Create" Type="System.Object">
        <Parameter Name="parent" Type="System.Object" />
        <Parameter Name="configContext" Type="System.Object" />
        <Parameter Name="section" Type="System.Xml.XmlNode" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Interface Name="IPersistComponentSettings" Type="System.Configuration.IPersistComponentSettings" IsInterface="True">
      <Property Name="SaveSettings" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="SettingsKey" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Method Name="LoadComponentSettings" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ResetComponentSettings" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="SaveComponentSettings" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Interface>
    <Class Name="IriParsingElement" Type="System.Configuration.IriParsingElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="Enabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
    </Class>
    <Interface Name="ISettingsProviderService" Type="System.Configuration.ISettingsProviderService" IsInterface="True">
      <Method Name="GetSettingsProvider" Type="System.Configuration.SettingsProvider" BaseName="ProviderBase" BaseType="System.Configuration.Provider.ProviderBase">
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Interface>
    <Class Name="LocalFileSettingsProvider" Type="System.Configuration.LocalFileSettingsProvider" BaseName="SettingsProvider" BaseType="System.Configuration.SettingsProvider">
      <ImplementedInterface Type="System.Configuration.IApplicationSettingsProvider" />
      <Property Name="ApplicationName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Method Name="GetPreviousVersion" Type="System.Configuration.SettingsPropertyValue" BaseName="Object" BaseType="System.Object">
        <Parameter Name="context" Type="System.Configuration.SettingsContext" BaseName="Hashtable" BaseType="System.Collections.Hashtable" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetPropertyValues" Type="System.Configuration.SettingsPropertyValueCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="context" Type="System.Configuration.SettingsContext" BaseName="Hashtable" BaseType="System.Collections.Hashtable" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Initialize" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="values" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" />
      </Method>
      <Method Name="Reset" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.Configuration.SettingsContext" BaseName="Hashtable" BaseType="System.Collections.Hashtable" />
      </Method>
      <Method Name="SetPropertyValues" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.Configuration.SettingsContext" BaseName="Hashtable" BaseType="System.Collections.Hashtable" />
        <Parameter Name="values" Type="System.Configuration.SettingsPropertyValueCollection" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Upgrade" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.Configuration.SettingsContext" BaseName="Hashtable" BaseType="System.Collections.Hashtable" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="NameValueFileSectionHandler" Type="System.Configuration.NameValueFileSectionHandler" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Configuration.IConfigurationSectionHandler" />
      <Method Name="Create" Type="System.Object">
        <Parameter Name="parent" Type="System.Object" />
        <Parameter Name="configContext" Type="System.Object" />
        <Parameter Name="section" Type="System.Xml.XmlNode" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="NameValueSectionHandler" Type="System.Configuration.NameValueSectionHandler" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Configuration.IConfigurationSectionHandler" />
      <Method Name="Create" Type="System.Object">
        <Parameter Name="parent" Type="System.Object" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="section" Type="System.Xml.XmlNode" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="NoSettingsVersionUpgradeAttribute" Type="System.Configuration.NoSettingsVersionUpgradeAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
    </Class>
    <Class Name="SchemeSettingElement" Type="System.Configuration.SchemeSettingElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="GenericUriParserOptions" Type="System.GenericUriParserOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Class Name="SchemeSettingElementCollection" Type="System.Configuration.SchemeSettingElementCollection" BaseName="ConfigurationElementCollection" BaseType="System.Configuration.ConfigurationElementCollection">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="CollectionType" Type="System.Configuration.ConfigurationElementCollectionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Method Name="get_Item" Type="System.Configuration.SchemeSettingElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="get_Item" Type="System.Configuration.SchemeSettingElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="element" Type="System.Configuration.SchemeSettingElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
    </Class>
    <Class Name="SettingAttribute" Type="System.Configuration.SettingAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
    </Class>
    <Class Name="SettingChangingEventArgs" Type="System.Configuration.SettingChangingEventArgs" BaseName="CancelEventArgs" BaseType="System.ComponentModel.CancelEventArgs">
      <Property Name="NewValue" Type="System.Object" IsReadable="True" />
      <Property Name="SettingClass" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SettingKey" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SettingName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="settingName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="settingClass" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="settingKey" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
        <Parameter Name="cancel" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="SettingChangingEventHandler" Type="System.Configuration.SettingChangingEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingChangingEventArgs" BaseName="CancelEventArgs" BaseType="System.ComponentModel.CancelEventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingChangingEventArgs" BaseName="CancelEventArgs" BaseType="System.ComponentModel.CancelEventArgs" />
      </Method>
    </Class>
    <Class Name="SettingElement" Type="System.Configuration.SettingElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="SerializeAs" Type="System.Configuration.SettingsSerializeAs" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="Value" Type="System.Configuration.SettingValueElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="serializeAs" Type="System.Configuration.SettingsSerializeAs" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="settings" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="SettingElementCollection" Type="System.Configuration.SettingElementCollection" BaseName="ConfigurationElementCollection" BaseType="System.Configuration.ConfigurationElementCollection">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="CollectionType" Type="System.Configuration.ConfigurationElementCollectionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="element" Type="System.Configuration.SettingElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Get" Type="System.Configuration.SettingElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
        <Parameter Name="elementKey" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="element" Type="System.Configuration.SettingElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
    </Class>
    <Class Name="SettingsAttributeDictionary" Type="System.Configuration.SettingsAttributeDictionary" BaseName="Hashtable" BaseType="System.Collections.Hashtable">
      <ImplementedInterface Type="System.Collections.IDictionary" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.Serialization.IDeserializationCallback" />
      <ImplementedInterface Type="System.ICloneable" />
      <Constructor>
        <Parameter Name="attributes" Type="System.Configuration.SettingsAttributeDictionary" BaseName="Hashtable" BaseType="System.Collections.Hashtable" />
      </Constructor>
    </Class>
    <Class Name="SettingsBase" Type="System.Configuration.SettingsBase" BaseName="Object" BaseType="System.Object">
      <Property Name="Context" Type="System.Configuration.SettingsContext" BaseName="Hashtable" BaseType="System.Collections.Hashtable" IsReadable="True" />
      <Property Name="IsSynchronized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Properties" Type="System.Configuration.SettingsPropertyCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="PropertyValues" Type="System.Configuration.SettingsPropertyValueCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Providers" Type="System.Configuration.SettingsProviderCollection" BaseName="ProviderCollection" BaseType="System.Configuration.Provider.ProviderCollection" IsReadable="True" />
      <Method Name="get_Item" Type="System.Object">
        <Parameter Name="propertyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="propertyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="Initialize" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.Configuration.SettingsContext" BaseName="Hashtable" BaseType="System.Collections.Hashtable" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="providers" Type="System.Configuration.SettingsProviderCollection" BaseName="ProviderCollection" BaseType="System.Configuration.Provider.ProviderCollection" />
      </Method>
      <Method Name="Save" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Synchronized" Type="System.Configuration.SettingsBase" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="settingsBase" Type="System.Configuration.SettingsBase" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="SettingsContext" Type="System.Configuration.SettingsContext" BaseName="Hashtable" BaseType="System.Collections.Hashtable">
      <ImplementedInterface Type="System.Collections.IDictionary" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.Serialization.IDeserializationCallback" />
      <ImplementedInterface Type="System.ICloneable" />
    </Class>
    <Class Name="SettingsDescriptionAttribute" Type="System.Configuration.SettingsDescriptionAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Description" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="description" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="SettingsGroupDescriptionAttribute" Type="System.Configuration.SettingsGroupDescriptionAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Description" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="description" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="SettingsGroupNameAttribute" Type="System.Configuration.SettingsGroupNameAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="GroupName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="groupName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="SettingsLoadedEventArgs" Type="System.Configuration.SettingsLoadedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Provider" Type="System.Configuration.SettingsProvider" BaseName="ProviderBase" BaseType="System.Configuration.Provider.ProviderBase" IsReadable="True" />
      <Constructor>
        <Parameter Name="provider" Type="System.Configuration.SettingsProvider" BaseName="ProviderBase" BaseType="System.Configuration.Provider.ProviderBase" />
      </Constructor>
    </Class>
    <Class Name="SettingsLoadedEventHandler" Type="System.Configuration.SettingsLoadedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingsLoadedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingsLoadedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Enumeration Name="SettingsManageability" Type="System.Configuration.SettingsManageability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Roaming" Type="System.Configuration.SettingsManageability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="SettingsManageabilityAttribute" Type="System.Configuration.SettingsManageabilityAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Manageability" Type="System.Configuration.SettingsManageability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="manageability" Type="System.Configuration.SettingsManageability" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
    </Class>
    <Class Name="SettingsProperty" Type="System.Configuration.SettingsProperty" BaseName="Object" BaseType="System.Object">
      <Property Name="Attributes" Type="System.Configuration.SettingsAttributeDictionary" BaseName="Hashtable" BaseType="System.Collections.Hashtable" IsReadable="True" />
      <Property Name="DefaultValue" Type="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="IsReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="PropertyType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" IsWritable="True" />
      <Property Name="Provider" Type="System.Configuration.SettingsProvider" BaseName="ProviderBase" BaseType="System.Configuration.Provider.ProviderBase" IsReadable="True" IsWritable="True" />
      <Property Name="SerializeAs" Type="System.Configuration.SettingsSerializeAs" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="ThrowOnErrorDeserializing" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ThrowOnErrorSerializing" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
        <Parameter Name="provider" Type="System.Configuration.SettingsProvider" BaseName="ProviderBase" BaseType="System.Configuration.Provider.ProviderBase" />
        <Parameter Name="isReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="serializeAs" Type="System.Configuration.SettingsSerializeAs" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="attributes" Type="System.Configuration.SettingsAttributeDictionary" BaseName="Hashtable" BaseType="System.Collections.Hashtable" />
        <Parameter Name="throwOnErrorDeserializing" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="throwOnErrorSerializing" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="propertyToCopy" Type="System.Configuration.SettingsProperty" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="SettingsPropertyCollection" Type="System.Configuration.SettingsPropertyCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSynchronized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SyncRoot" Type="System.Object" IsReadable="True" />
      <Method Name="get_Item" Type="System.Configuration.SettingsProperty" BaseName="Object" BaseType="System.Object">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Clone" Type="System.Object" />
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Array" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SetReadOnly" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="SettingsPropertyIsReadOnlyException" Type="System.Configuration.SettingsPropertyIsReadOnlyException" BaseName="Exception" BaseType="System.Exception">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="SettingsPropertyNotFoundException" Type="System.Configuration.SettingsPropertyNotFoundException" BaseName="Exception" BaseType="System.Exception">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="SettingsPropertyValue" Type="System.Configuration.SettingsPropertyValue" BaseName="Object" BaseType="System.Object">
      <Property Name="Deserialized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IsDirty" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Property" Type="System.Configuration.SettingsProperty" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="PropertyValue" Type="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="SerializedValue" Type="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="UsingDefaultValue" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="SettingsPropertyValueCollection" Type="System.Configuration.SettingsPropertyValueCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSynchronized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SyncRoot" Type="System.Object" IsReadable="True" />
      <Method Name="get_Item" Type="System.Configuration.SettingsPropertyValue" BaseName="Object" BaseType="System.Object">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="property" Type="System.Configuration.SettingsPropertyValue" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Clone" Type="System.Object" />
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Array" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SetReadOnly" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="SettingsPropertyWrongTypeException" Type="System.Configuration.SettingsPropertyWrongTypeException" BaseName="Exception" BaseType="System.Exception">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="SettingsProvider" Type="System.Configuration.SettingsProvider" BaseName="ProviderBase" BaseType="System.Configuration.Provider.ProviderBase">
      <Property Name="ApplicationName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Method Name="GetPropertyValues" Type="System.Configuration.SettingsPropertyValueCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="context" Type="System.Configuration.SettingsContext" BaseName="Hashtable" BaseType="System.Collections.Hashtable" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyCollection" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SetPropertyValues" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.Configuration.SettingsContext" BaseName="Hashtable" BaseType="System.Collections.Hashtable" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyValueCollection" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="SettingsProviderAttribute" Type="System.Configuration.SettingsProviderAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="ProviderTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="providerTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="providerType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
    </Class>
    <Class Name="SettingsProviderCollection" Type="System.Configuration.SettingsProviderCollection" BaseName="ProviderCollection" BaseType="System.Configuration.Provider.ProviderCollection">
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <Method Name="get_Item" Type="System.Configuration.SettingsProvider" BaseName="ProviderBase" BaseType="System.Configuration.Provider.ProviderBase">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="provider" Type="System.Configuration.Provider.ProviderBase" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="SettingsSavingEventHandler" Type="System.Configuration.SettingsSavingEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Enumeration Name="SettingsSerializeAs" Type="System.Configuration.SettingsSerializeAs" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Binary" Type="System.Configuration.SettingsSerializeAs" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="ProviderSpecific" Type="System.Configuration.SettingsSerializeAs" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="String" Type="System.Configuration.SettingsSerializeAs" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Xml" Type="System.Configuration.SettingsSerializeAs" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="SettingsSerializeAsAttribute" Type="System.Configuration.SettingsSerializeAsAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="SerializeAs" Type="System.Configuration.SettingsSerializeAs" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="serializeAs" Type="System.Configuration.SettingsSerializeAs" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
    </Class>
    <Class Name="SettingValueElement" Type="System.Configuration.SettingValueElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="ValueXml" Type="System.Xml.XmlNode" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="settingValue" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="SingleTagSectionHandler" Type="System.Configuration.SingleTagSectionHandler" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Configuration.IConfigurationSectionHandler" />
      <Method Name="Create" Type="System.Object">
        <Parameter Name="parent" Type="System.Object" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="section" Type="System.Xml.XmlNode" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Enumeration Name="SpecialSetting" Type="System.Configuration.SpecialSetting" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="ConnectionString" Type="System.Configuration.SpecialSetting" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="WebServiceUrl" Type="System.Configuration.SpecialSetting" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="SpecialSettingAttribute" Type="System.Configuration.SpecialSettingAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="SpecialSetting" Type="System.Configuration.SpecialSetting" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="specialSetting" Type="System.Configuration.SpecialSetting" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
    </Class>
    <Class Name="UriSection" Type="System.Configuration.UriSection" BaseName="ConfigurationSection" BaseType="System.Configuration.ConfigurationSection">
      <Property Name="Idn" Type="System.Configuration.IdnElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" IsReadable="True" />
      <Property Name="IriParsing" Type="System.Configuration.IriParsingElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" IsReadable="True" />
      <Property Name="SchemeSettings" Type="System.Configuration.SchemeSettingElementCollection" BaseName="ConfigurationElementCollection" BaseType="System.Configuration.ConfigurationElementCollection" IsReadable="True" />
    </Class>
    <Class Name="UserScopedSettingAttribute" Type="System.Configuration.UserScopedSettingAttribute" BaseName="SettingAttribute" BaseType="System.Configuration.SettingAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
    </Class>
    <Class Name="UserSettingsGroup" Type="System.Configuration.UserSettingsGroup" BaseName="ConfigurationSectionGroup" BaseType="System.Configuration.ConfigurationSectionGroup" />
  </Namespace>
  <Namespace Name="System.Diagnostics">
    <Class Name="BooleanSwitch" Type="System.Diagnostics.BooleanSwitch" BaseName="Switch" BaseType="System.Diagnostics.Switch">
      <Property Name="Enabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="displayName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="description" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="displayName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="description" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="defaultSwitchValue" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="ConsoleTraceListener" Type="System.Diagnostics.ConsoleTraceListener" BaseName="TextWriterTraceListener" BaseType="System.Diagnostics.TextWriterTraceListener">
      <ImplementedInterface Type="System.IDisposable" />
      <Constructor>
        <Parameter Name="useErrorStream" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="CorrelationManager" Type="System.Diagnostics.CorrelationManager" BaseName="Object" BaseType="System.Object">
      <Property Name="ActivityId" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="LogicalOperationStack" Type="System.Collections.Stack" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="StartLogicalOperation" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="operationId" Type="System.Object" />
      </Method>
      <Method Name="StartLogicalOperation" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="StopLogicalOperation" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="CounterCreationData" Type="System.Diagnostics.CounterCreationData" BaseName="Object" BaseType="System.Object">
      <Property Name="CounterHelp" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="CounterName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="CounterType" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="counterName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="counterHelp" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="counterType" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
    </Class>
    <Class Name="CounterCreationDataCollection" Type="System.Diagnostics.CounterCreationDataCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.Diagnostics.CounterCreationData" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Diagnostics.CounterCreationData" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Constructor>
        <Parameter Name="value" Type="System.Diagnostics.CounterCreationDataCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Diagnostics.CounterCreationData[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.CounterCreationData" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.CounterCreationData" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.CounterCreationData[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.CounterCreationData" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.CounterCreationDataCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.CounterCreationData" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Diagnostics.CounterCreationData[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.CounterCreationData" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.CounterCreationData" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Diagnostics.CounterCreationData" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.CounterCreationData" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Struct Name="CounterSample" Type="System.Diagnostics.CounterSample" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
      <Field Name="Empty" Type="System.Diagnostics.CounterSample" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" IsWritable="True" />
      <Property Name="BaseValue" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CounterFrequency" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CounterTimeStamp" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CounterType" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="RawValue" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SystemFrequency" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TimeStamp" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TimeStamp100nSec" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="rawValue" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="baseValue" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="counterFrequency" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="systemFrequency" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="timeStamp" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="timeStamp100nSec" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="counterType" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="rawValue" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="baseValue" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="counterFrequency" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="systemFrequency" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="timeStamp" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="timeStamp100nSec" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="counterType" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="counterTimeStamp" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Calculate" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="counterSample" Type="System.Diagnostics.CounterSample" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Calculate" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="counterSample" Type="System.Diagnostics.CounterSample" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="nextCounterSample" Type="System.Diagnostics.CounterSample" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="o" Type="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sample" Type="System.Diagnostics.CounterSample" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="op_Equality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="a" Type="System.Diagnostics.CounterSample" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="b" Type="System.Diagnostics.CounterSample" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="op_Inequality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="a" Type="System.Diagnostics.CounterSample" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="b" Type="System.Diagnostics.CounterSample" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Struct>
    <Class Name="CounterSampleCalculator" Type="System.Diagnostics.CounterSampleCalculator" BaseName="Object" BaseType="System.Object">
      <Method Name="ComputeCounterValue" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="newSample" Type="System.Diagnostics.CounterSample" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ComputeCounterValue" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="oldSample" Type="System.Diagnostics.CounterSample" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="newSample" Type="System.Diagnostics.CounterSample" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="DataReceivedEventArgs" Type="System.Diagnostics.DataReceivedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Data" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Class Name="DataReceivedEventHandler" Type="System.Diagnostics.DataReceivedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Diagnostics.DataReceivedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Diagnostics.DataReceivedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="Debug" Type="System.Diagnostics.Debug" BaseName="Object" BaseType="System.Object">
      <Property Name="AutoFlush" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="IndentLevel" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="IndentSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="Listeners" Type="System.Diagnostics.TraceListenerCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Method Name="Assert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Assert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Assert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="detailMessage" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Assert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="detailMessageFormat" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" />
      <Method Name="Fail" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Fail" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="detailMessage" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Flush" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" />
      <Method Name="Indent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" />
      <Method Name="Print" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Print" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="Unindent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" />
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteIf" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteIf" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="WriteIf" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteIf" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="WriteLineIf" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLineIf" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="WriteLineIf" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLineIf" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="DefaultTraceListener" Type="System.Diagnostics.DefaultTraceListener" BaseName="TraceListener" BaseType="System.Diagnostics.TraceListener">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="AssertUiEnabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="LogFileName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Method Name="Fail" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Fail" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="detailMessage" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="DelimitedListTraceListener" Type="System.Diagnostics.DelimitedListTraceListener" BaseName="TextWriterTraceListener" BaseType="System.Diagnostics.TextWriterTraceListener">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Delimiter" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="stream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="stream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="TraceData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="data" Type="System.Object" />
      </Method>
      <Method Name="TraceData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="data" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="TraceEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="TraceEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="DiagnosticsConfigurationHandler" Type="System.Diagnostics.DiagnosticsConfigurationHandler" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Configuration.IConfigurationSectionHandler" />
      <Method Name="Create" Type="System.Object">
        <Parameter Name="parent" Type="System.Object" />
        <Parameter Name="configContext" Type="System.Object" />
        <Parameter Name="section" Type="System.Xml.XmlNode" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="EntryWrittenEventArgs" Type="System.Diagnostics.EntryWrittenEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Entry" Type="System.Diagnostics.EventLogEntry" BaseName="Component" BaseType="System.ComponentModel.Component" IsReadable="True" />
      <Constructor>
        <Parameter Name="entry" Type="System.Diagnostics.EventLogEntry" BaseName="Component" BaseType="System.ComponentModel.Component" />
      </Constructor>
    </Class>
    <Class Name="EntryWrittenEventHandler" Type="System.Diagnostics.EntryWrittenEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Diagnostics.EntryWrittenEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Diagnostics.EntryWrittenEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="EventInstance" Type="System.Diagnostics.EventInstance" BaseName="Object" BaseType="System.Object">
      <Property Name="CategoryId" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="EntryType" Type="System.Diagnostics.EventLogEntryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="InstanceId" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="instanceId" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="categoryId" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="instanceId" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="categoryId" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="entryType" Type="System.Diagnostics.EventLogEntryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
    </Class>
    <Class Name="EventLog" Type="System.Diagnostics.EventLog" BaseName="Component" BaseType="System.ComponentModel.Component">
      <ImplementedInterface Type="System.ComponentModel.IComponent" />
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.ComponentModel.ISupportInitialize" />
      <Property Name="EnableRaisingEvents" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Entries" Type="System.Diagnostics.EventLogEntryCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Log" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="LogDisplayName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="MachineName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="MaximumKilobytes" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="MinimumRetentionDays" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="OverflowAction" Type="System.Diagnostics.OverflowAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Source" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="SynchronizingObject" Type="System.ComponentModel.ISynchronizeInvoke" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="logName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="logName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="logName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="BeginInit" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="CreateEventSource" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="logName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateEventSource" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="logName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateEventSource" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="sourceData" Type="System.Diagnostics.EventSourceCreationData" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Delete" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="logName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Delete" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="logName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DeleteEventSource" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DeleteEventSource" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="EndInit" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Exists" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="logName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Exists" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="logName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetEventLogs" Type="System.Diagnostics.EventLog[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.EventLog" IsStatic="True" />
      <Method Name="GetEventLogs" Type="System.Diagnostics.EventLog[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.EventLog" IsStatic="True">
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="LogNameFromSourceName" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ModifyOverflowPolicy" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="action" Type="System.Diagnostics.OverflowAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="retentionDays" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="RegisterDisplayName" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="resourceFile" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="resourceId" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SourceExists" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SourceExists" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteEntry" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteEntry" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteEntry" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="WriteEntry" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="WriteEntry" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="eventID" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WriteEntry" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="eventID" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WriteEntry" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="eventID" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="category" Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WriteEntry" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="eventID" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="category" Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WriteEntry" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="eventID" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="category" Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="rawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="WriteEntry" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="eventID" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="category" Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="rawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="WriteEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="values" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="WriteEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="values" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="WriteEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="values" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="WriteEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="values" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Event Name="EntryWritten" Type="System.Diagnostics.EntryWrittenEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Diagnostics.EntryWrittenEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Class Name="EventLogEntry" Type="System.Diagnostics.EventLogEntry" BaseName="Component" BaseType="System.ComponentModel.Component">
      <ImplementedInterface Type="System.ComponentModel.IComponent" />
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Property Name="Category" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="CategoryNumber" Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" />
      <Property Name="EntryType" Type="System.Diagnostics.EventLogEntryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="EventID" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="InstanceId" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MachineName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Message" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ReplacementStrings" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" IsReadable="True" />
      <Property Name="Source" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="TimeGenerated" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TimeWritten" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="UserName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="otherEntry" Type="System.Diagnostics.EventLogEntry" BaseName="Component" BaseType="System.ComponentModel.Component" />
      </Method>
    </Class>
    <Class Name="EventLogEntryCollection" Type="System.Diagnostics.EventLogEntryCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.Diagnostics.EventLogEntry" BaseName="Component" BaseType="System.ComponentModel.Component">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="entries" Type="System.Diagnostics.EventLogEntry[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.EventLogEntry" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
    </Class>
    <Enumeration Name="EventLogEntryType" Type="System.Diagnostics.EventLogEntryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Error" Type="System.Diagnostics.EventLogEntryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="FailureAudit" Type="System.Diagnostics.EventLogEntryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="Information" Type="System.Diagnostics.EventLogEntryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="SuccessAudit" Type="System.Diagnostics.EventLogEntryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="Warning" Type="System.Diagnostics.EventLogEntryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Class Name="EventLogPermission" Type="System.Diagnostics.EventLogPermission" BaseName="ResourcePermissionBase" BaseType="System.Security.Permissions.ResourcePermissionBase">
      <ImplementedInterface Type="System.Security.IPermission" />
      <ImplementedInterface Type="System.Security.ISecurityEncodable" />
      <ImplementedInterface Type="System.Security.IStackWalk" />
      <ImplementedInterface Type="System.Security.Permissions.IUnrestrictedPermission" />
      <Property Name="PermissionEntries" Type="System.Diagnostics.EventLogPermissionEntryCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Constructor>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="permissionAccess" Type="System.Diagnostics.EventLogPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="permissionAccessEntries" Type="System.Diagnostics.EventLogPermissionEntry[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.EventLogPermissionEntry" />
      </Constructor>
    </Class>
    <Enumeration Name="EventLogPermissionAccess" Type="System.Diagnostics.EventLogPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Administer" Type="System.Diagnostics.EventLogPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="48" />
      <Field Name="Audit" Type="System.Diagnostics.EventLogPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10" />
      <Field Name="Browse" Type="System.Diagnostics.EventLogPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Instrument" Type="System.Diagnostics.EventLogPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="None" Type="System.Diagnostics.EventLogPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Write" Type="System.Diagnostics.EventLogPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
    </Enumeration>
    <Class Name="EventLogPermissionAttribute" Type="System.Diagnostics.EventLogPermissionAttribute" BaseName="CodeAccessSecurityAttribute" BaseType="System.Security.Permissions.CodeAccessSecurityAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="MachineName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="PermissionAccess" Type="System.Diagnostics.EventLogPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="CreatePermission" Type="System.Security.IPermission" IsInterface="True" />
    </Class>
    <Class Name="EventLogPermissionEntry" Type="System.Diagnostics.EventLogPermissionEntry" BaseName="Object" BaseType="System.Object">
      <Property Name="MachineName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="PermissionAccess" Type="System.Diagnostics.EventLogPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="permissionAccess" Type="System.Diagnostics.EventLogPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="EventLogPermissionEntryCollection" Type="System.Diagnostics.EventLogPermissionEntryCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.Diagnostics.EventLogPermissionEntry" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Diagnostics.EventLogPermissionEntry" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.EventLogPermissionEntry" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.EventLogPermissionEntry[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.EventLogPermissionEntry" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.EventLogPermissionEntryCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.EventLogPermissionEntry" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Diagnostics.EventLogPermissionEntry[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.EventLogPermissionEntry" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.EventLogPermissionEntry" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Diagnostics.EventLogPermissionEntry" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.EventLogPermissionEntry" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="EventLogTraceListener" Type="System.Diagnostics.EventLogTraceListener" BaseName="TraceListener" BaseType="System.Diagnostics.TraceListener">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="EventLog" Type="System.Diagnostics.EventLog" BaseName="Component" BaseType="System.ComponentModel.Component" IsReadable="True" IsWritable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="eventLog" Type="System.Diagnostics.EventLog" BaseName="Component" BaseType="System.ComponentModel.Component" />
      </Constructor>
      <Constructor>
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="TraceData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="data" Type="System.Object" />
      </Method>
      <Method Name="TraceData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="data" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="TraceEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="TraceEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="EventSourceCreationData" Type="System.Diagnostics.EventSourceCreationData" BaseName="Object" BaseType="System.Object">
      <Property Name="CategoryCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="CategoryResourceFile" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="LogName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="MachineName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="MessageResourceFile" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ParameterResourceFile" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Source" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="logName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="EventTypeFilter" Type="System.Diagnostics.EventTypeFilter" BaseName="TraceFilter" BaseType="System.Diagnostics.TraceFilter">
      <Property Name="EventType" Type="System.Diagnostics.SourceLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="level" Type="System.Diagnostics.SourceLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="ShouldTrace" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="cache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="formatOrMessage" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
        <Parameter Name="data1" Type="System.Object" />
        <Parameter Name="data" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
    </Class>
    <Class Name="FileVersionInfo" Type="System.Diagnostics.FileVersionInfo" BaseName="Object" BaseType="System.Object">
      <Property Name="Comments" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="CompanyName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="FileBuildPart" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="FileDescription" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="FileMajorPart" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="FileMinorPart" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="FileName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="FilePrivatePart" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="FileVersion" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="InternalName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="IsDebug" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsPatched" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsPreRelease" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsPrivateBuild" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSpecialBuild" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Language" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="LegalCopyright" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="LegalTrademarks" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="OriginalFilename" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="PrivateBuild" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ProductBuildPart" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ProductMajorPart" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ProductMinorPart" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ProductName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ProductPrivatePart" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ProductVersion" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SpecialBuild" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="GetVersionInfo" Type="System.Diagnostics.FileVersionInfo" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Interface Name="ICollectData" Type="System.Diagnostics.ICollectData" IsInterface="True">
      <Method Name="CloseData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="CollectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="valueName" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="data" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="totalBytes" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="res" Type="System.IntPtr&amp;" IsByRef="True" ElementType="System.IntPtr" />
      </Method>
    </Interface>
    <Class Name="InstanceData" Type="System.Diagnostics.InstanceData" BaseName="Object" BaseType="System.Object">
      <Property Name="InstanceName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="RawValue" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Sample" Type="System.Diagnostics.CounterSample" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="instanceName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="sample" Type="System.Diagnostics.CounterSample" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="InstanceDataCollection" Type="System.Diagnostics.InstanceDataCollection" BaseName="DictionaryBase" BaseType="System.Collections.DictionaryBase">
      <ImplementedInterface Type="System.Collections.IDictionary" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="CounterName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Keys" Type="System.Collections.ICollection" IsInterface="True" IsReadable="True" />
      <Property Name="Values" Type="System.Collections.ICollection" IsInterface="True" IsReadable="True" />
      <Method Name="get_Item" Type="System.Diagnostics.InstanceData" BaseName="Object" BaseType="System.Object">
        <Parameter Name="instanceName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Constructor>
        <Parameter Name="counterName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="instanceName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="instances" Type="System.Diagnostics.InstanceData[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.InstanceData" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="InstanceDataCollectionCollection" Type="System.Diagnostics.InstanceDataCollectionCollection" BaseName="DictionaryBase" BaseType="System.Collections.DictionaryBase">
      <ImplementedInterface Type="System.Collections.IDictionary" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Keys" Type="System.Collections.ICollection" IsInterface="True" IsReadable="True" />
      <Property Name="Values" Type="System.Collections.ICollection" IsInterface="True" IsReadable="True" />
      <Method Name="get_Item" Type="System.Diagnostics.InstanceDataCollection" BaseName="DictionaryBase" BaseType="System.Collections.DictionaryBase">
        <Parameter Name="counterName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="counterName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="counters" Type="System.Diagnostics.InstanceDataCollection[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.InstanceDataCollection" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="MonitoringDescriptionAttribute" Type="System.Diagnostics.MonitoringDescriptionAttribute" BaseName="DescriptionAttribute" BaseType="System.ComponentModel.DescriptionAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Description" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="description" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Enumeration Name="OverflowAction" Type="System.Diagnostics.OverflowAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="DoNotOverwrite" Type="System.Diagnostics.OverflowAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
      <Field Name="OverwriteAsNeeded" Type="System.Diagnostics.OverflowAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="OverwriteOlder" Type="System.Diagnostics.OverflowAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="PerformanceCounter" Type="System.Diagnostics.PerformanceCounter" BaseName="Component" BaseType="System.ComponentModel.Component">
      <ImplementedInterface Type="System.ComponentModel.IComponent" />
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.ComponentModel.ISupportInitialize" />
      <Field Name="DefaultFileMappingSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" IsWritable="True" />
      <Property Name="CategoryName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="CounterHelp" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="CounterName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="CounterType" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="InstanceLifetime" Type="System.Diagnostics.PerformanceCounterInstanceLifetime" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="InstanceName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="MachineName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="RawValue" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="counterName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="instanceName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="counterName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="instanceName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="counterName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="instanceName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="readOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="counterName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="counterName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="readOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInit" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="CloseSharedResources" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" />
      <Method Name="Decrement" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="EndInit" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Increment" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IncrementBy" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="NextSample" Type="System.Diagnostics.CounterSample" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="NextValue" Type="System.Single" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="RemoveInstance" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="PerformanceCounterCategory" Type="System.Diagnostics.PerformanceCounterCategory" BaseName="Object" BaseType="System.Object">
      <Property Name="CategoryHelp" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="CategoryName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="CategoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="MachineName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="CounterExists" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="counterName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CounterExists" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="counterName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CounterExists" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="counterName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Create" Type="System.Diagnostics.PerformanceCounterCategory" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="categoryHelp" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="counterName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="counterHelp" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Create" Type="System.Diagnostics.PerformanceCounterCategory" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="categoryHelp" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="counterName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="counterHelp" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Create" Type="System.Diagnostics.PerformanceCounterCategory" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="categoryHelp" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Create" Type="System.Diagnostics.PerformanceCounterCategory" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="categoryHelp" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Delete" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Exists" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Exists" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetCategories" Type="System.Diagnostics.PerformanceCounterCategory[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.PerformanceCounterCategory" IsStatic="True" />
      <Method Name="GetCategories" Type="System.Diagnostics.PerformanceCounterCategory[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.PerformanceCounterCategory" IsStatic="True">
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetCounters" Type="System.Diagnostics.PerformanceCounter[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.PerformanceCounter" />
      <Method Name="GetCounters" Type="System.Diagnostics.PerformanceCounter[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.PerformanceCounter">
        <Parameter Name="instanceName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetInstanceNames" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
      <Method Name="InstanceExists" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="instanceName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="InstanceExists" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="instanceName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="InstanceExists" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="instanceName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ReadCategory" Type="System.Diagnostics.InstanceDataCollectionCollection" BaseName="DictionaryBase" BaseType="System.Collections.DictionaryBase" />
    </Class>
    <Enumeration Name="PerformanceCounterCategoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="MultiInstance" Type="System.Diagnostics.PerformanceCounterCategoryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="SingleInstance" Type="System.Diagnostics.PerformanceCounterCategoryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Unknown" Type="System.Diagnostics.PerformanceCounterCategoryType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
    </Enumeration>
    <Enumeration Name="PerformanceCounterInstanceLifetime" Type="System.Diagnostics.PerformanceCounterInstanceLifetime" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Global" Type="System.Diagnostics.PerformanceCounterInstanceLifetime" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Process" Type="System.Diagnostics.PerformanceCounterInstanceLifetime" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="PerformanceCounterManager" Type="System.Diagnostics.PerformanceCounterManager" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Diagnostics.ICollectData" />
    </Class>
    <Class Name="PerformanceCounterPermission" Type="System.Diagnostics.PerformanceCounterPermission" BaseName="ResourcePermissionBase" BaseType="System.Security.Permissions.ResourcePermissionBase">
      <ImplementedInterface Type="System.Security.IPermission" />
      <ImplementedInterface Type="System.Security.ISecurityEncodable" />
      <ImplementedInterface Type="System.Security.IStackWalk" />
      <ImplementedInterface Type="System.Security.Permissions.IUnrestrictedPermission" />
      <Property Name="PermissionEntries" Type="System.Diagnostics.PerformanceCounterPermissionEntryCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Constructor>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="permissionAccess" Type="System.Diagnostics.PerformanceCounterPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="permissionAccessEntries" Type="System.Diagnostics.PerformanceCounterPermissionEntry[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.PerformanceCounterPermissionEntry" />
      </Constructor>
    </Class>
    <Enumeration Name="PerformanceCounterPermissionAccess" Type="System.Diagnostics.PerformanceCounterPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Administer" Type="System.Diagnostics.PerformanceCounterPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="Browse" Type="System.Diagnostics.PerformanceCounterPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Instrument" Type="System.Diagnostics.PerformanceCounterPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="None" Type="System.Diagnostics.PerformanceCounterPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Read" Type="System.Diagnostics.PerformanceCounterPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Write" Type="System.Diagnostics.PerformanceCounterPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Class Name="PerformanceCounterPermissionAttribute" Type="System.Diagnostics.PerformanceCounterPermissionAttribute" BaseName="CodeAccessSecurityAttribute" BaseType="System.Security.Permissions.CodeAccessSecurityAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="CategoryName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="MachineName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="PermissionAccess" Type="System.Diagnostics.PerformanceCounterPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="CreatePermission" Type="System.Security.IPermission" IsInterface="True" />
    </Class>
    <Class Name="PerformanceCounterPermissionEntry" Type="System.Diagnostics.PerformanceCounterPermissionEntry" BaseName="Object" BaseType="System.Object">
      <Property Name="CategoryName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="MachineName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="PermissionAccess" Type="System.Diagnostics.PerformanceCounterPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="permissionAccess" Type="System.Diagnostics.PerformanceCounterPermissionAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="categoryName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="PerformanceCounterPermissionEntryCollection" Type="System.Diagnostics.PerformanceCounterPermissionEntryCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.Diagnostics.PerformanceCounterPermissionEntry" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Diagnostics.PerformanceCounterPermissionEntry" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.PerformanceCounterPermissionEntry" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.PerformanceCounterPermissionEntry[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.PerformanceCounterPermissionEntry" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.PerformanceCounterPermissionEntryCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.PerformanceCounterPermissionEntry" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Diagnostics.PerformanceCounterPermissionEntry[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.PerformanceCounterPermissionEntry" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.PerformanceCounterPermissionEntry" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Diagnostics.PerformanceCounterPermissionEntry" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.PerformanceCounterPermissionEntry" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Enumeration Name="PerformanceCounterType" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AverageBase" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1073939458" />
      <Field Name="AverageCount64" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1073874176" />
      <Field Name="AverageTimer32" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="805438464" />
      <Field Name="CounterDelta32" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4195328" />
      <Field Name="CounterDelta64" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4195584" />
      <Field Name="CounterMultiBase" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1107494144" />
      <Field Name="CounterMultiTimer" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="574686464" />
      <Field Name="CounterMultiTimer100Ns" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="575735040" />
      <Field Name="CounterMultiTimer100NsInverse" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="592512256" />
      <Field Name="CounterMultiTimerInverse" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="591463680" />
      <Field Name="CounterTimer" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="541132032" />
      <Field Name="CounterTimerInverse" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="557909248" />
      <Field Name="CountPerTimeInterval32" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4523008" />
      <Field Name="CountPerTimeInterval64" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4523264" />
      <Field Name="ElapsedTime" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="807666944" />
      <Field Name="NumberOfItems32" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="65536" />
      <Field Name="NumberOfItems64" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="65792" />
      <Field Name="NumberOfItemsHEX32" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="NumberOfItemsHEX64" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="256" />
      <Field Name="RateOfCountsPerSecond32" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="272696320" />
      <Field Name="RateOfCountsPerSecond64" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="272696576" />
      <Field Name="RawBase" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1073939459" />
      <Field Name="RawFraction" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="537003008" />
      <Field Name="SampleBase" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1073939457" />
      <Field Name="SampleCounter" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4260864" />
      <Field Name="SampleFraction" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="549585920" />
      <Field Name="Timer100Ns" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="542180608" />
      <Field Name="Timer100NsInverse" Type="System.Diagnostics.PerformanceCounterType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="558957824" />
    </Enumeration>
    <Class Name="Process" Type="System.Diagnostics.Process" BaseName="Component" BaseType="System.ComponentModel.Component">
      <ImplementedInterface Type="System.ComponentModel.IComponent" />
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="BasePriority" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="EnableRaisingEvents" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ExitCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ExitTime" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Handle" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="HandleCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="HasExited" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MachineName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="MainModule" Type="System.Diagnostics.ProcessModule" BaseName="Component" BaseType="System.ComponentModel.Component" IsReadable="True" />
      <Property Name="MainWindowHandle" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MainWindowTitle" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="MaxWorkingSet" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="MinWorkingSet" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Modules" Type="System.Diagnostics.ProcessModuleCollection" BaseName="ReadOnlyCollectionBase" BaseType="System.Collections.ReadOnlyCollectionBase" IsReadable="True" />
      <Property Name="NonpagedSystemMemorySize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="NonpagedSystemMemorySize64" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PagedMemorySize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PagedMemorySize64" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PagedSystemMemorySize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PagedSystemMemorySize64" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PeakPagedMemorySize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PeakPagedMemorySize64" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PeakVirtualMemorySize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PeakVirtualMemorySize64" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PeakWorkingSet" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PeakWorkingSet64" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PriorityBoostEnabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="PriorityClass" Type="System.Diagnostics.ProcessPriorityClass" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="PrivateMemorySize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PrivateMemorySize64" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PrivilegedProcessorTime" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ProcessName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ProcessorAffinity" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Responding" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SafeHandle" Type="Microsoft.Win32.SafeHandles.SafeProcessHandle" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" IsReadable="True" />
      <Property Name="SessionId" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="StandardError" Type="System.IO.StreamReader" BaseName="TextReader" BaseType="System.IO.TextReader" IsReadable="True" />
      <Property Name="StandardInput" Type="System.IO.StreamWriter" BaseName="TextWriter" BaseType="System.IO.TextWriter" IsReadable="True" />
      <Property Name="StandardOutput" Type="System.IO.StreamReader" BaseName="TextReader" BaseType="System.IO.TextReader" IsReadable="True" />
      <Property Name="StartInfo" Type="System.Diagnostics.ProcessStartInfo" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="StartTime" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SynchronizingObject" Type="System.ComponentModel.ISynchronizeInvoke" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Property Name="Threads" Type="System.Diagnostics.ProcessThreadCollection" BaseName="ReadOnlyCollectionBase" BaseType="System.Collections.ReadOnlyCollectionBase" IsReadable="True" />
      <Property Name="TotalProcessorTime" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="UserProcessorTime" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="VirtualMemorySize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="VirtualMemorySize64" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="WorkingSet" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="WorkingSet64" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="BeginErrorReadLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="BeginOutputReadLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="CancelErrorRead" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="CancelOutputRead" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="CloseMainWindow" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="EnterDebugMode" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" />
      <Method Name="GetCurrentProcess" Type="System.Diagnostics.Process" BaseName="Component" BaseType="System.ComponentModel.Component" IsStatic="True" />
      <Method Name="GetProcessById" Type="System.Diagnostics.Process" BaseName="Component" BaseType="System.ComponentModel.Component" IsStatic="True">
        <Parameter Name="processId" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetProcessById" Type="System.Diagnostics.Process" BaseName="Component" BaseType="System.ComponentModel.Component" IsStatic="True">
        <Parameter Name="processId" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetProcesses" Type="System.Diagnostics.Process[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.Process" IsStatic="True" />
      <Method Name="GetProcesses" Type="System.Diagnostics.Process[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.Process" IsStatic="True">
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetProcessesByName" Type="System.Diagnostics.Process[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.Process" IsStatic="True">
        <Parameter Name="processName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetProcessesByName" Type="System.Diagnostics.Process[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.Process" IsStatic="True">
        <Parameter Name="processName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="machineName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Kill" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="LeaveDebugMode" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" />
      <Method Name="Refresh" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Start" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Start" Type="System.Diagnostics.Process" BaseName="Component" BaseType="System.ComponentModel.Component" IsStatic="True">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="password" Type="System.Security.SecureString" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="domain" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Start" Type="System.Diagnostics.Process" BaseName="Component" BaseType="System.ComponentModel.Component" IsStatic="True">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arguments" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="password" Type="System.Security.SecureString" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="domain" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Start" Type="System.Diagnostics.Process" BaseName="Component" BaseType="System.ComponentModel.Component" IsStatic="True">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Start" Type="System.Diagnostics.Process" BaseName="Component" BaseType="System.ComponentModel.Component" IsStatic="True">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arguments" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Start" Type="System.Diagnostics.Process" BaseName="Component" BaseType="System.ComponentModel.Component" IsStatic="True">
        <Parameter Name="startInfo" Type="System.Diagnostics.ProcessStartInfo" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="WaitForExit" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="milliseconds" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WaitForExit" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="WaitForInputIdle" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="milliseconds" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WaitForInputIdle" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Event Name="ErrorDataReceived" Type="System.Diagnostics.DataReceivedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Diagnostics.DataReceivedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="Exited" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="OutputDataReceived" Type="System.Diagnostics.DataReceivedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Diagnostics.DataReceivedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Class Name="ProcessModule" Type="System.Diagnostics.ProcessModule" BaseName="Component" BaseType="System.ComponentModel.Component">
      <ImplementedInterface Type="System.ComponentModel.IComponent" />
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="BaseAddress" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="EntryPointAddress" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="FileName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="FileVersionInfo" Type="System.Diagnostics.FileVersionInfo" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ModuleMemorySize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ModuleName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="ProcessModuleCollection" Type="System.Diagnostics.ProcessModuleCollection" BaseName="ReadOnlyCollectionBase" BaseType="System.Collections.ReadOnlyCollectionBase">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.Diagnostics.ProcessModule" BaseName="Component" BaseType="System.ComponentModel.Component">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Constructor>
        <Parameter Name="processModules" Type="System.Diagnostics.ProcessModule[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.ProcessModule" />
      </Constructor>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="module" Type="System.Diagnostics.ProcessModule" BaseName="Component" BaseType="System.ComponentModel.Component" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Diagnostics.ProcessModule[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.ProcessModule" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="module" Type="System.Diagnostics.ProcessModule" BaseName="Component" BaseType="System.ComponentModel.Component" />
      </Method>
    </Class>
    <Enumeration Name="ProcessPriorityClass" Type="System.Diagnostics.ProcessPriorityClass" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AboveNormal" Type="System.Diagnostics.ProcessPriorityClass" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32768" />
      <Field Name="BelowNormal" Type="System.Diagnostics.ProcessPriorityClass" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16384" />
      <Field Name="High" Type="System.Diagnostics.ProcessPriorityClass" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="128" />
      <Field Name="Idle" Type="System.Diagnostics.ProcessPriorityClass" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
      <Field Name="Normal" Type="System.Diagnostics.ProcessPriorityClass" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="RealTime" Type="System.Diagnostics.ProcessPriorityClass" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="256" />
    </Enumeration>
    <Class Name="ProcessStartInfo" Type="System.Diagnostics.ProcessStartInfo" BaseName="Object" BaseType="System.Object">
      <Property Name="Arguments" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="CreateNoWindow" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Domain" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Environment" Type="System.Collections.Generic.IDictionary`2&lt;System.String, System.String&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="EnvironmentVariables" Type="System.Collections.Specialized.StringDictionary" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ErrorDialog" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ErrorDialogParentHandle" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="FileName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="LoadUserProfile" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Password" Type="System.Security.SecureString" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="PasswordInClearText" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="RedirectStandardError" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="RedirectStandardInput" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="RedirectStandardOutput" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="StandardErrorEncoding" Type="System.Text.Encoding" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="StandardOutputEncoding" Type="System.Text.Encoding" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="UserName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="UseShellExecute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Verb" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Verbs" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" IsReadable="True" />
      <Property Name="WindowStyle" Type="System.Diagnostics.ProcessWindowStyle" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="WorkingDirectory" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arguments" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="ProcessThread" Type="System.Diagnostics.ProcessThread" BaseName="Component" BaseType="System.ComponentModel.Component">
      <ImplementedInterface Type="System.ComponentModel.IComponent" />
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="BasePriority" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CurrentPriority" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IdealProcessor" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsWritable="True" />
      <Property Name="PriorityBoostEnabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="PriorityLevel" Type="System.Diagnostics.ThreadPriorityLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="PrivilegedProcessorTime" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ProcessorAffinity" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsWritable="True" />
      <Property Name="StartAddress" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="StartTime" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ThreadState" Type="System.Diagnostics.ThreadState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="TotalProcessorTime" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="UserProcessorTime" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="WaitReason" Type="System.Diagnostics.ThreadWaitReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Method Name="ResetIdealProcessor" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="ProcessThreadCollection" Type="System.Diagnostics.ProcessThreadCollection" BaseName="ReadOnlyCollectionBase" BaseType="System.Collections.ReadOnlyCollectionBase">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.Diagnostics.ProcessThread" BaseName="Component" BaseType="System.ComponentModel.Component">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Constructor>
        <Parameter Name="processThreads" Type="System.Diagnostics.ProcessThread[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.ProcessThread" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="thread" Type="System.Diagnostics.ProcessThread" BaseName="Component" BaseType="System.ComponentModel.Component" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="thread" Type="System.Diagnostics.ProcessThread" BaseName="Component" BaseType="System.ComponentModel.Component" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Diagnostics.ProcessThread[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.ProcessThread" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="thread" Type="System.Diagnostics.ProcessThread" BaseName="Component" BaseType="System.ComponentModel.Component" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="thread" Type="System.Diagnostics.ProcessThread" BaseName="Component" BaseType="System.ComponentModel.Component" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="thread" Type="System.Diagnostics.ProcessThread" BaseName="Component" BaseType="System.ComponentModel.Component" />
      </Method>
    </Class>
    <Enumeration Name="ProcessWindowStyle" Type="System.Diagnostics.ProcessWindowStyle" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Hidden" Type="System.Diagnostics.ProcessWindowStyle" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Maximized" Type="System.Diagnostics.ProcessWindowStyle" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Minimized" Type="System.Diagnostics.ProcessWindowStyle" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Normal" Type="System.Diagnostics.ProcessWindowStyle" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="SourceFilter" Type="System.Diagnostics.SourceFilter" BaseName="TraceFilter" BaseType="System.Diagnostics.TraceFilter">
      <Property Name="Source" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="ShouldTrace" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="cache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="formatOrMessage" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
        <Parameter Name="data1" Type="System.Object" />
        <Parameter Name="data" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
    </Class>
    <Enumeration Name="SourceLevels" Type="System.Diagnostics.SourceLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="ActivityTracing" Type="System.Diagnostics.SourceLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="65280" />
      <Field Name="All" Type="System.Diagnostics.SourceLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
      <Field Name="Critical" Type="System.Diagnostics.SourceLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Error" Type="System.Diagnostics.SourceLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Information" Type="System.Diagnostics.SourceLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="15" />
      <Field Name="Off" Type="System.Diagnostics.SourceLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Verbose" Type="System.Diagnostics.SourceLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="31" />
      <Field Name="Warning" Type="System.Diagnostics.SourceLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
    </Enumeration>
    <Class Name="SourceSwitch" Type="System.Diagnostics.SourceSwitch" BaseName="Switch" BaseType="System.Diagnostics.Switch">
      <Property Name="Level" Type="System.Diagnostics.SourceLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="displayName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="defaultSwitchValue" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="ShouldTrace" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
    </Class>
    <Class Name="StackFrameExtensions" Type="System.Diagnostics.StackFrameExtensions" BaseName="Object" BaseType="System.Object">
      <Method Name="GetNativeImageBase" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="stackFrame" Type="System.Diagnostics.StackFrame" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetNativeIP" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="stackFrame" Type="System.Diagnostics.StackFrame" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="HasILOffset" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="stackFrame" Type="System.Diagnostics.StackFrame" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="HasMethod" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="stackFrame" Type="System.Diagnostics.StackFrame" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="HasNativeImage" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="stackFrame" Type="System.Diagnostics.StackFrame" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="HasSource" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="stackFrame" Type="System.Diagnostics.StackFrame" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="Stopwatch" Type="System.Diagnostics.Stopwatch" BaseName="Object" BaseType="System.Object">
      <Field Name="Frequency" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Field Name="IsHighResolution" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="Elapsed" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ElapsedMilliseconds" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ElapsedTicks" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsRunning" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="GetTimestamp" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" />
      <Method Name="Reset" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Restart" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Start" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="StartNew" Type="System.Diagnostics.Stopwatch" BaseName="Object" BaseType="System.Object" IsStatic="True" />
      <Method Name="Stop" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="Switch" Type="System.Diagnostics.Switch" BaseName="Object" BaseType="System.Object">
      <Property Name="Attributes" Type="System.Collections.Specialized.StringDictionary" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Description" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="DisplayName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Class Name="SwitchAttribute" Type="System.Diagnostics.SwitchAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="SwitchDescription" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="SwitchName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="SwitchType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="switchName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="switchType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Method Name="GetAll" Type="System.Diagnostics.SwitchAttribute[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.SwitchAttribute" IsStatic="True">
        <Parameter Name="assembly" Type="System.Reflection.Assembly" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="SwitchLevelAttribute" Type="System.Diagnostics.SwitchLevelAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="SwitchLevelType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="switchLevelType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
    </Class>
    <Class Name="TextWriterTraceListener" Type="System.Diagnostics.TextWriterTraceListener" BaseName="TraceListener" BaseType="System.Diagnostics.TraceListener">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="stream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="stream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Flush" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Enumeration Name="ThreadPriorityLevel" Type="System.Diagnostics.ThreadPriorityLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AboveNormal" Type="System.Diagnostics.ThreadPriorityLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="BelowNormal" Type="System.Diagnostics.ThreadPriorityLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
      <Field Name="Highest" Type="System.Diagnostics.ThreadPriorityLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Idle" Type="System.Diagnostics.ThreadPriorityLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-15" />
      <Field Name="Lowest" Type="System.Diagnostics.ThreadPriorityLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-2" />
      <Field Name="Normal" Type="System.Diagnostics.ThreadPriorityLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="TimeCritical" Type="System.Diagnostics.ThreadPriorityLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="15" />
    </Enumeration>
    <Enumeration Name="ThreadState" Type="System.Diagnostics.ThreadState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Initialized" Type="System.Diagnostics.ThreadState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Ready" Type="System.Diagnostics.ThreadState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Running" Type="System.Diagnostics.ThreadState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Standby" Type="System.Diagnostics.ThreadState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Terminated" Type="System.Diagnostics.ThreadState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Transition" Type="System.Diagnostics.ThreadState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Unknown" Type="System.Diagnostics.ThreadState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="Wait" Type="System.Diagnostics.ThreadState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
    </Enumeration>
    <Enumeration Name="ThreadWaitReason" Type="System.Diagnostics.ThreadWaitReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="EventPairHigh" Type="System.Diagnostics.ThreadWaitReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="EventPairLow" Type="System.Diagnostics.ThreadWaitReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="ExecutionDelay" Type="System.Diagnostics.ThreadWaitReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Executive" Type="System.Diagnostics.ThreadWaitReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="FreePage" Type="System.Diagnostics.ThreadWaitReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="LpcReceive" Type="System.Diagnostics.ThreadWaitReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9" />
      <Field Name="LpcReply" Type="System.Diagnostics.ThreadWaitReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10" />
      <Field Name="PageIn" Type="System.Diagnostics.ThreadWaitReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="PageOut" Type="System.Diagnostics.ThreadWaitReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="12" />
      <Field Name="Suspended" Type="System.Diagnostics.ThreadWaitReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="SystemAllocation" Type="System.Diagnostics.ThreadWaitReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Unknown" Type="System.Diagnostics.ThreadWaitReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="13" />
      <Field Name="UserRequest" Type="System.Diagnostics.ThreadWaitReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="VirtualMemory" Type="System.Diagnostics.ThreadWaitReason" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11" />
    </Enumeration>
    <Class Name="Trace" Type="System.Diagnostics.Trace" BaseName="Object" BaseType="System.Object">
      <Property Name="AutoFlush" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="CorrelationManager" Type="System.Diagnostics.CorrelationManager" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="IndentLevel" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="IndentSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="Listeners" Type="System.Diagnostics.TraceListenerCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="UseGlobalLock" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Method Name="Assert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Assert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Assert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="detailMessage" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" />
      <Method Name="Fail" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Fail" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="detailMessage" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Flush" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" />
      <Method Name="Indent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" />
      <Method Name="Refresh" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" />
      <Method Name="TraceError" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="TraceError" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="TraceInformation" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="TraceInformation" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="TraceWarning" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="TraceWarning" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="Unindent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" />
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteIf" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteIf" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="WriteIf" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteIf" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLineIf" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLineIf" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="WriteLineIf" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLineIf" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="condition" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="TraceEventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object">
      <Property Name="Callstack" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="DateTime" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="LogicalOperationStack" Type="System.Collections.Stack" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ProcessId" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ThreadId" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Timestamp" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Enumeration Name="TraceEventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Critical" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Error" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Information" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="Resume" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2048" />
      <Field Name="Start" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="256" />
      <Field Name="Stop" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="512" />
      <Field Name="Suspend" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1024" />
      <Field Name="Transfer" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4096" />
      <Field Name="Verbose" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="Warning" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
    </Enumeration>
    <Class Name="TraceFilter" Type="System.Diagnostics.TraceFilter" BaseName="Object" BaseType="System.Object">
      <Method Name="ShouldTrace" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="cache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="formatOrMessage" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
        <Parameter Name="data1" Type="System.Object" />
        <Parameter Name="data" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
    </Class>
    <Enumeration Name="TraceLevel" Type="System.Diagnostics.TraceLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Error" Type="System.Diagnostics.TraceLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Info" Type="System.Diagnostics.TraceLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Off" Type="System.Diagnostics.TraceLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Verbose" Type="System.Diagnostics.TraceLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Warning" Type="System.Diagnostics.TraceLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Class Name="TraceListener" Type="System.Diagnostics.TraceListener" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Attributes" Type="System.Collections.Specialized.StringDictionary" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Filter" Type="System.Diagnostics.TraceFilter" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="IndentLevel" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IndentSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IsThreadSafe" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="TraceOutputOptions" Type="System.Diagnostics.TraceOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Fail" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Fail" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="detailMessage" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Flush" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="TraceData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="data" Type="System.Object" />
      </Method>
      <Method Name="TraceData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="data" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="TraceEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TraceEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="TraceEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="TraceTransfer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="relatedActivityId" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="o" Type="System.Object" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="o" Type="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="category" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="TraceListenerCollection" Type="System.Diagnostics.TraceListenerCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.Diagnostics.TraceListener" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="i" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="i" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Diagnostics.TraceListener" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Method>
      <Method Name="get_Item" Type="System.Diagnostics.TraceListener" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="listener" Type="System.Diagnostics.TraceListener" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.TraceListener[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.TraceListener" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Diagnostics.TraceListenerCollection" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="listener" Type="System.Diagnostics.TraceListener" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="listeners" Type="System.Diagnostics.TraceListener[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Diagnostics.TraceListener" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="listener" Type="System.Diagnostics.TraceListener" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="listener" Type="System.Diagnostics.TraceListener" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="listener" Type="System.Diagnostics.TraceListener" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="RemoveAt" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Enumeration Name="TraceOptions" Type="System.Diagnostics.TraceOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Callstack" Type="System.Diagnostics.TraceOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="DateTime" Type="System.Diagnostics.TraceOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="LogicalOperationStack" Type="System.Diagnostics.TraceOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="None" Type="System.Diagnostics.TraceOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="ProcessId" Type="System.Diagnostics.TraceOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="ThreadId" Type="System.Diagnostics.TraceOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="Timestamp" Type="System.Diagnostics.TraceOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
    </Enumeration>
    <Class Name="TraceSource" Type="System.Diagnostics.TraceSource" BaseName="Object" BaseType="System.Object">
      <Property Name="Attributes" Type="System.Collections.Specialized.StringDictionary" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Listeners" Type="System.Diagnostics.TraceListenerCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Switch" Type="System.Diagnostics.SourceSwitch" BaseName="Switch" BaseType="System.Diagnostics.Switch" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="defaultLevel" Type="System.Diagnostics.SourceLevels" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Flush" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="TraceData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="data" Type="System.Object" />
      </Method>
      <Method Name="TraceData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="data" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="TraceEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="TraceEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="TraceEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="TraceInformation" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="TraceInformation" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="TraceTransfer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="relatedActivityId" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="TraceSwitch" Type="System.Diagnostics.TraceSwitch" BaseName="Switch" BaseType="System.Diagnostics.Switch">
      <Property Name="Level" Type="System.Diagnostics.TraceLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="TraceError" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TraceInfo" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TraceVerbose" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TraceWarning" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="displayName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="description" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="displayName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="description" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="defaultSwitchValue" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="XmlWriterTraceListener" Type="System.Diagnostics.XmlWriterTraceListener" BaseName="TextWriterTraceListener" BaseType="System.Diagnostics.TextWriterTraceListener">
      <ImplementedInterface Type="System.IDisposable" />
      <Constructor>
        <Parameter Name="stream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="stream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="writer" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="filename" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="filename" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Fail" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="detailMessage" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="TraceData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="data" Type="System.Object" />
      </Method>
      <Method Name="TraceData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="data" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="TraceEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="format" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="args" Type="System.Object[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Object" />
      </Method>
      <Method Name="TraceEvent" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="TraceTransfer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="source" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="id" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="relatedActivityId" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.Diagnostics.CodeAnalysis">
    <Class Name="ExcludeFromCodeCoverageAttribute" Type="System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
    </Class>
  </Namespace>
  <Namespace Name="System.IO">
    <Class Name="ErrorEventArgs" Type="System.IO.ErrorEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Constructor>
        <Parameter Name="exception" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="GetException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="ErrorEventHandler" Type="System.IO.ErrorEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.ErrorEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.ErrorEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="FileSystemEventArgs" Type="System.IO.FileSystemEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="ChangeType" Type="System.IO.WatcherChangeTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="FullPath" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="changeType" Type="System.IO.WatcherChangeTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="directory" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="FileSystemEventHandler" Type="System.IO.FileSystemEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="FileSystemWatcher" Type="System.IO.FileSystemWatcher" BaseName="Component" BaseType="System.ComponentModel.Component">
      <ImplementedInterface Type="System.ComponentModel.IComponent" />
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.ComponentModel.ISupportInitialize" />
      <Property Name="EnableRaisingEvents" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Filter" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="IncludeSubdirectories" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="InternalBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="NotifyFilter" Type="System.IO.NotifyFilters" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="Path" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Site" Type="System.ComponentModel.ISite" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Property Name="SynchronizingObject" Type="System.ComponentModel.ISynchronizeInvoke" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="filter" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="BeginInit" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="EndInit" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="WaitForChanged" Type="System.IO.WaitForChangedResult" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="changeType" Type="System.IO.WatcherChangeTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="WaitForChanged" Type="System.IO.WaitForChangedResult" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="changeType" Type="System.IO.WatcherChangeTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Event Name="Changed" Type="System.IO.FileSystemEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="Created" Type="System.IO.FileSystemEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="Deleted" Type="System.IO.FileSystemEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="Error" Type="System.IO.ErrorEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.ErrorEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="Renamed" Type="System.IO.RenamedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.RenamedEventArgs" BaseName="FileSystemEventArgs" BaseType="System.IO.FileSystemEventArgs" />
      </Event>
    </Class>
    <Class Name="InternalBufferOverflowException" Type="System.IO.InternalBufferOverflowException" BaseName="SystemException" BaseType="System.SystemException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="inner" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="InvalidDataException" Type="System.IO.InvalidDataException" BaseName="SystemException" BaseType="System.SystemException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="IODescriptionAttribute" Type="System.IO.IODescriptionAttribute" BaseName="DescriptionAttribute" BaseType="System.ComponentModel.DescriptionAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Description" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="description" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Enumeration Name="NotifyFilters" Type="System.IO.NotifyFilters" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Attributes" Type="System.IO.NotifyFilters" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="CreationTime" Type="System.IO.NotifyFilters" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
      <Field Name="DirectoryName" Type="System.IO.NotifyFilters" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="FileName" Type="System.IO.NotifyFilters" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="LastAccess" Type="System.IO.NotifyFilters" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="LastWrite" Type="System.IO.NotifyFilters" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="Security" Type="System.IO.NotifyFilters" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="256" />
      <Field Name="Size" Type="System.IO.NotifyFilters" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
    </Enumeration>
    <Class Name="RenamedEventArgs" Type="System.IO.RenamedEventArgs" BaseName="FileSystemEventArgs" BaseType="System.IO.FileSystemEventArgs">
      <Property Name="OldFullPath" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="OldName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="changeType" Type="System.IO.WatcherChangeTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="directory" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="oldName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="RenamedEventHandler" Type="System.IO.RenamedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.RenamedEventArgs" BaseName="FileSystemEventArgs" BaseType="System.IO.FileSystemEventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.RenamedEventArgs" BaseName="FileSystemEventArgs" BaseType="System.IO.FileSystemEventArgs" />
      </Method>
    </Class>
    <Struct Name="WaitForChangedResult" Type="System.IO.WaitForChangedResult" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
      <Property Name="ChangeType" Type="System.IO.WatcherChangeTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="OldName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="TimedOut" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
    </Struct>
    <Enumeration Name="WatcherChangeTypes" Type="System.IO.WatcherChangeTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="All" Type="System.IO.WatcherChangeTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="15" />
      <Field Name="Changed" Type="System.IO.WatcherChangeTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Created" Type="System.IO.WatcherChangeTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Deleted" Type="System.IO.WatcherChangeTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Renamed" Type="System.IO.WatcherChangeTypes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.IO.Compression">
    <Enumeration Name="CompressionLevel" Type="System.IO.Compression.CompressionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Fastest" Type="System.IO.Compression.CompressionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="NoCompression" Type="System.IO.Compression.CompressionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Optimal" Type="System.IO.Compression.CompressionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Enumeration Name="CompressionMode" Type="System.IO.Compression.CompressionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Compress" Type="System.IO.Compression.CompressionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Decompress" Type="System.IO.Compression.CompressionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="DeflateStream" Type="System.IO.Compression.DeflateStream" BaseName="Stream" BaseType="System.IO.Stream">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="BaseStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" IsReadable="True" />
      <Property Name="CanRead" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CanSeek" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CanWrite" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Length" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Position" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="stream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="mode" Type="System.IO.Compression.CompressionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="stream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="mode" Type="System.IO.Compression.CompressionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="leaveOpen" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="stream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="stream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="leaveOpen" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginRead" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="array" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginWrite" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="array" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="EndRead" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndWrite" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Flush" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Read" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Seek" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="offset" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="SetLength" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="GZipStream" Type="System.IO.Compression.GZipStream" BaseName="Stream" BaseType="System.IO.Stream">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="BaseStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" IsReadable="True" />
      <Property Name="CanRead" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CanSeek" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CanWrite" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Length" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Position" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="stream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="mode" Type="System.IO.Compression.CompressionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="stream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="mode" Type="System.IO.Compression.CompressionMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="leaveOpen" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="stream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="stream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="leaveOpen" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginRead" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="array" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginWrite" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="array" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="EndRead" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndWrite" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Flush" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Read" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Seek" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="offset" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="SetLength" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.IO.Ports">
    <Enumeration Name="Handshake" Type="System.IO.Ports.Handshake" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="None" Type="System.IO.Ports.Handshake" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="RequestToSend" Type="System.IO.Ports.Handshake" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="RequestToSendXOnXOff" Type="System.IO.Ports.Handshake" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="XOnXOff" Type="System.IO.Ports.Handshake" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Enumeration Name="Parity" Type="System.IO.Ports.Parity" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Even" Type="System.IO.Ports.Parity" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Mark" Type="System.IO.Ports.Parity" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="None" Type="System.IO.Ports.Parity" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Odd" Type="System.IO.Ports.Parity" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Space" Type="System.IO.Ports.Parity" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
    </Enumeration>
    <Enumeration Name="SerialData" Type="System.IO.Ports.SerialData" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Chars" Type="System.IO.Ports.SerialData" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Eof" Type="System.IO.Ports.SerialData" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Class Name="SerialDataReceivedEventArgs" Type="System.IO.Ports.SerialDataReceivedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="EventType" Type="System.IO.Ports.SerialData" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
    </Class>
    <Class Name="SerialDataReceivedEventHandler" Type="System.IO.Ports.SerialDataReceivedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.Ports.SerialDataReceivedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.Ports.SerialDataReceivedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Enumeration Name="SerialError" Type="System.IO.Ports.SerialError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Frame" Type="System.IO.Ports.SerialError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="Overrun" Type="System.IO.Ports.SerialError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="RXOver" Type="System.IO.Ports.SerialError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="RXParity" Type="System.IO.Ports.SerialError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="TXFull" Type="System.IO.Ports.SerialError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="256" />
    </Enumeration>
    <Class Name="SerialErrorReceivedEventArgs" Type="System.IO.Ports.SerialErrorReceivedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="EventType" Type="System.IO.Ports.SerialError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
    </Class>
    <Class Name="SerialErrorReceivedEventHandler" Type="System.IO.Ports.SerialErrorReceivedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.Ports.SerialErrorReceivedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.Ports.SerialErrorReceivedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Enumeration Name="SerialPinChange" Type="System.IO.Ports.SerialPinChange" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Break" Type="System.IO.Ports.SerialPinChange" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
      <Field Name="CDChanged" Type="System.IO.Ports.SerialPinChange" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="CtsChanged" Type="System.IO.Ports.SerialPinChange" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="DsrChanged" Type="System.IO.Ports.SerialPinChange" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="Ring" Type="System.IO.Ports.SerialPinChange" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="256" />
    </Enumeration>
    <Class Name="SerialPinChangedEventArgs" Type="System.IO.Ports.SerialPinChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="EventType" Type="System.IO.Ports.SerialPinChange" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
    </Class>
    <Class Name="SerialPinChangedEventHandler" Type="System.IO.Ports.SerialPinChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.Ports.SerialPinChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.Ports.SerialPinChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="SerialPort" Type="System.IO.Ports.SerialPort" BaseName="Component" BaseType="System.ComponentModel.Component">
      <ImplementedInterface Type="System.ComponentModel.IComponent" />
      <ImplementedInterface Type="System.IDisposable" />
      <Field Name="InfiniteTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
      <Property Name="BaseStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" IsReadable="True" />
      <Property Name="BaudRate" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="BreakState" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="BytesToRead" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="BytesToWrite" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CDHolding" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CtsHolding" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="DataBits" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="DiscardNull" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="DsrHolding" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="DtrEnable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Encoding" Type="System.Text.Encoding" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Handshake" Type="System.IO.Ports.Handshake" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="IsOpen" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="NewLine" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Parity" Type="System.IO.Ports.Parity" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="ParityReplace" Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="PortName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ReadBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ReadTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ReceivedBytesThreshold" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="RtsEnable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="StopBits" Type="System.IO.Ports.StopBits" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="WriteBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="WriteTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" IsInterface="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="portName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="portName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="baudRate" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="portName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="baudRate" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="portName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="baudRate" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="dataBits" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="portName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="baudRate" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="dataBits" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="stopBits" Type="System.IO.Ports.StopBits" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="DiscardInBuffer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="DiscardOutBuffer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetPortNames" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" IsStatic="True" />
      <Method Name="Open" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Read" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Read" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Char[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Char" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ReadByte" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ReadChar" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ReadExisting" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="ReadLine" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="ReadTo" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="text" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Char[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Char" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="WriteLine" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="text" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Event Name="DataReceived" Type="System.IO.Ports.SerialDataReceivedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.Ports.SerialDataReceivedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="ErrorReceived" Type="System.IO.Ports.SerialErrorReceivedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.Ports.SerialErrorReceivedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="PinChanged" Type="System.IO.Ports.SerialPinChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.IO.Ports.SerialPinChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Enumeration Name="StopBits" Type="System.IO.Ports.StopBits" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="None" Type="System.IO.Ports.StopBits" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="One" Type="System.IO.Ports.StopBits" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="OnePointFive" Type="System.IO.Ports.StopBits" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Two" Type="System.IO.Ports.StopBits" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.Media">
    <Class Name="SoundPlayer" Type="System.Media.SoundPlayer" BaseName="Component" BaseType="System.ComponentModel.Component">
      <ImplementedInterface Type="System.ComponentModel.IComponent" />
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Property Name="IsLoadCompleted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="LoadTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="SoundLocation" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Stream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" IsReadable="True" IsWritable="True" />
      <Property Name="Tag" Type="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="soundLocation" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="stream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Constructor>
      <Method Name="Load" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="LoadAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Play" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="PlayLooping" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="PlaySync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Stop" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Event Name="LoadCompleted" Type="System.ComponentModel.AsyncCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="SoundLocationChanged" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="StreamChanged" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
    </Class>
    <Class Name="SystemSound" Type="System.Media.SystemSound" BaseName="Object" BaseType="System.Object">
      <Method Name="Play" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="SystemSounds" Type="System.Media.SystemSounds" BaseName="Object" BaseType="System.Object">
      <Property Name="Asterisk" Type="System.Media.SystemSound" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Beep" Type="System.Media.SystemSound" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Exclamation" Type="System.Media.SystemSound" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Hand" Type="System.Media.SystemSound" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Question" Type="System.Media.SystemSound" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
    </Class>
  </Namespace>
  <Namespace Name="System.Net">
    <Class Name="AuthenticationManager" Type="System.Net.AuthenticationManager" BaseName="Object" BaseType="System.Object">
      <Property Name="CredentialPolicy" Type="System.Net.ICredentialPolicy" IsInterface="True" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="CustomTargetNameDictionary" Type="System.Collections.Specialized.StringDictionary" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="RegisteredModules" Type="System.Collections.IEnumerator" IsInterface="True" IsReadable="True" IsStatic="True" />
      <Method Name="Authenticate" Type="System.Net.Authorization" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="challenge" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="request" Type="System.Net.WebRequest" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" IsInterface="True" />
      </Method>
      <Method Name="PreAuthenticate" Type="System.Net.Authorization" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="request" Type="System.Net.WebRequest" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" IsInterface="True" />
      </Method>
      <Method Name="Register" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" IsInterface="True" />
      </Method>
      <Method Name="Unregister" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" IsInterface="True" />
      </Method>
      <Method Name="Unregister" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="authenticationScheme" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Enumeration Name="AuthenticationSchemes" Type="System.Net.AuthenticationSchemes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Anonymous" Type="System.Net.AuthenticationSchemes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32768" />
      <Field Name="Basic" Type="System.Net.AuthenticationSchemes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="Digest" Type="System.Net.AuthenticationSchemes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="IntegratedWindowsAuthentication" Type="System.Net.AuthenticationSchemes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Negotiate" Type="System.Net.AuthenticationSchemes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="None" Type="System.Net.AuthenticationSchemes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Ntlm" Type="System.Net.AuthenticationSchemes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
    </Enumeration>
    <Class Name="AuthenticationSchemeSelector" Type="System.Net.AuthenticationSchemeSelector" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="httpRequest" Type="System.Net.HttpListenerRequest" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Net.AuthenticationSchemes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Net.AuthenticationSchemes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
        <Parameter Name="httpRequest" Type="System.Net.HttpListenerRequest" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="Authorization" Type="System.Net.Authorization" BaseName="Object" BaseType="System.Object">
      <Property Name="Complete" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ConnectionGroupId" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Message" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="MutuallyAuthenticated" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ProtectionRealm" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="token" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="token" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="finished" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="token" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="finished" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="connectionGroupId" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="BindIPEndPoint" Type="System.Net.BindIPEndPoint" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="servicePoint" Type="System.Net.ServicePoint" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="remoteEndPoint" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" />
        <Parameter Name="retryCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint">
        <Parameter Name="servicePoint" Type="System.Net.ServicePoint" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="remoteEndPoint" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" />
        <Parameter Name="retryCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="Cookie" Type="System.Net.Cookie" BaseName="Object" BaseType="System.Object">
      <Property Name="Comment" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="CommentUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Discard" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Domain" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Expired" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Expires" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="HttpOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Path" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Port" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Secure" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="TimeStamp" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Value" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Version" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="domain" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="comparand" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="CookieCollection" Type="System.Net.CookieCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSynchronized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SyncRoot" Type="System.Object" IsReadable="True" />
      <Method Name="get_Item" Type="System.Net.Cookie" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="get_Item" Type="System.Net.Cookie" BaseName="Object" BaseType="System.Object">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="cookie" Type="System.Net.Cookie" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="cookies" Type="System.Net.CookieCollection" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Array" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Net.Cookie[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.Cookie" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
    </Class>
    <Class Name="CookieContainer" Type="System.Net.CookieContainer" BaseName="Object" BaseType="System.Object">
      <Field Name="DefaultCookieLengthLimit" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4096" />
      <Field Name="DefaultCookieLimit" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="300" />
      <Field Name="DefaultPerDomainCookieLimit" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="20" />
      <Property Name="Capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MaxCookieSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="PerDomainCapacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="capacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="perDomainCapacity" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="maxCookieSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="cookie" Type="System.Net.Cookie" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="cookies" Type="System.Net.CookieCollection" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="uri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="cookie" Type="System.Net.Cookie" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="uri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="cookies" Type="System.Net.CookieCollection" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetCookieHeader" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="uri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetCookies" Type="System.Net.CookieCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="uri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SetCookies" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="uri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="cookieHeader" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="CookieException" Type="System.Net.CookieException" BaseName="FormatException" BaseType="System.FormatException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Method Name="GetObjectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="CredentialCache" Type="System.Net.CredentialCache" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Net.ICredentials" />
      <ImplementedInterface Type="System.Net.ICredentialsByHost" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="DefaultCredentials" Type="System.Net.ICredentials" IsInterface="True" IsReadable="True" IsStatic="True" />
      <Property Name="DefaultNetworkCredentials" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="uriPrefix" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="authType" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="cred" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="host" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="authenticationType" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetCredential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object">
        <Parameter Name="uriPrefix" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="authType" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetCredential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object">
        <Parameter Name="host" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="authenticationType" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="uriPrefix" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="authType" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="host" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="authenticationType" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Enumeration Name="DecompressionMethods" Type="System.Net.DecompressionMethods" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Deflate" Type="System.Net.DecompressionMethods" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="GZip" Type="System.Net.DecompressionMethods" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="None" Type="System.Net.DecompressionMethods" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="Dns" Type="System.Net.Dns" BaseName="Object" BaseType="System.Object">
      <Method Name="BeginGetHostAddresses" Type="System.IAsyncResult" IsInterface="True" IsStatic="True">
        <Parameter Name="hostNameOrAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginGetHostByName" Type="System.IAsyncResult" IsInterface="True" IsStatic="True">
        <Parameter Name="hostName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Method>
      <Method Name="BeginGetHostEntry" Type="System.IAsyncResult" IsInterface="True" IsStatic="True">
        <Parameter Name="hostNameOrAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Method>
      <Method Name="BeginGetHostEntry" Type="System.IAsyncResult" IsInterface="True" IsStatic="True">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Method>
      <Method Name="BeginResolve" Type="System.IAsyncResult" IsInterface="True" IsStatic="True">
        <Parameter Name="hostName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Method>
      <Method Name="EndGetHostAddresses" Type="System.Net.IPAddress[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.IPAddress" IsStatic="True">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndGetHostByName" Type="System.Net.IPHostEntry" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndGetHostEntry" Type="System.Net.IPHostEntry" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndResolve" Type="System.Net.IPHostEntry" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="GetHostAddresses" Type="System.Net.IPAddress[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.IPAddress" IsStatic="True">
        <Parameter Name="hostNameOrAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetHostAddressesAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.IPAddress[]&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Net.IPAddress[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.IPAddress" />
        <Parameter Name="hostNameOrAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetHostByAddress" Type="System.Net.IPHostEntry" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetHostByAddress" Type="System.Net.IPHostEntry" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetHostByName" Type="System.Net.IPHostEntry" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="hostName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetHostEntry" Type="System.Net.IPHostEntry" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="hostNameOrAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetHostEntry" Type="System.Net.IPHostEntry" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetHostEntryAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.IPHostEntry&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Net.IPHostEntry" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetHostEntryAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.IPHostEntry&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Net.IPHostEntry" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="hostNameOrAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetHostName" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True" />
      <Method Name="Resolve" Type="System.Net.IPHostEntry" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="hostName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="DnsEndPoint" Type="System.Net.DnsEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint">
      <Property Name="AddressFamily" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Host" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="host" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="host" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="addressFamily" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="comparand" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="DnsPermission" Type="System.Net.DnsPermission" BaseName="CodeAccessPermission" BaseType="System.Security.CodeAccessPermission">
      <ImplementedInterface Type="System.Security.IPermission" />
      <ImplementedInterface Type="System.Security.ISecurityEncodable" />
      <ImplementedInterface Type="System.Security.IStackWalk" />
      <ImplementedInterface Type="System.Security.Permissions.IUnrestrictedPermission" />
      <Constructor>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Copy" Type="System.Security.IPermission" IsInterface="True" />
      <Method Name="FromXml" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Intersect" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsSubsetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsUnrestricted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToXml" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      <Method Name="Union" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="DnsPermissionAttribute" Type="System.Net.DnsPermissionAttribute" BaseName="CodeAccessSecurityAttribute" BaseType="System.Security.Permissions.CodeAccessSecurityAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Constructor>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="CreatePermission" Type="System.Security.IPermission" IsInterface="True" />
    </Class>
    <Class Name="DownloadDataCompletedEventArgs" Type="System.Net.DownloadDataCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs">
      <Property Name="Result" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" />
    </Class>
    <Class Name="DownloadDataCompletedEventHandler" Type="System.Net.DownloadDataCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.DownloadDataCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.DownloadDataCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Method>
    </Class>
    <Class Name="DownloadProgressChangedEventArgs" Type="System.Net.DownloadProgressChangedEventArgs" BaseName="ProgressChangedEventArgs" BaseType="System.ComponentModel.ProgressChangedEventArgs">
      <Property Name="BytesReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TotalBytesToReceive" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="DownloadProgressChangedEventHandler" Type="System.Net.DownloadProgressChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.DownloadProgressChangedEventArgs" BaseName="ProgressChangedEventArgs" BaseType="System.ComponentModel.ProgressChangedEventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.DownloadProgressChangedEventArgs" BaseName="ProgressChangedEventArgs" BaseType="System.ComponentModel.ProgressChangedEventArgs" />
      </Method>
    </Class>
    <Class Name="DownloadStringCompletedEventArgs" Type="System.Net.DownloadStringCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs">
      <Property Name="Result" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Class Name="DownloadStringCompletedEventHandler" Type="System.Net.DownloadStringCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.DownloadStringCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.DownloadStringCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Method>
    </Class>
    <Class Name="EndPoint" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object">
      <Property Name="AddressFamily" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Method Name="Create" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object">
        <Parameter Name="socketAddress" Type="System.Net.SocketAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Serialize" Type="System.Net.SocketAddress" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="EndpointPermission" Type="System.Net.EndpointPermission" BaseName="Object" BaseType="System.Object">
      <Property Name="Hostname" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Transport" Type="System.Net.TransportType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="FileWebRequest" Type="System.Net.FileWebRequest" BaseName="WebRequest" BaseType="System.Net.WebRequest">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Property Name="ConnectionGroupName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ContentLength" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ContentType" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Credentials" Type="System.Net.ICredentials" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Property Name="Headers" Type="System.Net.WebHeaderCollection" BaseName="NameValueCollection" BaseType="System.Collections.Specialized.NameValueCollection" IsReadable="True" />
      <Property Name="Method" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="PreAuthenticate" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Proxy" Type="System.Net.IWebProxy" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Property Name="RequestUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="UseDefaultCredentials" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Method Name="Abort" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="BeginGetRequestStream" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginGetResponse" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="EndGetRequestStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndGetResponse" Type="System.Net.WebResponse" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="GetRequestStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      <Method Name="GetResponse" Type="System.Net.WebResponse" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
    </Class>
    <Class Name="FileWebResponse" Type="System.Net.FileWebResponse" BaseName="WebResponse" BaseType="System.Net.WebResponse">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="ContentLength" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ContentType" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Headers" Type="System.Net.WebHeaderCollection" BaseName="NameValueCollection" BaseType="System.Collections.Specialized.NameValueCollection" IsReadable="True" />
      <Property Name="ResponseUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SupportsHeaders" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetResponseStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
    </Class>
    <Enumeration Name="FtpStatusCode" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AccountNeeded" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="532" />
      <Field Name="ActionAbortedLocalProcessingError" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="451" />
      <Field Name="ActionAbortedUnknownPageType" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="551" />
      <Field Name="ActionNotTakenFilenameNotAllowed" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="553" />
      <Field Name="ActionNotTakenFileUnavailable" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="550" />
      <Field Name="ActionNotTakenFileUnavailableOrBusy" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="450" />
      <Field Name="ActionNotTakenInsufficientSpace" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="452" />
      <Field Name="ArgumentSyntaxError" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="501" />
      <Field Name="BadCommandSequence" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="503" />
      <Field Name="CantOpenData" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="425" />
      <Field Name="ClosingControl" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="221" />
      <Field Name="ClosingData" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="226" />
      <Field Name="CommandExtraneous" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="202" />
      <Field Name="CommandNotImplemented" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="502" />
      <Field Name="CommandOK" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="200" />
      <Field Name="CommandSyntaxError" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="500" />
      <Field Name="ConnectionClosed" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="426" />
      <Field Name="DataAlreadyOpen" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="125" />
      <Field Name="DirectoryStatus" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="212" />
      <Field Name="EnteringPassive" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="227" />
      <Field Name="FileActionAborted" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="552" />
      <Field Name="FileActionOK" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="250" />
      <Field Name="FileCommandPending" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="350" />
      <Field Name="FileStatus" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="213" />
      <Field Name="LoggedInProceed" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="230" />
      <Field Name="NeedLoginAccount" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="332" />
      <Field Name="NotLoggedIn" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="530" />
      <Field Name="OpeningData" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="150" />
      <Field Name="PathnameCreated" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="257" />
      <Field Name="RestartMarker" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="110" />
      <Field Name="SendPasswordCommand" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="331" />
      <Field Name="SendUserCommand" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="220" />
      <Field Name="ServerWantsSecureSession" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="234" />
      <Field Name="ServiceNotAvailable" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="421" />
      <Field Name="ServiceTemporarilyNotAvailable" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="120" />
      <Field Name="SystemType" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="215" />
      <Field Name="Undefined" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="FtpWebRequest" Type="System.Net.FtpWebRequest" BaseName="WebRequest" BaseType="System.Net.WebRequest">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Property Name="ClientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" IsWritable="True" />
      <Property Name="ConnectionGroupName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ContentLength" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ContentOffset" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ContentType" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Credentials" Type="System.Net.ICredentials" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Property Name="DefaultCachePolicy" Type="System.Net.Cache.RequestCachePolicy" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="EnableSsl" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Headers" Type="System.Net.WebHeaderCollection" BaseName="NameValueCollection" BaseType="System.Collections.Specialized.NameValueCollection" IsReadable="True" IsWritable="True" />
      <Property Name="KeepAlive" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Method" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="PreAuthenticate" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Proxy" Type="System.Net.IWebProxy" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Property Name="ReadWriteTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="RenameTo" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="RequestUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ServicePoint" Type="System.Net.ServicePoint" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="UseBinary" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="UseDefaultCredentials" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="UsePassive" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Method Name="Abort" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="BeginGetRequestStream" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginGetResponse" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="EndGetRequestStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndGetResponse" Type="System.Net.WebResponse" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="GetRequestStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      <Method Name="GetResponse" Type="System.Net.WebResponse" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
    </Class>
    <Class Name="FtpWebResponse" Type="System.Net.FtpWebResponse" BaseName="WebResponse" BaseType="System.Net.WebResponse">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="BannerMessage" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ContentLength" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ExitMessage" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Headers" Type="System.Net.WebHeaderCollection" BaseName="NameValueCollection" BaseType="System.Collections.Specialized.NameValueCollection" IsReadable="True" />
      <Property Name="LastModified" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ResponseUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="StatusCode" Type="System.Net.FtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="StatusDescription" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SupportsHeaders" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="WelcomeMessage" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetResponseStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
    </Class>
    <Class Name="GlobalProxySelection" Type="System.Net.GlobalProxySelection" BaseName="Object" BaseType="System.Object">
      <Property Name="Select" Type="System.Net.IWebProxy" IsInterface="True" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Method Name="GetEmptyWebProxy" Type="System.Net.IWebProxy" IsInterface="True" IsStatic="True" />
    </Class>
    <Class Name="HttpContinueDelegate" Type="System.Net.HttpContinueDelegate" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="StatusCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="httpHeaders" Type="System.Net.WebHeaderCollection" BaseName="NameValueCollection" BaseType="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="StatusCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="httpHeaders" Type="System.Net.WebHeaderCollection" BaseName="NameValueCollection" BaseType="System.Collections.Specialized.NameValueCollection" />
      </Method>
    </Class>
    <Class Name="HttpListener" Type="System.Net.HttpListener" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="AuthenticationSchemes" Type="System.Net.AuthenticationSchemes" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="AuthenticationSchemeSelectorDelegate" Type="System.Net.AuthenticationSchemeSelector" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsReadable="True" IsWritable="True" />
      <Property Name="DefaultServiceNames" Type="System.Security.Authentication.ExtendedProtection.ServiceNameCollection" BaseName="ReadOnlyCollectionBase" BaseType="System.Collections.ReadOnlyCollectionBase" IsReadable="True" />
      <Property Name="ExtendedProtectionPolicy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ExtendedProtectionSelectorDelegate" Type="System.Net.HttpListener+ExtendedProtectionSelector" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsNested="True" IsReadable="True" IsWritable="True" />
      <Property Name="IgnoreWriteExceptions" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IsListening" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSupported" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="Prefixes" Type="System.Net.HttpListenerPrefixCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Realm" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="TimeoutManager" Type="System.Net.HttpListenerTimeoutManager" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="UnsafeConnectionNtlmAuthentication" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Method Name="Abort" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="BeginGetContext" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="EndGetContext" Type="System.Net.HttpListenerContext" BaseName="Object" BaseType="System.Object">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="GetContext" Type="System.Net.HttpListenerContext" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetContextAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.HttpListenerContext&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.HttpListenerContext" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Start" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Stop" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="HttpListener.ExtendedProtectionSelector" Type="System.Net.HttpListener+ExtendedProtectionSelector" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsNested="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="request" Type="System.Net.HttpListenerRequest" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" BaseName="Object" BaseType="System.Object">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" BaseName="Object" BaseType="System.Object">
        <Parameter Name="request" Type="System.Net.HttpListenerRequest" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="HttpListenerBasicIdentity" Type="System.Net.HttpListenerBasicIdentity" BaseName="GenericIdentity" BaseType="System.Security.Principal.GenericIdentity">
      <ImplementedInterface Type="System.Security.Principal.IIdentity" />
      <Property Name="Password" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="username" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="password" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="HttpListenerContext" Type="System.Net.HttpListenerContext" BaseName="Object" BaseType="System.Object">
      <Property Name="Request" Type="System.Net.HttpListenerRequest" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Response" Type="System.Net.HttpListenerResponse" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="User" Type="System.Security.Principal.IPrincipal" IsInterface="True" IsReadable="True" />
      <Method Name="AcceptWebSocketAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.WebSockets.HttpListenerWebSocketContext" BaseName="WebSocketContext" BaseType="System.Net.WebSockets.WebSocketContext" />
        <Parameter Name="subProtocol" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AcceptWebSocketAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.WebSockets.HttpListenerWebSocketContext" BaseName="WebSocketContext" BaseType="System.Net.WebSockets.WebSocketContext" />
        <Parameter Name="subProtocol" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AcceptWebSocketAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.WebSockets.HttpListenerWebSocketContext" BaseName="WebSocketContext" BaseType="System.Net.WebSockets.WebSocketContext" />
        <Parameter Name="subProtocol" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="receiveBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AcceptWebSocketAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.WebSockets.HttpListenerWebSocketContext" BaseName="WebSocketContext" BaseType="System.Net.WebSockets.WebSocketContext" />
        <Parameter Name="subProtocol" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="receiveBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="internalBuffer" Type="System.ArraySegment`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
    </Class>
    <Class Name="HttpListenerException" Type="System.Net.HttpListenerException" BaseName="Win32Exception" BaseType="System.ComponentModel.Win32Exception">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Property Name="ErrorCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="errorCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="errorCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="HttpListenerPrefixCollection" Type="System.Net.HttpListenerPrefixCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.String&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.String&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSynchronized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="uriPrefix" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="uriPrefix" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Array" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Generic.IEnumerator`1&lt;System.String&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="uriPrefix" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="HttpListenerRequest" Type="System.Net.HttpListenerRequest" BaseName="Object" BaseType="System.Object">
      <Property Name="AcceptTypes" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" IsReadable="True" />
      <Property Name="ClientCertificateError" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ContentEncoding" Type="System.Text.Encoding" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ContentLength64" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ContentType" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Cookies" Type="System.Net.CookieCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="HasEntityBody" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Headers" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" IsReadable="True" />
      <Property Name="HttpMethod" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="InputStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" IsReadable="True" />
      <Property Name="IsAuthenticated" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsLocal" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSecureConnection" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsWebSocketRequest" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="KeepAlive" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="LocalEndPoint" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" IsReadable="True" />
      <Property Name="ProtocolVersion" Type="System.Version" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="QueryString" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" IsReadable="True" />
      <Property Name="RawUrl" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="RemoteEndPoint" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" IsReadable="True" />
      <Property Name="RequestTraceIdentifier" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ServiceName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="TransportContext" Type="System.Net.TransportContext" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Url" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="UrlReferrer" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="UserAgent" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="UserHostAddress" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="UserHostName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="UserLanguages" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" IsReadable="True" />
      <Method Name="BeginGetClientCertificate" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="requestCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="EndGetClientCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="GetClientCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      <Method Name="GetClientCertificateAsync" Type="System.Threading.Tasks.Task`1&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Method>
    </Class>
    <Class Name="HttpListenerResponse" Type="System.Net.HttpListenerResponse" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="ContentEncoding" Type="System.Text.Encoding" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ContentLength64" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ContentType" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Cookies" Type="System.Net.CookieCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Headers" Type="System.Net.WebHeaderCollection" BaseName="NameValueCollection" BaseType="System.Collections.Specialized.NameValueCollection" IsReadable="True" IsWritable="True" />
      <Property Name="KeepAlive" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="OutputStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" IsReadable="True" />
      <Property Name="ProtocolVersion" Type="System.Version" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="RedirectLocation" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="SendChunked" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="StatusCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="StatusDescription" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Method Name="Abort" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="AddHeader" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AppendCookie" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="cookie" Type="System.Net.Cookie" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AppendHeader" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="responseEntity" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="willBlock" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="CopyFrom" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="templateResponse" Type="System.Net.HttpListenerResponse" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Redirect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="url" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SetCookie" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="cookie" Type="System.Net.Cookie" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="HttpListenerTimeoutManager" Type="System.Net.HttpListenerTimeoutManager" BaseName="Object" BaseType="System.Object">
      <Property Name="DrainEntityBody" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="EntityBody" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="HeaderWait" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IdleConnection" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="MinSendBytesPerSecond" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="RequestQueue" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
    </Class>
    <Enumeration Name="HttpRequestHeader" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Accept" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="20" />
      <Field Name="AcceptCharset" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="21" />
      <Field Name="AcceptEncoding" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="22" />
      <Field Name="AcceptLanguage" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="23" />
      <Field Name="Allow" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10" />
      <Field Name="Authorization" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="24" />
      <Field Name="CacheControl" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Connection" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="ContentEncoding" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="13" />
      <Field Name="ContentLanguage" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="14" />
      <Field Name="ContentLength" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11" />
      <Field Name="ContentLocation" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="15" />
      <Field Name="ContentMd5" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="ContentRange" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="17" />
      <Field Name="ContentType" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="12" />
      <Field Name="Cookie" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="25" />
      <Field Name="Date" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Expect" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="26" />
      <Field Name="Expires" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="18" />
      <Field Name="From" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="27" />
      <Field Name="Host" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="28" />
      <Field Name="IfMatch" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="29" />
      <Field Name="IfModifiedSince" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="30" />
      <Field Name="IfNoneMatch" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="31" />
      <Field Name="IfRange" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="IfUnmodifiedSince" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="33" />
      <Field Name="KeepAlive" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="LastModified" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="19" />
      <Field Name="MaxForwards" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="34" />
      <Field Name="Pragma" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="ProxyAuthorization" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="35" />
      <Field Name="Range" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="37" />
      <Field Name="Referer" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="36" />
      <Field Name="Te" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="38" />
      <Field Name="Trailer" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="TransferEncoding" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Translate" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="39" />
      <Field Name="Upgrade" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="UserAgent" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="40" />
      <Field Name="Via" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="Warning" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9" />
    </Enumeration>
    <Enumeration Name="HttpResponseHeader" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AcceptRanges" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="20" />
      <Field Name="Age" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="21" />
      <Field Name="Allow" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10" />
      <Field Name="CacheControl" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Connection" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="ContentEncoding" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="13" />
      <Field Name="ContentLanguage" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="14" />
      <Field Name="ContentLength" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11" />
      <Field Name="ContentLocation" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="15" />
      <Field Name="ContentMd5" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="ContentRange" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="17" />
      <Field Name="ContentType" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="12" />
      <Field Name="Date" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="ETag" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="22" />
      <Field Name="Expires" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="18" />
      <Field Name="KeepAlive" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="LastModified" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="19" />
      <Field Name="Location" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="23" />
      <Field Name="Pragma" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="ProxyAuthenticate" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="24" />
      <Field Name="RetryAfter" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="25" />
      <Field Name="Server" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="26" />
      <Field Name="SetCookie" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="27" />
      <Field Name="Trailer" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="TransferEncoding" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Upgrade" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="Vary" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="28" />
      <Field Name="Via" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="Warning" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9" />
      <Field Name="WwwAuthenticate" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="29" />
    </Enumeration>
    <Enumeration Name="HttpStatusCode" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Accepted" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="202" />
      <Field Name="Ambiguous" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="300" />
      <Field Name="BadGateway" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="502" />
      <Field Name="BadRequest" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="400" />
      <Field Name="Conflict" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="409" />
      <Field Name="Continue" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="100" />
      <Field Name="Created" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="201" />
      <Field Name="ExpectationFailed" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="417" />
      <Field Name="Forbidden" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="403" />
      <Field Name="Found" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="302" />
      <Field Name="GatewayTimeout" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="504" />
      <Field Name="Gone" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="410" />
      <Field Name="HttpVersionNotSupported" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="505" />
      <Field Name="InternalServerError" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="500" />
      <Field Name="LengthRequired" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="411" />
      <Field Name="MethodNotAllowed" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="405" />
      <Field Name="Moved" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="301" />
      <Field Name="MovedPermanently" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="301" />
      <Field Name="MultipleChoices" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="300" />
      <Field Name="NoContent" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="204" />
      <Field Name="NonAuthoritativeInformation" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="203" />
      <Field Name="NotAcceptable" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="406" />
      <Field Name="NotFound" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="404" />
      <Field Name="NotImplemented" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="501" />
      <Field Name="NotModified" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="304" />
      <Field Name="OK" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="200" />
      <Field Name="PartialContent" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="206" />
      <Field Name="PaymentRequired" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="402" />
      <Field Name="PreconditionFailed" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="412" />
      <Field Name="ProxyAuthenticationRequired" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="407" />
      <Field Name="Redirect" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="302" />
      <Field Name="RedirectKeepVerb" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="307" />
      <Field Name="RedirectMethod" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="303" />
      <Field Name="RequestedRangeNotSatisfiable" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="416" />
      <Field Name="RequestEntityTooLarge" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="413" />
      <Field Name="RequestTimeout" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="408" />
      <Field Name="RequestUriTooLong" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="414" />
      <Field Name="ResetContent" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="205" />
      <Field Name="SeeOther" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="303" />
      <Field Name="ServiceUnavailable" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="503" />
      <Field Name="SwitchingProtocols" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="101" />
      <Field Name="TemporaryRedirect" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="307" />
      <Field Name="Unauthorized" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="401" />
      <Field Name="UnsupportedMediaType" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="415" />
      <Field Name="Unused" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="306" />
      <Field Name="UpgradeRequired" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="426" />
      <Field Name="UseProxy" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="305" />
    </Enumeration>
    <Class Name="HttpVersion" Type="System.Net.HttpVersion" BaseName="Object" BaseType="System.Object">
      <Field Name="Version10" Type="System.Version" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="Version11" Type="System.Version" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
    </Class>
    <Class Name="HttpWebRequest" Type="System.Net.HttpWebRequest" BaseName="WebRequest" BaseType="System.Net.WebRequest">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Property Name="Accept" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Address" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="AllowAutoRedirect" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="AllowReadStreamBuffering" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="AllowWriteStreamBuffering" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="AutomaticDecompression" Type="System.Net.DecompressionMethods" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="ClientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" IsWritable="True" />
      <Property Name="Connection" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ConnectionGroupName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ContentLength" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ContentType" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ContinueDelegate" Type="System.Net.HttpContinueDelegate" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsReadable="True" IsWritable="True" />
      <Property Name="ContinueTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="CookieContainer" Type="System.Net.CookieContainer" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Credentials" Type="System.Net.ICredentials" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Property Name="Date" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="DefaultCachePolicy" Type="System.Net.Cache.RequestCachePolicy" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="DefaultMaximumErrorResponseLength" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="DefaultMaximumResponseHeadersLength" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="Expect" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="HaveResponse" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Headers" Type="System.Net.WebHeaderCollection" BaseName="NameValueCollection" BaseType="System.Collections.Specialized.NameValueCollection" IsReadable="True" IsWritable="True" />
      <Property Name="Host" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="IfModifiedSince" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="KeepAlive" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="MaximumAutomaticRedirections" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="MaximumResponseHeadersLength" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="MediaType" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Method" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Pipelined" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="PreAuthenticate" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ProtocolVersion" Type="System.Version" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Proxy" Type="System.Net.IWebProxy" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Property Name="ReadWriteTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Referer" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="RequestUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SendChunked" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ServerCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsReadable="True" IsWritable="True" />
      <Property Name="ServicePoint" Type="System.Net.ServicePoint" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SupportsCookieContainer" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="TransferEncoding" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="UnsafeAuthenticatedConnectionSharing" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="UseDefaultCredentials" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="UserAgent" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Method Name="Abort" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="from" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="to" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="from" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="to" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="range" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="range" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rangeSpecifier" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="from" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="to" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rangeSpecifier" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="from" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="to" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rangeSpecifier" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="range" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rangeSpecifier" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="range" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="BeginGetRequestStream" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginGetResponse" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="EndGetRequestStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndGetRequestStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
        <Parameter Name="context" Type="System.Net.TransportContext&amp;" IsByRef="True" ElementType="System.Net.TransportContext" />
      </Method>
      <Method Name="EndGetResponse" Type="System.Net.WebResponse" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="GetRequestStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      <Method Name="GetRequestStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="context" Type="System.Net.TransportContext&amp;" IsByRef="True" ElementType="System.Net.TransportContext" />
      </Method>
      <Method Name="GetResponse" Type="System.Net.WebResponse" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
    </Class>
    <Class Name="HttpWebResponse" Type="System.Net.HttpWebResponse" BaseName="WebResponse" BaseType="System.Net.WebResponse">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="CharacterSet" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ContentEncoding" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ContentLength" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ContentType" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Cookies" Type="System.Net.CookieCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Headers" Type="System.Net.WebHeaderCollection" BaseName="NameValueCollection" BaseType="System.Collections.Specialized.NameValueCollection" IsReadable="True" />
      <Property Name="IsMutuallyAuthenticated" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="LastModified" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Method" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ProtocolVersion" Type="System.Version" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ResponseUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Server" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="StatusCode" Type="System.Net.HttpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="StatusDescription" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SupportsHeaders" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetResponseHeader" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="headerName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetResponseStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
    </Class>
    <Interface Name="IAuthenticationModule" Type="System.Net.IAuthenticationModule" IsInterface="True">
      <Property Name="AuthenticationType" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="CanPreAuthenticate" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="Authenticate" Type="System.Net.Authorization" BaseName="Object" BaseType="System.Object">
        <Parameter Name="challenge" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="request" Type="System.Net.WebRequest" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" IsInterface="True" />
      </Method>
      <Method Name="PreAuthenticate" Type="System.Net.Authorization" BaseName="Object" BaseType="System.Object">
        <Parameter Name="request" Type="System.Net.WebRequest" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" IsInterface="True" />
      </Method>
    </Interface>
    <Interface Name="ICertificatePolicy" Type="System.Net.ICertificatePolicy" IsInterface="True">
      <Method Name="CheckValidationResult" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="srvPoint" Type="System.Net.ServicePoint" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="request" Type="System.Net.WebRequest" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="certificateProblem" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Interface>
    <Interface Name="ICredentialPolicy" Type="System.Net.ICredentialPolicy" IsInterface="True">
      <Method Name="ShouldSendCredential" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="challengeUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="request" Type="System.Net.WebRequest" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" IsInterface="True" />
      </Method>
    </Interface>
    <Interface Name="ICredentials" Type="System.Net.ICredentials" IsInterface="True">
      <Method Name="GetCredential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object">
        <Parameter Name="uri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="authType" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Interface>
    <Interface Name="ICredentialsByHost" Type="System.Net.ICredentialsByHost" IsInterface="True">
      <Method Name="GetCredential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object">
        <Parameter Name="host" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="authenticationType" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Interface>
    <Class Name="IPAddress" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object">
      <Field Name="Any" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="Broadcast" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="IPv6Any" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="IPv6Loopback" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="IPv6None" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="Loopback" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="None" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Address" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="AddressFamily" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="IsIPv4MappedToIPv6" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsIPv6LinkLocal" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsIPv6Multicast" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsIPv6SiteLocal" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsIPv6Teredo" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ScopeId" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="newAddress" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="address" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="scopeid" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="address" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="comparand" Type="System.Object" />
      </Method>
      <Method Name="GetAddressBytes" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="HostToNetworkOrder" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="host" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="HostToNetworkOrder" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="host" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="HostToNetworkOrder" Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="host" Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IsLoopback" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="MapToIPv4" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      <Method Name="MapToIPv6" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      <Method Name="NetworkToHostOrder" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="network" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="NetworkToHostOrder" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="network" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="NetworkToHostOrder" Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="network" Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Parse" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="ipString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="TryParse" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="ipString" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="address" Type="System.Net.IPAddress&amp;" IsByRef="True" ElementType="System.Net.IPAddress" />
      </Method>
    </Class>
    <Class Name="IPEndPoint" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint">
      <Field Name="MaxPort" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="65535" />
      <Field Name="MinPort" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Property Name="Address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="AddressFamily" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="address" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Create" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object">
        <Parameter Name="socketAddress" Type="System.Net.SocketAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="comparand" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Serialize" Type="System.Net.SocketAddress" BaseName="Object" BaseType="System.Object" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="IPHostEntry" Type="System.Net.IPHostEntry" BaseName="Object" BaseType="System.Object">
      <Property Name="AddressList" Type="System.Net.IPAddress[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.IPAddress" IsReadable="True" IsWritable="True" />
      <Property Name="Aliases" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" IsReadable="True" IsWritable="True" />
      <Property Name="HostName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
    </Class>
    <Interface Name="IWebProxy" Type="System.Net.IWebProxy" IsInterface="True">
      <Property Name="Credentials" Type="System.Net.ICredentials" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Method Name="GetProxy" Type="System.Uri" BaseName="Object" BaseType="System.Object">
        <Parameter Name="destination" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="IsBypassed" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="host" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Interface>
    <Interface Name="IWebProxyScript" Type="System.Net.IWebProxyScript" IsInterface="True">
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Load" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="scriptLocation" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="script" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="helperType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="Run" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="url" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="host" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Interface>
    <Interface Name="IWebRequestCreate" Type="System.Net.IWebRequestCreate" IsInterface="True">
      <Method Name="Create" Type="System.Net.WebRequest" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="uri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Interface>
    <Enumeration Name="NetworkAccess" Type="System.Net.NetworkAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Accept" Type="System.Net.NetworkAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="128" />
      <Field Name="Connect" Type="System.Net.NetworkAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
    </Enumeration>
    <Class Name="NetworkCredential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Net.ICredentials" />
      <ImplementedInterface Type="System.Net.ICredentialsByHost" />
      <Property Name="Domain" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Password" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="SecurePassword" Type="System.Security.SecureString" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="UserName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="userName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="password" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="userName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="password" Type="System.Security.SecureString" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="userName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="password" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="domain" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="userName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="password" Type="System.Security.SecureString" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="domain" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="GetCredential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object">
        <Parameter Name="uri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="authType" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetCredential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object">
        <Parameter Name="host" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="authenticationType" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="OpenReadCompletedEventArgs" Type="System.Net.OpenReadCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs">
      <Property Name="Result" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" IsReadable="True" />
    </Class>
    <Class Name="OpenReadCompletedEventHandler" Type="System.Net.OpenReadCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.OpenReadCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.OpenReadCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Method>
    </Class>
    <Class Name="OpenWriteCompletedEventArgs" Type="System.Net.OpenWriteCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs">
      <Property Name="Result" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" IsReadable="True" />
    </Class>
    <Class Name="OpenWriteCompletedEventHandler" Type="System.Net.OpenWriteCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.OpenWriteCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.OpenWriteCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Method>
    </Class>
    <Class Name="ProtocolViolationException" Type="System.Net.ProtocolViolationException" BaseName="InvalidOperationException" BaseType="System.InvalidOperationException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="GetObjectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Enumeration Name="SecurityProtocolType" Type="System.Net.SecurityProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Ssl3" Type="System.Net.SecurityProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="48" />
      <Field Name="SystemDefault" Type="System.Net.SecurityProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Tls" Type="System.Net.SecurityProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="192" />
      <Field Name="Tls11" Type="System.Net.SecurityProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="768" />
      <Field Name="Tls12" Type="System.Net.SecurityProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3072" />
    </Enumeration>
    <Class Name="ServicePoint" Type="System.Net.ServicePoint" BaseName="Object" BaseType="System.Object">
      <Property Name="Address" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="BindIPEndPointDelegate" Type="System.Net.BindIPEndPoint" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsReadable="True" IsWritable="True" />
      <Property Name="Certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ClientCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ConnectionLeaseTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ConnectionLimit" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ConnectionName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="CurrentConnections" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Expect100Continue" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IdleSince" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MaxIdleTime" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ProtocolVersion" Type="System.Version" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ReceiveBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="SupportsPipelining" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="UseNagleAlgorithm" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Method Name="CloseConnectionGroup" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="connectionGroupName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SetTcpKeepAlive" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="enabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="keepAliveTime" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="keepAliveInterval" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="ServicePointManager" Type="System.Net.ServicePointManager" BaseName="Object" BaseType="System.Object">
      <Field Name="DefaultNonPersistentConnectionLimit" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="DefaultPersistentConnectionLimit" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Property Name="CertificatePolicy" Type="System.Net.ICertificatePolicy" IsInterface="True" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="CheckCertificateRevocationList" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="DefaultConnectionLimit" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="DnsRefreshTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="EnableDnsRoundRobin" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="EncryptionPolicy" Type="System.Net.Security.EncryptionPolicy" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" />
      <Property Name="Expect100Continue" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="MaxServicePointIdleTime" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="MaxServicePoints" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="ReusePort" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="SecurityProtocol" Type="System.Net.SecurityProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="ServerCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="UseNagleAlgorithm" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Method Name="FindServicePoint" Type="System.Net.ServicePoint" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="FindServicePoint" Type="System.Net.ServicePoint" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="uriString" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="proxy" Type="System.Net.IWebProxy" IsInterface="True" />
      </Method>
      <Method Name="FindServicePoint" Type="System.Net.ServicePoint" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="proxy" Type="System.Net.IWebProxy" IsInterface="True" />
      </Method>
      <Method Name="SetTcpKeepAlive" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="enabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="keepAliveTime" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="keepAliveInterval" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="SocketAddress" Type="System.Net.SocketAddress" BaseName="Object" BaseType="System.Object">
      <Property Name="Family" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Constructor>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="comparand" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="SocketPermission" Type="System.Net.SocketPermission" BaseName="CodeAccessPermission" BaseType="System.Security.CodeAccessPermission">
      <ImplementedInterface Type="System.Security.IPermission" />
      <ImplementedInterface Type="System.Security.ISecurityEncodable" />
      <ImplementedInterface Type="System.Security.IStackWalk" />
      <ImplementedInterface Type="System.Security.Permissions.IUnrestrictedPermission" />
      <Field Name="AllPorts" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
      <Property Name="AcceptList" Type="System.Collections.IEnumerator" IsInterface="True" IsReadable="True" />
      <Property Name="ConnectList" Type="System.Collections.IEnumerator" IsInterface="True" IsReadable="True" />
      <Constructor>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="access" Type="System.Net.NetworkAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="transport" Type="System.Net.TransportType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="hostName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="portNumber" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="AddPermission" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="access" Type="System.Net.NetworkAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="transport" Type="System.Net.TransportType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="hostName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="portNumber" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Copy" Type="System.Security.IPermission" IsInterface="True" />
      <Method Name="FromXml" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Intersect" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsSubsetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsUnrestricted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToXml" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      <Method Name="Union" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="SocketPermissionAttribute" Type="System.Net.SocketPermissionAttribute" BaseName="CodeAccessSecurityAttribute" BaseType="System.Security.Permissions.CodeAccessSecurityAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Access" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Host" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Port" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Transport" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="CreatePermission" Type="System.Security.IPermission" IsInterface="True" />
    </Class>
    <Class Name="TransportContext" Type="System.Net.TransportContext" BaseName="Object" BaseType="System.Object">
      <Method Name="GetChannelBinding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
        <Parameter Name="kind" Type="System.Security.Authentication.ExtendedProtection.ChannelBindingKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="GetTlsTokenBindings" Type="System.Collections.Generic.IEnumerable`1&lt;System.Security.Authentication.ExtendedProtection.TokenBinding&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Security.Authentication.ExtendedProtection.TokenBinding" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Enumeration Name="TransportType" Type="System.Net.TransportType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="All" Type="System.Net.TransportType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Connectionless" Type="System.Net.TransportType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="ConnectionOriented" Type="System.Net.TransportType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Tcp" Type="System.Net.TransportType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Udp" Type="System.Net.TransportType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="UploadDataCompletedEventArgs" Type="System.Net.UploadDataCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs">
      <Property Name="Result" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" />
    </Class>
    <Class Name="UploadDataCompletedEventHandler" Type="System.Net.UploadDataCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.UploadDataCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.UploadDataCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Method>
    </Class>
    <Class Name="UploadFileCompletedEventArgs" Type="System.Net.UploadFileCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs">
      <Property Name="Result" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" />
    </Class>
    <Class Name="UploadFileCompletedEventHandler" Type="System.Net.UploadFileCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.UploadFileCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.UploadFileCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Method>
    </Class>
    <Class Name="UploadProgressChangedEventArgs" Type="System.Net.UploadProgressChangedEventArgs" BaseName="ProgressChangedEventArgs" BaseType="System.ComponentModel.ProgressChangedEventArgs">
      <Property Name="BytesReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="BytesSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TotalBytesToReceive" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TotalBytesToSend" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="UploadProgressChangedEventHandler" Type="System.Net.UploadProgressChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.UploadProgressChangedEventArgs" BaseName="ProgressChangedEventArgs" BaseType="System.ComponentModel.ProgressChangedEventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.UploadProgressChangedEventArgs" BaseName="ProgressChangedEventArgs" BaseType="System.ComponentModel.ProgressChangedEventArgs" />
      </Method>
    </Class>
    <Class Name="UploadStringCompletedEventArgs" Type="System.Net.UploadStringCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs">
      <Property Name="Result" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Class Name="UploadStringCompletedEventHandler" Type="System.Net.UploadStringCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.UploadStringCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.UploadStringCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Method>
    </Class>
    <Class Name="UploadValuesCompletedEventArgs" Type="System.Net.UploadValuesCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs">
      <Property Name="Result" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" />
    </Class>
    <Class Name="UploadValuesCompletedEventHandler" Type="System.Net.UploadValuesCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.UploadValuesCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.UploadValuesCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Method>
    </Class>
    <Class Name="WebClient" Type="System.Net.WebClient" BaseName="Component" BaseType="System.ComponentModel.Component">
      <ImplementedInterface Type="System.ComponentModel.IComponent" />
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="AllowReadStreamBuffering" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="AllowWriteStreamBuffering" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="BaseAddress" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="CachePolicy" Type="System.Net.Cache.RequestCachePolicy" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Credentials" Type="System.Net.ICredentials" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Property Name="Encoding" Type="System.Text.Encoding" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Headers" Type="System.Net.WebHeaderCollection" BaseName="NameValueCollection" BaseType="System.Collections.Specialized.NameValueCollection" IsReadable="True" IsWritable="True" />
      <Property Name="IsBusy" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Proxy" Type="System.Net.IWebProxy" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Property Name="QueryString" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" IsReadable="True" IsWritable="True" />
      <Property Name="ResponseHeaders" Type="System.Net.WebHeaderCollection" BaseName="NameValueCollection" BaseType="System.Collections.Specialized.NameValueCollection" IsReadable="True" />
      <Property Name="UseDefaultCredentials" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Method Name="CancelAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="DownloadData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DownloadData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DownloadDataAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DownloadDataAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="DownloadDataTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.Byte[]&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DownloadDataTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.Byte[]&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DownloadFile" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DownloadFile" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DownloadFileAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DownloadFileAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="DownloadFileTaskAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DownloadFileTaskAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DownloadString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DownloadString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DownloadStringAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DownloadStringAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="DownloadStringTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.String&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DownloadStringTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.String&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OpenRead" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OpenRead" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OpenReadAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OpenReadAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="OpenReadTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.IO.Stream&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OpenReadTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.IO.Stream&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OpenWrite" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OpenWrite" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OpenWrite" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OpenWrite" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OpenWriteAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OpenWriteAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OpenWriteAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="OpenWriteTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.IO.Stream&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OpenWriteTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.IO.Stream&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OpenWriteTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.IO.Stream&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OpenWriteTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.IO.Stream&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="UploadData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="UploadData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="UploadData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="UploadDataAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="UploadDataAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="UploadDataAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="UploadDataTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.Byte[]&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="UploadDataTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.Byte[]&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="UploadDataTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.Byte[]&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="UploadDataTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.Byte[]&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="UploadFile" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadFile" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadFile" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadFile" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadFileAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadFileAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadFileAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="UploadFileTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.Byte[]&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadFileTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.Byte[]&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadFileTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.Byte[]&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadFileTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.Byte[]&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadStringAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadStringAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadStringAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="UploadStringTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.String&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadStringTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.String&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadStringTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.String&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadStringTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.String&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UploadValues" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" />
      </Method>
      <Method Name="UploadValues" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" />
      </Method>
      <Method Name="UploadValues" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" />
      </Method>
      <Method Name="UploadValues" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" />
      </Method>
      <Method Name="UploadValuesAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" />
      </Method>
      <Method Name="UploadValuesAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" />
      </Method>
      <Method Name="UploadValuesAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="UploadValuesTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.Byte[]&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" />
      </Method>
      <Method Name="UploadValuesTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.Byte[]&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" />
      </Method>
      <Method Name="UploadValuesTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.Byte[]&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" />
      </Method>
      <Method Name="UploadValuesTaskAsync" Type="System.Threading.Tasks.Task`1&lt;System.Byte[]&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="method" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" />
      </Method>
      <Event Name="DownloadDataCompleted" Type="System.Net.DownloadDataCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.DownloadDataCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Event>
      <Event Name="DownloadFileCompleted" Type="System.ComponentModel.AsyncCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="DownloadProgressChanged" Type="System.Net.DownloadProgressChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.DownloadProgressChangedEventArgs" BaseName="ProgressChangedEventArgs" BaseType="System.ComponentModel.ProgressChangedEventArgs" />
      </Event>
      <Event Name="DownloadStringCompleted" Type="System.Net.DownloadStringCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.DownloadStringCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Event>
      <Event Name="OpenReadCompleted" Type="System.Net.OpenReadCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.OpenReadCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Event>
      <Event Name="OpenWriteCompleted" Type="System.Net.OpenWriteCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.OpenWriteCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Event>
      <Event Name="UploadDataCompleted" Type="System.Net.UploadDataCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.UploadDataCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Event>
      <Event Name="UploadFileCompleted" Type="System.Net.UploadFileCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.UploadFileCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Event>
      <Event Name="UploadProgressChanged" Type="System.Net.UploadProgressChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.UploadProgressChangedEventArgs" BaseName="ProgressChangedEventArgs" BaseType="System.ComponentModel.ProgressChangedEventArgs" />
      </Event>
      <Event Name="UploadStringCompleted" Type="System.Net.UploadStringCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.UploadStringCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Event>
      <Event Name="UploadValuesCompleted" Type="System.Net.UploadValuesCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.UploadValuesCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Event>
      <Event Name="WriteStreamClosed" Type="System.Net.WriteStreamClosedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.WriteStreamClosedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Class Name="WebException" Type="System.Net.WebException" BaseName="InvalidOperationException" BaseType="System.InvalidOperationException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Property Name="Response" Type="System.Net.WebResponse" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" IsReadable="True" />
      <Property Name="Status" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="status" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="status" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="response" Type="System.Net.WebResponse" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Constructor>
      <Method Name="GetObjectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Enumeration Name="WebExceptionStatus" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="CacheEntryNotFound" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="18" />
      <Field Name="ConnectFailure" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="ConnectionClosed" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="KeepAliveFailure" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="12" />
      <Field Name="MessageLengthLimitExceeded" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="17" />
      <Field Name="NameResolutionFailure" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Pending" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="13" />
      <Field Name="PipelineFailure" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="ProtocolError" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="ProxyNameResolutionFailure" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="15" />
      <Field Name="ReceiveFailure" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="RequestCanceled" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="RequestProhibitedByCachePolicy" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="19" />
      <Field Name="RequestProhibitedByProxy" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="20" />
      <Field Name="SecureChannelFailure" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10" />
      <Field Name="SendFailure" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="ServerProtocolViolation" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11" />
      <Field Name="Success" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Timeout" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="14" />
      <Field Name="TrustFailure" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9" />
      <Field Name="UnknownError" Type="System.Net.WebExceptionStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
    </Enumeration>
    <Class Name="WebHeaderCollection" Type="System.Net.WebHeaderCollection" BaseName="NameValueCollection" BaseType="System.Collections.Specialized.NameValueCollection">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.Serialization.IDeserializationCallback" />
      <Property Name="AllKeys" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" IsReadable="True" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Keys" Type="System.Collections.Specialized.NameObjectCollectionBase+KeysCollection" BaseName="Object" BaseType="System.Object" IsNested="True" IsReadable="True" />
      <Method Name="get_Item" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="header" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="header" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="get_Item" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="header" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="header" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="header" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="header" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="header" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Get" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Get" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
      <Method Name="GetKey" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetObjectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetValues" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String">
        <Parameter Name="header" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetValues" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IsRestricted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="headerName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="IsRestricted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="headerName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="response" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="OnDeserialization" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="header" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="header" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Set" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="header" Type="System.Net.HttpRequestHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Set" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Set" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="header" Type="System.Net.HttpResponseHeader" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ToByteArray" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="WebPermission" Type="System.Net.WebPermission" BaseName="CodeAccessPermission" BaseType="System.Security.CodeAccessPermission">
      <ImplementedInterface Type="System.Security.IPermission" />
      <ImplementedInterface Type="System.Security.ISecurityEncodable" />
      <ImplementedInterface Type="System.Security.IStackWalk" />
      <ImplementedInterface Type="System.Security.Permissions.IUnrestrictedPermission" />
      <Property Name="AcceptList" Type="System.Collections.IEnumerator" IsInterface="True" IsReadable="True" />
      <Property Name="ConnectList" Type="System.Collections.IEnumerator" IsInterface="True" IsReadable="True" />
      <Constructor>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="access" Type="System.Net.NetworkAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="uriRegex" Type="System.Text.RegularExpressions.Regex" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="access" Type="System.Net.NetworkAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="uriString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="AddPermission" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="access" Type="System.Net.NetworkAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="uriString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddPermission" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="access" Type="System.Net.NetworkAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="uriRegex" Type="System.Text.RegularExpressions.Regex" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Copy" Type="System.Security.IPermission" IsInterface="True" />
      <Method Name="FromXml" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Intersect" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsSubsetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsUnrestricted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToXml" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      <Method Name="Union" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="WebPermissionAttribute" Type="System.Net.WebPermissionAttribute" BaseName="CodeAccessSecurityAttribute" BaseType="System.Security.Permissions.CodeAccessSecurityAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Accept" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="AcceptPattern" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Connect" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ConnectPattern" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="CreatePermission" Type="System.Security.IPermission" IsInterface="True" />
    </Class>
    <Class Name="WebProxy" Type="System.Net.WebProxy" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Net.IWebProxy" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Property Name="Address" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="BypassArrayList" Type="System.Collections.ArrayList" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="BypassList" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" IsReadable="True" IsWritable="True" />
      <Property Name="BypassProxyOnLocal" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Credentials" Type="System.Net.ICredentials" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Property Name="UseDefaultCredentials" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="Address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="Address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="Address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="BypassList" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
      </Constructor>
      <Constructor>
        <Parameter Name="Address" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="BypassList" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
        <Parameter Name="Credentials" Type="System.Net.ICredentials" IsInterface="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="Host" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="Port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="Address" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="Address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="Address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="BypassList" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
      </Constructor>
      <Constructor>
        <Parameter Name="Address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="BypassList" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
        <Parameter Name="Credentials" Type="System.Net.ICredentials" IsInterface="True" />
      </Constructor>
      <Method Name="GetDefaultProxy" Type="System.Net.WebProxy" BaseName="Object" BaseType="System.Object" IsStatic="True" />
      <Method Name="GetProxy" Type="System.Uri" BaseName="Object" BaseType="System.Object">
        <Parameter Name="destination" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="IsBypassed" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="host" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="WebRequest" Type="System.Net.WebRequest" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Property Name="AuthenticationLevel" Type="System.Net.Security.AuthenticationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="CachePolicy" Type="System.Net.Cache.RequestCachePolicy" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ConnectionGroupName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ContentLength" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ContentType" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="CreatorInstance" Type="System.Net.IWebRequestCreate" IsInterface="True" IsReadable="True" />
      <Property Name="Credentials" Type="System.Net.ICredentials" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Property Name="DefaultCachePolicy" Type="System.Net.Cache.RequestCachePolicy" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="DefaultWebProxy" Type="System.Net.IWebProxy" IsInterface="True" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="Headers" Type="System.Net.WebHeaderCollection" BaseName="NameValueCollection" BaseType="System.Collections.Specialized.NameValueCollection" IsReadable="True" IsWritable="True" />
      <Property Name="ImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="Method" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="PreAuthenticate" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Proxy" Type="System.Net.IWebProxy" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Property Name="RequestUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="UseDefaultCredentials" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Method Name="Abort" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="BeginGetRequestStream" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginGetResponse" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="Create" Type="System.Net.WebRequest" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" IsStatic="True">
        <Parameter Name="requestUriString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Create" Type="System.Net.WebRequest" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" IsStatic="True">
        <Parameter Name="requestUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateDefault" Type="System.Net.WebRequest" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" IsStatic="True">
        <Parameter Name="requestUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateHttp" Type="System.Net.HttpWebRequest" BaseName="WebRequest" BaseType="System.Net.WebRequest" IsStatic="True">
        <Parameter Name="requestUriString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateHttp" Type="System.Net.HttpWebRequest" BaseName="WebRequest" BaseType="System.Net.WebRequest" IsStatic="True">
        <Parameter Name="requestUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="EndGetRequestStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndGetResponse" Type="System.Net.WebResponse" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="GetRequestStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      <Method Name="GetRequestStreamAsync" Type="System.Threading.Tasks.Task`1&lt;System.IO.Stream&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Method>
      <Method Name="GetResponse" Type="System.Net.WebResponse" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      <Method Name="GetResponseAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.WebResponse&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.WebResponse" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Method>
      <Method Name="GetSystemWebProxy" Type="System.Net.IWebProxy" IsInterface="True" IsStatic="True" />
      <Method Name="RegisterPortableWebRequestCreator" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="creator" Type="System.Net.IWebRequestCreate" IsInterface="True" />
      </Method>
      <Method Name="RegisterPrefix" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="prefix" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="creator" Type="System.Net.IWebRequestCreate" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="WebRequestMethods" Type="System.Net.WebRequestMethods" BaseName="Object" BaseType="System.Object" />
    <Class Name="WebRequestMethods.File" Type="System.Net.WebRequestMethods+File" BaseName="Object" BaseType="System.Object" IsNested="True">
      <Field Name="DownloadFile" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="GET" />
      <Field Name="UploadFile" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="PUT" />
    </Class>
    <Class Name="WebRequestMethods.Ftp" Type="System.Net.WebRequestMethods+Ftp" BaseName="Object" BaseType="System.Object" IsNested="True">
      <Field Name="AppendFile" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="APPE" />
      <Field Name="DeleteFile" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="DELE" />
      <Field Name="DownloadFile" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="RETR" />
      <Field Name="GetDateTimestamp" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="MDTM" />
      <Field Name="GetFileSize" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="SIZE" />
      <Field Name="ListDirectory" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="NLST" />
      <Field Name="ListDirectoryDetails" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="LIST" />
      <Field Name="MakeDirectory" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="MKD" />
      <Field Name="PrintWorkingDirectory" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="PWD" />
      <Field Name="RemoveDirectory" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="RMD" />
      <Field Name="Rename" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="RENAME" />
      <Field Name="UploadFile" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="STOR" />
      <Field Name="UploadFileWithUniqueName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="STOU" />
    </Class>
    <Class Name="WebRequestMethods.Http" Type="System.Net.WebRequestMethods+Http" BaseName="Object" BaseType="System.Object" IsNested="True">
      <Field Name="Connect" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="CONNECT" />
      <Field Name="Get" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="GET" />
      <Field Name="Head" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="HEAD" />
      <Field Name="MkCol" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="MKCOL" />
      <Field Name="Post" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="POST" />
      <Field Name="Put" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="PUT" />
    </Class>
    <Class Name="WebResponse" Type="System.Net.WebResponse" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="ContentLength" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ContentType" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Headers" Type="System.Net.WebHeaderCollection" BaseName="NameValueCollection" BaseType="System.Collections.Specialized.NameValueCollection" IsReadable="True" />
      <Property Name="IsFromCache" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsMutuallyAuthenticated" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ResponseUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SupportsHeaders" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetResponseStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
    </Class>
    <Class Name="WebUtility" Type="System.Net.WebUtility" BaseName="Object" BaseType="System.Object">
      <Method Name="HtmlDecode" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="HtmlDecode" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="output" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Method>
      <Method Name="HtmlEncode" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="HtmlEncode" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="output" Type="System.IO.TextWriter" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Method>
      <Method Name="UrlDecode" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="encodedValue" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UrlDecodeToBytes" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsStatic="True">
        <Parameter Name="encodedValue" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="UrlEncode" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="UrlEncodeToBytes" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsStatic="True">
        <Parameter Name="value" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="WriteStreamClosedEventArgs" Type="System.Net.WriteStreamClosedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Error" Type="System.Exception" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Class Name="WriteStreamClosedEventHandler" Type="System.Net.WriteStreamClosedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.WriteStreamClosedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.WriteStreamClosedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.Net.Cache">
    <Enumeration Name="HttpCacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="MaxAge" Type="System.Net.Cache.HttpCacheAgeControl" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="MaxAgeAndMaxStale" Type="System.Net.Cache.HttpCacheAgeControl" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="MaxAgeAndMinFresh" Type="System.Net.Cache.HttpCacheAgeControl" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="MaxStale" Type="System.Net.Cache.HttpCacheAgeControl" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="MinFresh" Type="System.Net.Cache.HttpCacheAgeControl" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="None" Type="System.Net.Cache.HttpCacheAgeControl" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Enumeration Name="HttpRequestCacheLevel" Type="System.Net.Cache.HttpRequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="BypassCache" Type="System.Net.Cache.HttpRequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="CacheIfAvailable" Type="System.Net.Cache.HttpRequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="CacheOnly" Type="System.Net.Cache.HttpRequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="CacheOrNextCacheOnly" Type="System.Net.Cache.HttpRequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="Default" Type="System.Net.Cache.HttpRequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="NoCacheNoStore" Type="System.Net.Cache.HttpRequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Refresh" Type="System.Net.Cache.HttpRequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="Reload" Type="System.Net.Cache.HttpRequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="Revalidate" Type="System.Net.Cache.HttpRequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
    </Enumeration>
    <Class Name="HttpRequestCachePolicy" Type="System.Net.Cache.HttpRequestCachePolicy" BaseName="RequestCachePolicy" BaseType="System.Net.Cache.RequestCachePolicy">
      <Property Name="CacheSyncDate" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Level" Type="System.Net.Cache.HttpRequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="MaxAge" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MaxStale" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MinFresh" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="level" Type="System.Net.Cache.HttpRequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="ageOrFreshOrStale" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="maxAge" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="freshOrStale" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="cacheSyncDate" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="maxAge" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="freshOrStale" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="cacheSyncDate" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Enumeration Name="RequestCacheLevel" Type="System.Net.Cache.RequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="BypassCache" Type="System.Net.Cache.RequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="CacheIfAvailable" Type="System.Net.Cache.RequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="CacheOnly" Type="System.Net.Cache.RequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Default" Type="System.Net.Cache.RequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="NoCacheNoStore" Type="System.Net.Cache.RequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Reload" Type="System.Net.Cache.RequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="Revalidate" Type="System.Net.Cache.RequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
    </Enumeration>
    <Class Name="RequestCachePolicy" Type="System.Net.Cache.RequestCachePolicy" BaseName="Object" BaseType="System.Object">
      <Property Name="Level" Type="System.Net.Cache.RequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="level" Type="System.Net.Cache.RequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
  </Namespace>
  <Namespace Name="System.Net.Configuration">
    <Class Name="AuthenticationModuleElement" Type="System.Net.Configuration.AuthenticationModuleElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="Type" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="typeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="AuthenticationModuleElementCollection" Type="System.Net.Configuration.AuthenticationModuleElementCollection" BaseName="ConfigurationElementCollection" BaseType="System.Configuration.ConfigurationElementCollection">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.Net.Configuration.AuthenticationModuleElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Net.Configuration.AuthenticationModuleElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="get_Item" Type="System.Net.Configuration.AuthenticationModuleElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Net.Configuration.AuthenticationModuleElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="element" Type="System.Net.Configuration.AuthenticationModuleElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="element" Type="System.Net.Configuration.AuthenticationModuleElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="element" Type="System.Net.Configuration.AuthenticationModuleElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="RemoveAt" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="AuthenticationModulesSection" Type="System.Net.Configuration.AuthenticationModulesSection" BaseName="ConfigurationSection" BaseType="System.Configuration.ConfigurationSection">
      <Property Name="AuthenticationModules" Type="System.Net.Configuration.AuthenticationModuleElementCollection" BaseName="ConfigurationElementCollection" BaseType="System.Configuration.ConfigurationElementCollection" IsReadable="True" />
    </Class>
    <Class Name="BypassElement" Type="System.Net.Configuration.BypassElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="Address" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="BypassElementCollection" Type="System.Net.Configuration.BypassElementCollection" BaseName="ConfigurationElementCollection" BaseType="System.Configuration.ConfigurationElementCollection">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.Net.Configuration.BypassElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Net.Configuration.BypassElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="get_Item" Type="System.Net.Configuration.BypassElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Net.Configuration.BypassElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="element" Type="System.Net.Configuration.BypassElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="element" Type="System.Net.Configuration.BypassElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="element" Type="System.Net.Configuration.BypassElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="RemoveAt" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="ConnectionManagementElement" Type="System.Net.Configuration.ConnectionManagementElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="Address" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="MaxConnection" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="maxConnection" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="ConnectionManagementElementCollection" Type="System.Net.Configuration.ConnectionManagementElementCollection" BaseName="ConfigurationElementCollection" BaseType="System.Configuration.ConfigurationElementCollection">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.Net.Configuration.ConnectionManagementElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Net.Configuration.ConnectionManagementElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="get_Item" Type="System.Net.Configuration.ConnectionManagementElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Net.Configuration.ConnectionManagementElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="element" Type="System.Net.Configuration.ConnectionManagementElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="element" Type="System.Net.Configuration.ConnectionManagementElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="element" Type="System.Net.Configuration.ConnectionManagementElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="RemoveAt" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="ConnectionManagementSection" Type="System.Net.Configuration.ConnectionManagementSection" BaseName="ConfigurationSection" BaseType="System.Configuration.ConfigurationSection">
      <Property Name="ConnectionManagement" Type="System.Net.Configuration.ConnectionManagementElementCollection" BaseName="ConfigurationElementCollection" BaseType="System.Configuration.ConfigurationElementCollection" IsReadable="True" />
    </Class>
    <Class Name="DefaultProxySection" Type="System.Net.Configuration.DefaultProxySection" BaseName="ConfigurationSection" BaseType="System.Configuration.ConfigurationSection">
      <Property Name="BypassList" Type="System.Net.Configuration.BypassElementCollection" BaseName="ConfigurationElementCollection" BaseType="System.Configuration.ConfigurationElementCollection" IsReadable="True" />
      <Property Name="Enabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Module" Type="System.Net.Configuration.ModuleElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" IsReadable="True" />
      <Property Name="Proxy" Type="System.Net.Configuration.ProxyElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" IsReadable="True" />
      <Property Name="UseDefaultCredentials" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="FtpCachePolicyElement" Type="System.Net.Configuration.FtpCachePolicyElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="PolicyLevel" Type="System.Net.Cache.RequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="HttpCachePolicyElement" Type="System.Net.Configuration.HttpCachePolicyElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="MaximumAge" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="MaximumStale" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="MinimumFresh" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="PolicyLevel" Type="System.Net.Cache.HttpRequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="HttpListenerElement" Type="System.Net.Configuration.HttpListenerElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="Timeouts" Type="System.Net.Configuration.HttpListenerTimeoutsElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" IsReadable="True" />
      <Property Name="UnescapeRequestUrl" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="HttpListenerTimeoutsElement" Type="System.Net.Configuration.HttpListenerTimeoutsElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="DrainEntityBody" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="EntityBody" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="HeaderWait" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IdleConnection" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MinSendBytesPerSecond" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="RequestQueue" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="HttpWebRequestElement" Type="System.Net.Configuration.HttpWebRequestElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="MaximumErrorResponseLength" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="MaximumResponseHeadersLength" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="MaximumUnauthorizedUploadLength" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="UseUnsafeHeaderParsing" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="Ipv6Element" Type="System.Net.Configuration.Ipv6Element" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="Enabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="MailSettingsSectionGroup" Type="System.Net.Configuration.MailSettingsSectionGroup" BaseName="ConfigurationSectionGroup" BaseType="System.Configuration.ConfigurationSectionGroup">
      <Property Name="Smtp" Type="System.Net.Configuration.SmtpSection" BaseName="ConfigurationSection" BaseType="System.Configuration.ConfigurationSection" IsReadable="True" />
    </Class>
    <Class Name="ModuleElement" Type="System.Net.Configuration.ModuleElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="Type" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="NetSectionGroup" Type="System.Net.Configuration.NetSectionGroup" BaseName="ConfigurationSectionGroup" BaseType="System.Configuration.ConfigurationSectionGroup">
      <Property Name="AuthenticationModules" Type="System.Net.Configuration.AuthenticationModulesSection" BaseName="ConfigurationSection" BaseType="System.Configuration.ConfigurationSection" IsReadable="True" />
      <Property Name="ConnectionManagement" Type="System.Net.Configuration.ConnectionManagementSection" BaseName="ConfigurationSection" BaseType="System.Configuration.ConfigurationSection" IsReadable="True" />
      <Property Name="DefaultProxy" Type="System.Net.Configuration.DefaultProxySection" BaseName="ConfigurationSection" BaseType="System.Configuration.ConfigurationSection" IsReadable="True" />
      <Property Name="MailSettings" Type="System.Net.Configuration.MailSettingsSectionGroup" BaseName="ConfigurationSectionGroup" BaseType="System.Configuration.ConfigurationSectionGroup" IsReadable="True" />
      <Property Name="RequestCaching" Type="System.Net.Configuration.RequestCachingSection" BaseName="ConfigurationSection" BaseType="System.Configuration.ConfigurationSection" IsReadable="True" />
      <Property Name="Settings" Type="System.Net.Configuration.SettingsSection" BaseName="ConfigurationSection" BaseType="System.Configuration.ConfigurationSection" IsReadable="True" />
      <Property Name="WebRequestModules" Type="System.Net.Configuration.WebRequestModulesSection" BaseName="ConfigurationSection" BaseType="System.Configuration.ConfigurationSection" IsReadable="True" />
      <Method Name="GetSectionGroup" Type="System.Net.Configuration.NetSectionGroup" BaseName="ConfigurationSectionGroup" BaseType="System.Configuration.ConfigurationSectionGroup" IsStatic="True">
        <Parameter Name="config" Type="System.Configuration.Configuration" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="PerformanceCountersElement" Type="System.Net.Configuration.PerformanceCountersElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="Enabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="ProxyElement" Type="System.Net.Configuration.ProxyElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="AutoDetect" Type="System.Net.Configuration.ProxyElement+AutoDetectValues" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsWritable="True" />
      <Property Name="BypassOnLocal" Type="System.Net.Configuration.ProxyElement+BypassOnLocalValues" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsWritable="True" />
      <Property Name="ProxyAddress" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ScriptLocation" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="UseSystemDefault" Type="System.Net.Configuration.ProxyElement+UseSystemDefaultValues" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsWritable="True" />
    </Class>
    <Enumeration Name="ProxyElement.AutoDetectValues" Type="System.Net.Configuration.ProxyElement+AutoDetectValues" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="False" Type="System.Net.Configuration.ProxyElement+AutoDetectValues" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="True" Type="System.Net.Configuration.ProxyElement+AutoDetectValues" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Unspecified" Type="System.Net.Configuration.ProxyElement+AutoDetectValues" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
    </Enumeration>
    <Enumeration Name="ProxyElement.BypassOnLocalValues" Type="System.Net.Configuration.ProxyElement+BypassOnLocalValues" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="False" Type="System.Net.Configuration.ProxyElement+BypassOnLocalValues" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="True" Type="System.Net.Configuration.ProxyElement+BypassOnLocalValues" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Unspecified" Type="System.Net.Configuration.ProxyElement+BypassOnLocalValues" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
    </Enumeration>
    <Enumeration Name="ProxyElement.UseSystemDefaultValues" Type="System.Net.Configuration.ProxyElement+UseSystemDefaultValues" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="False" Type="System.Net.Configuration.ProxyElement+UseSystemDefaultValues" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="True" Type="System.Net.Configuration.ProxyElement+UseSystemDefaultValues" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Unspecified" Type="System.Net.Configuration.ProxyElement+UseSystemDefaultValues" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsNested="True" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
    </Enumeration>
    <Class Name="RequestCachingSection" Type="System.Net.Configuration.RequestCachingSection" BaseName="ConfigurationSection" BaseType="System.Configuration.ConfigurationSection">
      <Property Name="DefaultFtpCachePolicy" Type="System.Net.Configuration.FtpCachePolicyElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" IsReadable="True" />
      <Property Name="DefaultHttpCachePolicy" Type="System.Net.Configuration.HttpCachePolicyElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" IsReadable="True" />
      <Property Name="DefaultPolicyLevel" Type="System.Net.Cache.RequestCacheLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="DisableAllCaching" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IsPrivateCache" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="UnspecifiedMaximumAge" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="ServicePointManagerElement" Type="System.Net.Configuration.ServicePointManagerElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="CheckCertificateName" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="CheckCertificateRevocationList" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="DnsRefreshTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="EnableDnsRoundRobin" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="EncryptionPolicy" Type="System.Net.Security.EncryptionPolicy" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="Expect100Continue" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="UseNagleAlgorithm" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="SettingsSection" Type="System.Net.Configuration.SettingsSection" BaseName="ConfigurationSection" BaseType="System.Configuration.ConfigurationSection">
      <Property Name="HttpListener" Type="System.Net.Configuration.HttpListenerElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" IsReadable="True" />
      <Property Name="HttpWebRequest" Type="System.Net.Configuration.HttpWebRequestElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" IsReadable="True" />
      <Property Name="Ipv6" Type="System.Net.Configuration.Ipv6Element" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" IsReadable="True" />
      <Property Name="PerformanceCounters" Type="System.Net.Configuration.PerformanceCountersElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" IsReadable="True" />
      <Property Name="ServicePointManager" Type="System.Net.Configuration.ServicePointManagerElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" IsReadable="True" />
      <Property Name="Socket" Type="System.Net.Configuration.SocketElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" IsReadable="True" />
      <Property Name="WebProxyScript" Type="System.Net.Configuration.WebProxyScriptElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" IsReadable="True" />
      <Property Name="WebUtility" Type="System.Net.Configuration.WebUtilityElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" IsReadable="True" />
    </Class>
    <Class Name="SmtpNetworkElement" Type="System.Net.Configuration.SmtpNetworkElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="ClientDomain" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="DefaultCredentials" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="EnableSsl" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Host" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Password" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="TargetName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="UserName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="SmtpSection" Type="System.Net.Configuration.SmtpSection" BaseName="ConfigurationSection" BaseType="System.Configuration.ConfigurationSection">
      <Property Name="DeliveryFormat" Type="System.Net.Mail.SmtpDeliveryFormat" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="DeliveryMethod" Type="System.Net.Mail.SmtpDeliveryMethod" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="From" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Network" Type="System.Net.Configuration.SmtpNetworkElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" IsReadable="True" />
      <Property Name="SpecifiedPickupDirectory" Type="System.Net.Configuration.SmtpSpecifiedPickupDirectoryElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" IsReadable="True" />
    </Class>
    <Class Name="SmtpSpecifiedPickupDirectoryElement" Type="System.Net.Configuration.SmtpSpecifiedPickupDirectoryElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="PickupDirectoryLocation" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="SocketElement" Type="System.Net.Configuration.SocketElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="AlwaysUseCompletionPortsForAccept" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="AlwaysUseCompletionPortsForConnect" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="IPProtectionLevel" Type="System.Net.Sockets.IPProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
    </Class>
    <Enumeration Name="UnicodeDecodingConformance" Type="System.Net.Configuration.UnicodeDecodingConformance" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Auto" Type="System.Net.Configuration.UnicodeDecodingConformance" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Compat" Type="System.Net.Configuration.UnicodeDecodingConformance" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Loose" Type="System.Net.Configuration.UnicodeDecodingConformance" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Strict" Type="System.Net.Configuration.UnicodeDecodingConformance" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Enumeration Name="UnicodeEncodingConformance" Type="System.Net.Configuration.UnicodeEncodingConformance" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Auto" Type="System.Net.Configuration.UnicodeEncodingConformance" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Compat" Type="System.Net.Configuration.UnicodeEncodingConformance" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Strict" Type="System.Net.Configuration.UnicodeEncodingConformance" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="WebProxyScriptElement" Type="System.Net.Configuration.WebProxyScriptElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="DownloadTimeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="WebRequestModuleElement" Type="System.Net.Configuration.WebRequestModuleElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="Prefix" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="prefix" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="prefix" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
    </Class>
    <Class Name="WebRequestModuleElementCollection" Type="System.Net.Configuration.WebRequestModuleElementCollection" BaseName="ConfigurationElementCollection" BaseType="System.Configuration.ConfigurationElementCollection">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.Net.Configuration.WebRequestModuleElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Net.Configuration.WebRequestModuleElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="get_Item" Type="System.Net.Configuration.WebRequestModuleElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Net.Configuration.WebRequestModuleElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="element" Type="System.Net.Configuration.WebRequestModuleElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="element" Type="System.Net.Configuration.WebRequestModuleElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="element" Type="System.Net.Configuration.WebRequestModuleElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="RemoveAt" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="WebRequestModulesSection" Type="System.Net.Configuration.WebRequestModulesSection" BaseName="ConfigurationSection" BaseType="System.Configuration.ConfigurationSection">
      <Property Name="WebRequestModules" Type="System.Net.Configuration.WebRequestModuleElementCollection" BaseName="ConfigurationElementCollection" BaseType="System.Configuration.ConfigurationElementCollection" IsReadable="True" />
    </Class>
    <Class Name="WebUtilityElement" Type="System.Net.Configuration.WebUtilityElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="UnicodeDecodingConformance" Type="System.Net.Configuration.UnicodeDecodingConformance" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="UnicodeEncodingConformance" Type="System.Net.Configuration.UnicodeEncodingConformance" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
    </Class>
  </Namespace>
  <Namespace Name="System.Net.Mail">
    <Class Name="AlternateView" Type="System.Net.Mail.AlternateView" BaseName="AttachmentBase" BaseType="System.Net.Mail.AttachmentBase">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="BaseUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="LinkedResources" Type="System.Net.Mail.LinkedResourceCollection" BaseName="Collection`1&lt;LinkedResource&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.Mail.LinkedResource&gt;" IsReadable="True" />
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="mediaType" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="contentType" Type="System.Net.Mime.ContentType" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="contentStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="contentStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="mediaType" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="contentStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="contentType" Type="System.Net.Mime.ContentType" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="CreateAlternateViewFromString" Type="System.Net.Mail.AlternateView" BaseName="AttachmentBase" BaseType="System.Net.Mail.AttachmentBase" IsStatic="True">
        <Parameter Name="content" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateAlternateViewFromString" Type="System.Net.Mail.AlternateView" BaseName="AttachmentBase" BaseType="System.Net.Mail.AttachmentBase" IsStatic="True">
        <Parameter Name="content" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="contentEncoding" Type="System.Text.Encoding" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="mediaType" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateAlternateViewFromString" Type="System.Net.Mail.AlternateView" BaseName="AttachmentBase" BaseType="System.Net.Mail.AttachmentBase" IsStatic="True">
        <Parameter Name="content" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="contentType" Type="System.Net.Mime.ContentType" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="AlternateViewCollection" Type="System.Net.Mail.AlternateViewCollection" BaseName="Collection`1&lt;AlternateView&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.Mail.AlternateView&gt;">
      <ImplementedInterface Type="System.Collections.Generic.IList`1&lt;System.Net.Mail.AlternateView&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Net.Mail.AlternateView&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Net.Mail.AlternateView&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyList`1&lt;System.Net.Mail.AlternateView&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Net.Mail.AlternateView&gt;" />
      <ImplementedInterface Type="System.IDisposable" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="Attachment" Type="System.Net.Mail.Attachment" BaseName="AttachmentBase" BaseType="System.Net.Mail.AttachmentBase">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="ContentDisposition" Type="System.Net.Mime.ContentDisposition" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="NameEncoding" Type="System.Text.Encoding" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="mediaType" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="contentType" Type="System.Net.Mime.ContentType" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="contentStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="contentStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="mediaType" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="contentStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="contentType" Type="System.Net.Mime.ContentType" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="CreateAttachmentFromString" Type="System.Net.Mail.Attachment" BaseName="AttachmentBase" BaseType="System.Net.Mail.AttachmentBase" IsStatic="True">
        <Parameter Name="content" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateAttachmentFromString" Type="System.Net.Mail.Attachment" BaseName="AttachmentBase" BaseType="System.Net.Mail.AttachmentBase" IsStatic="True">
        <Parameter Name="content" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="contentEncoding" Type="System.Text.Encoding" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="mediaType" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateAttachmentFromString" Type="System.Net.Mail.Attachment" BaseName="AttachmentBase" BaseType="System.Net.Mail.AttachmentBase" IsStatic="True">
        <Parameter Name="content" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="contentType" Type="System.Net.Mime.ContentType" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="AttachmentBase" Type="System.Net.Mail.AttachmentBase" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="ContentId" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ContentStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" IsReadable="True" />
      <Property Name="ContentType" Type="System.Net.Mime.ContentType" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="TransferEncoding" Type="System.Net.Mime.TransferEncoding" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="AttachmentCollection" Type="System.Net.Mail.AttachmentCollection" BaseName="Collection`1&lt;Attachment&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.Mail.Attachment&gt;">
      <ImplementedInterface Type="System.Collections.Generic.IList`1&lt;System.Net.Mail.Attachment&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Net.Mail.Attachment&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Net.Mail.Attachment&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyList`1&lt;System.Net.Mail.Attachment&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Net.Mail.Attachment&gt;" />
      <ImplementedInterface Type="System.IDisposable" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Enumeration Name="DeliveryNotificationOptions" Type="System.Net.Mail.DeliveryNotificationOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Delay" Type="System.Net.Mail.DeliveryNotificationOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Never" Type="System.Net.Mail.DeliveryNotificationOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="134217728" />
      <Field Name="None" Type="System.Net.Mail.DeliveryNotificationOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="OnFailure" Type="System.Net.Mail.DeliveryNotificationOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="OnSuccess" Type="System.Net.Mail.DeliveryNotificationOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="LinkedResource" Type="System.Net.Mail.LinkedResource" BaseName="AttachmentBase" BaseType="System.Net.Mail.AttachmentBase">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="ContentLink" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="mediaType" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="contentType" Type="System.Net.Mime.ContentType" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="contentStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="contentStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="mediaType" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="contentStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="contentType" Type="System.Net.Mime.ContentType" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="CreateLinkedResourceFromString" Type="System.Net.Mail.LinkedResource" BaseName="AttachmentBase" BaseType="System.Net.Mail.AttachmentBase" IsStatic="True">
        <Parameter Name="content" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateLinkedResourceFromString" Type="System.Net.Mail.LinkedResource" BaseName="AttachmentBase" BaseType="System.Net.Mail.AttachmentBase" IsStatic="True">
        <Parameter Name="content" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="contentEncoding" Type="System.Text.Encoding" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="mediaType" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateLinkedResourceFromString" Type="System.Net.Mail.LinkedResource" BaseName="AttachmentBase" BaseType="System.Net.Mail.AttachmentBase" IsStatic="True">
        <Parameter Name="content" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="contentType" Type="System.Net.Mime.ContentType" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="LinkedResourceCollection" Type="System.Net.Mail.LinkedResourceCollection" BaseName="Collection`1&lt;LinkedResource&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.Mail.LinkedResource&gt;">
      <ImplementedInterface Type="System.Collections.Generic.IList`1&lt;System.Net.Mail.LinkedResource&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Net.Mail.LinkedResource&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Net.Mail.LinkedResource&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyList`1&lt;System.Net.Mail.LinkedResource&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Net.Mail.LinkedResource&gt;" />
      <ImplementedInterface Type="System.IDisposable" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="MailAddress" Type="System.Net.Mail.MailAddress" BaseName="Object" BaseType="System.Object">
      <Property Name="Address" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="DisplayName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Host" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="User" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="displayName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="displayName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="displayNameEncoding" Type="System.Text.Encoding" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="MailAddressCollection" Type="System.Net.Mail.MailAddressCollection" BaseName="Collection`1&lt;MailAddress&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.Mail.MailAddress&gt;">
      <ImplementedInterface Type="System.Collections.Generic.IList`1&lt;System.Net.Mail.MailAddress&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Net.Mail.MailAddress&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Net.Mail.MailAddress&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyList`1&lt;System.Net.Mail.MailAddress&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Net.Mail.MailAddress&gt;" />
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="addresses" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="MailMessage" Type="System.Net.Mail.MailMessage" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="AlternateViews" Type="System.Net.Mail.AlternateViewCollection" BaseName="Collection`1&lt;AlternateView&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.Mail.AlternateView&gt;" IsReadable="True" />
      <Property Name="Attachments" Type="System.Net.Mail.AttachmentCollection" BaseName="Collection`1&lt;Attachment&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.Mail.Attachment&gt;" IsReadable="True" />
      <Property Name="Bcc" Type="System.Net.Mail.MailAddressCollection" BaseName="Collection`1&lt;MailAddress&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.Mail.MailAddress&gt;" IsReadable="True" />
      <Property Name="Body" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="BodyEncoding" Type="System.Text.Encoding" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="BodyTransferEncoding" Type="System.Net.Mime.TransferEncoding" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="CC" Type="System.Net.Mail.MailAddressCollection" BaseName="Collection`1&lt;MailAddress&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.Mail.MailAddress&gt;" IsReadable="True" />
      <Property Name="DeliveryNotificationOptions" Type="System.Net.Mail.DeliveryNotificationOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="From" Type="System.Net.Mail.MailAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Headers" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" IsReadable="True" />
      <Property Name="HeadersEncoding" Type="System.Text.Encoding" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="IsBodyHtml" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Priority" Type="System.Net.Mail.MailPriority" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="ReplyTo" Type="System.Net.Mail.MailAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ReplyToList" Type="System.Net.Mail.MailAddressCollection" BaseName="Collection`1&lt;MailAddress&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.Mail.MailAddress&gt;" IsReadable="True" />
      <Property Name="Sender" Type="System.Net.Mail.MailAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Subject" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="SubjectEncoding" Type="System.Text.Encoding" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="To" Type="System.Net.Mail.MailAddressCollection" BaseName="Collection`1&lt;MailAddress&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.Mail.MailAddress&gt;" IsReadable="True" />
      <Constructor>
        <Parameter Name="from" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="to" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="from" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="to" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="subject" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="body" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="from" Type="System.Net.Mail.MailAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="to" Type="System.Net.Mail.MailAddress" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Enumeration Name="MailPriority" Type="System.Net.Mail.MailPriority" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="High" Type="System.Net.Mail.MailPriority" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Low" Type="System.Net.Mail.MailPriority" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Normal" Type="System.Net.Mail.MailPriority" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="SendCompletedEventHandler" Type="System.Net.Mail.SendCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Enumeration Name="SmtpAccess" Type="System.Net.Mail.SmtpAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Connect" Type="System.Net.Mail.SmtpAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="ConnectToUnrestrictedPort" Type="System.Net.Mail.SmtpAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="None" Type="System.Net.Mail.SmtpAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="SmtpClient" Type="System.Net.Mail.SmtpClient" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="ClientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" />
      <Property Name="Credentials" Type="System.Net.ICredentialsByHost" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Property Name="DeliveryFormat" Type="System.Net.Mail.SmtpDeliveryFormat" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="DeliveryMethod" Type="System.Net.Mail.SmtpDeliveryMethod" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="EnableSsl" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Host" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="PickupDirectoryLocation" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ServicePoint" Type="System.Net.ServicePoint" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="TargetName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="UseDefaultCredentials" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="host" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="host" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Send" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="from" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="recipients" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="subject" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="body" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Send" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SendAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="from" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="recipients" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="subject" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="body" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="SendAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="SendAsyncCancel" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="SendMailAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="from" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="recipients" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="subject" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="body" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SendMailAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Event Name="SendCompleted" Type="System.Net.Mail.SendCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Enumeration Name="SmtpDeliveryFormat" Type="System.Net.Mail.SmtpDeliveryFormat" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="International" Type="System.Net.Mail.SmtpDeliveryFormat" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="SevenBit" Type="System.Net.Mail.SmtpDeliveryFormat" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Enumeration Name="SmtpDeliveryMethod" Type="System.Net.Mail.SmtpDeliveryMethod" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Network" Type="System.Net.Mail.SmtpDeliveryMethod" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="PickupDirectoryFromIis" Type="System.Net.Mail.SmtpDeliveryMethod" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="SpecifiedPickupDirectory" Type="System.Net.Mail.SmtpDeliveryMethod" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="SmtpException" Type="System.Net.Mail.SmtpException" BaseName="Exception" BaseType="System.Exception">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Property Name="StatusCode" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="statusCode" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="statusCode" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="GetObjectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="SmtpFailedRecipientException" Type="System.Net.Mail.SmtpFailedRecipientException" BaseName="SmtpException" BaseType="System.Net.Mail.SmtpException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Property Name="FailedRecipient" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="statusCode" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="failedRecipient" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="statusCode" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="failedRecipient" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="serverResponse" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="failedRecipient" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="GetObjectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="SmtpFailedRecipientsException" Type="System.Net.Mail.SmtpFailedRecipientsException" BaseName="SmtpFailedRecipientException" BaseType="System.Net.Mail.SmtpFailedRecipientException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Property Name="InnerExceptions" Type="System.Net.Mail.SmtpFailedRecipientException[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.Mail.SmtpFailedRecipientException" IsReadable="True" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerExceptions" Type="System.Net.Mail.SmtpFailedRecipientException[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.Mail.SmtpFailedRecipientException" />
      </Constructor>
      <Method Name="GetObjectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="SmtpPermission" Type="System.Net.Mail.SmtpPermission" BaseName="CodeAccessPermission" BaseType="System.Security.CodeAccessPermission">
      <ImplementedInterface Type="System.Security.IPermission" />
      <ImplementedInterface Type="System.Security.ISecurityEncodable" />
      <ImplementedInterface Type="System.Security.IStackWalk" />
      <ImplementedInterface Type="System.Security.Permissions.IUnrestrictedPermission" />
      <Property Name="Access" Type="System.Net.Mail.SmtpAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="unrestricted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="access" Type="System.Net.Mail.SmtpAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="AddPermission" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="access" Type="System.Net.Mail.SmtpAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Copy" Type="System.Security.IPermission" IsInterface="True" />
      <Method Name="FromXml" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Intersect" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsSubsetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsUnrestricted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToXml" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      <Method Name="Union" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="SmtpPermissionAttribute" Type="System.Net.Mail.SmtpPermissionAttribute" BaseName="CodeAccessSecurityAttribute" BaseType="System.Security.Permissions.CodeAccessSecurityAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Access" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="CreatePermission" Type="System.Security.IPermission" IsInterface="True" />
    </Class>
    <Enumeration Name="SmtpStatusCode" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="BadCommandSequence" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="503" />
      <Field Name="CannotVerifyUserWillAttemptDelivery" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="252" />
      <Field Name="ClientNotPermitted" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="454" />
      <Field Name="CommandNotImplemented" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="502" />
      <Field Name="CommandParameterNotImplemented" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="504" />
      <Field Name="CommandUnrecognized" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="500" />
      <Field Name="ExceededStorageAllocation" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="552" />
      <Field Name="GeneralFailure" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
      <Field Name="HelpMessage" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="214" />
      <Field Name="InsufficientStorage" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="452" />
      <Field Name="LocalErrorInProcessing" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="451" />
      <Field Name="MailboxBusy" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="450" />
      <Field Name="MailboxNameNotAllowed" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="553" />
      <Field Name="MailboxUnavailable" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="550" />
      <Field Name="MustIssueStartTlsFirst" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="530" />
      <Field Name="Ok" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="250" />
      <Field Name="ServiceClosingTransmissionChannel" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="221" />
      <Field Name="ServiceNotAvailable" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="421" />
      <Field Name="ServiceReady" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="220" />
      <Field Name="StartMailInput" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="354" />
      <Field Name="SyntaxError" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="501" />
      <Field Name="SystemStatus" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="211" />
      <Field Name="TransactionFailed" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="554" />
      <Field Name="UserNotLocalTryAlternatePath" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="551" />
      <Field Name="UserNotLocalWillForward" Type="System.Net.Mail.SmtpStatusCode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="251" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.Net.Mime">
    <Class Name="ContentDisposition" Type="System.Net.Mime.ContentDisposition" BaseName="Object" BaseType="System.Object">
      <Property Name="CreationDate" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="DispositionType" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="FileName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Inline" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ModificationDate" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Parameters" Type="System.Collections.Specialized.StringDictionary" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ReadDate" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Size" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="disposition" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rparam" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="ContentType" Type="System.Net.Mime.ContentType" BaseName="Object" BaseType="System.Object">
      <Property Name="Boundary" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="CharSet" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="MediaType" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Parameters" Type="System.Collections.Specialized.StringDictionary" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="contentType" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rparam" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="DispositionTypeNames" Type="System.Net.Mime.DispositionTypeNames" BaseName="Object" BaseType="System.Object">
      <Field Name="Attachment" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="attachment" />
      <Field Name="Inline" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="inline" />
    </Class>
    <Class Name="MediaTypeNames" Type="System.Net.Mime.MediaTypeNames" BaseName="Object" BaseType="System.Object" />
    <Class Name="MediaTypeNames.Application" Type="System.Net.Mime.MediaTypeNames+Application" BaseName="Object" BaseType="System.Object" IsNested="True">
      <Field Name="Octet" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="application/octet-stream" />
      <Field Name="Pdf" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="application/pdf" />
      <Field Name="Rtf" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="application/rtf" />
      <Field Name="Soap" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="application/soap+xml" />
      <Field Name="Zip" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="application/zip" />
    </Class>
    <Class Name="MediaTypeNames.Image" Type="System.Net.Mime.MediaTypeNames+Image" BaseName="Object" BaseType="System.Object" IsNested="True">
      <Field Name="Gif" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="image/gif" />
      <Field Name="Jpeg" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="image/jpeg" />
      <Field Name="Tiff" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="image/tiff" />
    </Class>
    <Class Name="MediaTypeNames.Text" Type="System.Net.Mime.MediaTypeNames+Text" BaseName="Object" BaseType="System.Object" IsNested="True">
      <Field Name="Html" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="text/html" />
      <Field Name="Plain" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="text/plain" />
      <Field Name="RichText" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="text/richtext" />
      <Field Name="Xml" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="text/xml" />
    </Class>
    <Enumeration Name="TransferEncoding" Type="System.Net.Mime.TransferEncoding" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Base64" Type="System.Net.Mime.TransferEncoding" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="EightBit" Type="System.Net.Mime.TransferEncoding" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="QuotedPrintable" Type="System.Net.Mime.TransferEncoding" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="SevenBit" Type="System.Net.Mime.TransferEncoding" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Unknown" Type="System.Net.Mime.TransferEncoding" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.Net.NetworkInformation">
    <Enumeration Name="DuplicateAddressDetectionState" Type="System.Net.NetworkInformation.DuplicateAddressDetectionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Deprecated" Type="System.Net.NetworkInformation.DuplicateAddressDetectionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Duplicate" Type="System.Net.NetworkInformation.DuplicateAddressDetectionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Invalid" Type="System.Net.NetworkInformation.DuplicateAddressDetectionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Preferred" Type="System.Net.NetworkInformation.DuplicateAddressDetectionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Tentative" Type="System.Net.NetworkInformation.DuplicateAddressDetectionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="GatewayIPAddressInformation" Type="System.Net.NetworkInformation.GatewayIPAddressInformation" BaseName="Object" BaseType="System.Object">
      <Property Name="Address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Class Name="GatewayIPAddressInformationCollection" Type="System.Net.NetworkInformation.GatewayIPAddressInformationCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Net.NetworkInformation.GatewayIPAddressInformation&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Net.NetworkInformation.GatewayIPAddressInformation&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.Net.NetworkInformation.GatewayIPAddressInformation" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.NetworkInformation.GatewayIPAddressInformation" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.NetworkInformation.GatewayIPAddressInformation" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Net.NetworkInformation.GatewayIPAddressInformation[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.NetworkInformation.GatewayIPAddressInformation" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Generic.IEnumerator`1&lt;System.Net.NetworkInformation.GatewayIPAddressInformation&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.NetworkInformation.GatewayIPAddressInformation" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.NetworkInformation.GatewayIPAddressInformation" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="IcmpV4Statistics" Type="System.Net.NetworkInformation.IcmpV4Statistics" BaseName="Object" BaseType="System.Object">
      <Property Name="AddressMaskRepliesReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="AddressMaskRepliesSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="AddressMaskRequestsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="AddressMaskRequestsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="DestinationUnreachableMessagesReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="DestinationUnreachableMessagesSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="EchoRepliesReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="EchoRepliesSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="EchoRequestsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="EchoRequestsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ErrorsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ErrorsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MessagesReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MessagesSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ParameterProblemsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ParameterProblemsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="RedirectsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="RedirectsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SourceQuenchesReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SourceQuenchesSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TimeExceededMessagesReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TimeExceededMessagesSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TimestampRepliesReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TimestampRepliesSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TimestampRequestsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TimestampRequestsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="IcmpV6Statistics" Type="System.Net.NetworkInformation.IcmpV6Statistics" BaseName="Object" BaseType="System.Object">
      <Property Name="DestinationUnreachableMessagesReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="DestinationUnreachableMessagesSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="EchoRepliesReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="EchoRepliesSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="EchoRequestsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="EchoRequestsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ErrorsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ErrorsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MembershipQueriesReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MembershipQueriesSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MembershipReductionsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MembershipReductionsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MembershipReportsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MembershipReportsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MessagesReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MessagesSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="NeighborAdvertisementsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="NeighborAdvertisementsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="NeighborSolicitsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="NeighborSolicitsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PacketTooBigMessagesReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PacketTooBigMessagesSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ParameterProblemsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ParameterProblemsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="RedirectsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="RedirectsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="RouterAdvertisementsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="RouterAdvertisementsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="RouterSolicitsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="RouterSolicitsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TimeExceededMessagesReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TimeExceededMessagesSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="IPAddressCollection" Type="System.Net.NetworkInformation.IPAddressCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Net.IPAddress&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Net.IPAddress&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Net.IPAddress[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.IPAddress" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Generic.IEnumerator`1&lt;System.Net.IPAddress&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="IPAddressInformation" Type="System.Net.NetworkInformation.IPAddressInformation" BaseName="Object" BaseType="System.Object">
      <Property Name="Address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="IsDnsEligible" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsTransient" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="IPAddressInformationCollection" Type="System.Net.NetworkInformation.IPAddressInformationCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Net.NetworkInformation.IPAddressInformation&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Net.NetworkInformation.IPAddressInformation&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.Net.NetworkInformation.IPAddressInformation" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.NetworkInformation.IPAddressInformation" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.NetworkInformation.IPAddressInformation" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Net.NetworkInformation.IPAddressInformation[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.NetworkInformation.IPAddressInformation" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Generic.IEnumerator`1&lt;System.Net.NetworkInformation.IPAddressInformation&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.NetworkInformation.IPAddressInformation" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.NetworkInformation.IPAddressInformation" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="IPGlobalProperties" Type="System.Net.NetworkInformation.IPGlobalProperties" BaseName="Object" BaseType="System.Object">
      <Property Name="DhcpScopeName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="DomainName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="HostName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="IsWinsProxy" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="NodeType" Type="System.Net.NetworkInformation.NetBiosNodeType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Method Name="BeginGetUnicastAddresses" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="EndGetUnicastAddresses" Type="System.Net.NetworkInformation.UnicastIPAddressInformationCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="GetActiveTcpConnections" Type="System.Net.NetworkInformation.TcpConnectionInformation[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.NetworkInformation.TcpConnectionInformation" />
      <Method Name="GetActiveTcpListeners" Type="System.Net.IPEndPoint[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.IPEndPoint" />
      <Method Name="GetActiveUdpListeners" Type="System.Net.IPEndPoint[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.IPEndPoint" />
      <Method Name="GetIcmpV4Statistics" Type="System.Net.NetworkInformation.IcmpV4Statistics" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetIcmpV6Statistics" Type="System.Net.NetworkInformation.IcmpV6Statistics" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetIPGlobalProperties" Type="System.Net.NetworkInformation.IPGlobalProperties" BaseName="Object" BaseType="System.Object" IsStatic="True" />
      <Method Name="GetIPv4GlobalStatistics" Type="System.Net.NetworkInformation.IPGlobalStatistics" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetIPv6GlobalStatistics" Type="System.Net.NetworkInformation.IPGlobalStatistics" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetTcpIPv4Statistics" Type="System.Net.NetworkInformation.TcpStatistics" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetTcpIPv6Statistics" Type="System.Net.NetworkInformation.TcpStatistics" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetUdpIPv4Statistics" Type="System.Net.NetworkInformation.UdpStatistics" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetUdpIPv6Statistics" Type="System.Net.NetworkInformation.UdpStatistics" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetUnicastAddresses" Type="System.Net.NetworkInformation.UnicastIPAddressInformationCollection" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetUnicastAddressesAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.NetworkInformation.UnicastIPAddressInformationCollection&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.NetworkInformation.UnicastIPAddressInformationCollection" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="IPGlobalStatistics" Type="System.Net.NetworkInformation.IPGlobalStatistics" BaseName="Object" BaseType="System.Object">
      <Property Name="DefaultTtl" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ForwardingEnabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="NumberOfInterfaces" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="NumberOfIPAddresses" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="NumberOfRoutes" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="OutputPacketRequests" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="OutputPacketRoutingDiscards" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="OutputPacketsDiscarded" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="OutputPacketsWithNoRoute" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PacketFragmentFailures" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PacketReassembliesRequired" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PacketReassemblyFailures" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PacketReassemblyTimeout" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PacketsFragmented" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PacketsReassembled" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ReceivedPackets" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ReceivedPacketsDelivered" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ReceivedPacketsDiscarded" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ReceivedPacketsForwarded" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ReceivedPacketsWithAddressErrors" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ReceivedPacketsWithHeadersErrors" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ReceivedPacketsWithUnknownProtocol" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="IPInterfaceProperties" Type="System.Net.NetworkInformation.IPInterfaceProperties" BaseName="Object" BaseType="System.Object">
      <Property Name="AnycastAddresses" Type="System.Net.NetworkInformation.IPAddressInformationCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="DhcpServerAddresses" Type="System.Net.NetworkInformation.IPAddressCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="DnsAddresses" Type="System.Net.NetworkInformation.IPAddressCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="DnsSuffix" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="GatewayAddresses" Type="System.Net.NetworkInformation.GatewayIPAddressInformationCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="IsDnsEnabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsDynamicDnsEnabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MulticastAddresses" Type="System.Net.NetworkInformation.MulticastIPAddressInformationCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="UnicastAddresses" Type="System.Net.NetworkInformation.UnicastIPAddressInformationCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="WinsServersAddresses" Type="System.Net.NetworkInformation.IPAddressCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="GetIPv4Properties" Type="System.Net.NetworkInformation.IPv4InterfaceProperties" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetIPv6Properties" Type="System.Net.NetworkInformation.IPv6InterfaceProperties" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="IPInterfaceStatistics" Type="System.Net.NetworkInformation.IPInterfaceStatistics" BaseName="Object" BaseType="System.Object">
      <Property Name="BytesReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="BytesSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IncomingPacketsDiscarded" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IncomingPacketsWithErrors" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IncomingUnknownProtocolPackets" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="NonUnicastPacketsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="NonUnicastPacketsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="OutgoingPacketsDiscarded" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="OutgoingPacketsWithErrors" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="OutputQueueLength" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="UnicastPacketsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="UnicastPacketsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Enumeration Name="IPStatus" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="BadDestination" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11018" />
      <Field Name="BadHeader" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11042" />
      <Field Name="BadOption" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11007" />
      <Field Name="BadRoute" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11012" />
      <Field Name="DestinationHostUnreachable" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11003" />
      <Field Name="DestinationNetworkUnreachable" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11002" />
      <Field Name="DestinationPortUnreachable" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11005" />
      <Field Name="DestinationProhibited" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11004" />
      <Field Name="DestinationProtocolUnreachable" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11004" />
      <Field Name="DestinationScopeMismatch" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11045" />
      <Field Name="DestinationUnreachable" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11040" />
      <Field Name="HardwareError" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11008" />
      <Field Name="IcmpError" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11044" />
      <Field Name="NoResources" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11006" />
      <Field Name="PacketTooBig" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11009" />
      <Field Name="ParameterProblem" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11015" />
      <Field Name="SourceQuench" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11016" />
      <Field Name="Success" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="TimedOut" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11010" />
      <Field Name="TimeExceeded" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11041" />
      <Field Name="TtlExpired" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11013" />
      <Field Name="TtlReassemblyTimeExceeded" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11014" />
      <Field Name="Unknown" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
      <Field Name="UnrecognizedNextHeader" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11043" />
    </Enumeration>
    <Class Name="IPv4InterfaceProperties" Type="System.Net.NetworkInformation.IPv4InterfaceProperties" BaseName="Object" BaseType="System.Object">
      <Property Name="Index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsAutomaticPrivateAddressingActive" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsAutomaticPrivateAddressingEnabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsDhcpEnabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsForwardingEnabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Mtu" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="UsesWins" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="IPv4InterfaceStatistics" Type="System.Net.NetworkInformation.IPv4InterfaceStatistics" BaseName="Object" BaseType="System.Object">
      <Property Name="BytesReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="BytesSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IncomingPacketsDiscarded" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IncomingPacketsWithErrors" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IncomingUnknownProtocolPackets" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="NonUnicastPacketsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="NonUnicastPacketsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="OutgoingPacketsDiscarded" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="OutgoingPacketsWithErrors" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="OutputQueueLength" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="UnicastPacketsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="UnicastPacketsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="IPv6InterfaceProperties" Type="System.Net.NetworkInformation.IPv6InterfaceProperties" BaseName="Object" BaseType="System.Object">
      <Property Name="Index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Mtu" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="GetScopeId" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="scopeLevel" Type="System.Net.NetworkInformation.ScopeLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
    </Class>
    <Class Name="MulticastIPAddressInformation" Type="System.Net.NetworkInformation.MulticastIPAddressInformation" BaseName="IPAddressInformation" BaseType="System.Net.NetworkInformation.IPAddressInformation">
      <Property Name="AddressPreferredLifetime" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="AddressValidLifetime" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="DhcpLeaseLifetime" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="DuplicateAddressDetectionState" Type="System.Net.NetworkInformation.DuplicateAddressDetectionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="PrefixOrigin" Type="System.Net.NetworkInformation.PrefixOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="SuffixOrigin" Type="System.Net.NetworkInformation.SuffixOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
    </Class>
    <Class Name="MulticastIPAddressInformationCollection" Type="System.Net.NetworkInformation.MulticastIPAddressInformationCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Net.NetworkInformation.MulticastIPAddressInformation&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Net.NetworkInformation.MulticastIPAddressInformation&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.Net.NetworkInformation.MulticastIPAddressInformation" BaseName="IPAddressInformation" BaseType="System.Net.NetworkInformation.IPAddressInformation">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.NetworkInformation.MulticastIPAddressInformation" BaseName="IPAddressInformation" BaseType="System.Net.NetworkInformation.IPAddressInformation" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.NetworkInformation.MulticastIPAddressInformation" BaseName="IPAddressInformation" BaseType="System.Net.NetworkInformation.IPAddressInformation" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Net.NetworkInformation.MulticastIPAddressInformation[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.NetworkInformation.MulticastIPAddressInformation" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Generic.IEnumerator`1&lt;System.Net.NetworkInformation.MulticastIPAddressInformation&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.NetworkInformation.MulticastIPAddressInformation" BaseName="IPAddressInformation" BaseType="System.Net.NetworkInformation.IPAddressInformation" />
      </Method>
      <Method Name="Remove" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.NetworkInformation.MulticastIPAddressInformation" BaseName="IPAddressInformation" BaseType="System.Net.NetworkInformation.IPAddressInformation" />
      </Method>
    </Class>
    <Enumeration Name="NetBiosNodeType" Type="System.Net.NetworkInformation.NetBiosNodeType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Broadcast" Type="System.Net.NetworkInformation.NetBiosNodeType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Hybrid" Type="System.Net.NetworkInformation.NetBiosNodeType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="Mixed" Type="System.Net.NetworkInformation.NetBiosNodeType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Peer2Peer" Type="System.Net.NetworkInformation.NetBiosNodeType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Unknown" Type="System.Net.NetworkInformation.NetBiosNodeType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="NetworkAddressChangedEventHandler" Type="System.Net.NetworkInformation.NetworkAddressChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="NetworkAvailabilityChangedEventHandler" Type="System.Net.NetworkInformation.NetworkAvailabilityChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.NetworkInformation.NetworkAvailabilityEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.NetworkInformation.NetworkAvailabilityEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="NetworkAvailabilityEventArgs" Type="System.Net.NetworkInformation.NetworkAvailabilityEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="IsAvailable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="NetworkChange" Type="System.Net.NetworkInformation.NetworkChange" BaseName="Object" BaseType="System.Object">
      <Method Name="RegisterNetworkChange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="nc" Type="System.Net.NetworkInformation.NetworkChange" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Event Name="NetworkAddressChanged" Type="System.Net.NetworkInformation.NetworkAddressChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
      <Event Name="NetworkAvailabilityChanged" Type="System.Net.NetworkInformation.NetworkAvailabilityChangedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.NetworkInformation.NetworkAvailabilityEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Enumeration Name="NetworkInformationAccess" Type="System.Net.NetworkInformation.NetworkInformationAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="None" Type="System.Net.NetworkInformation.NetworkInformationAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Ping" Type="System.Net.NetworkInformation.NetworkInformationAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Read" Type="System.Net.NetworkInformation.NetworkInformationAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="NetworkInformationException" Type="System.Net.NetworkInformation.NetworkInformationException" BaseName="Win32Exception" BaseType="System.ComponentModel.Win32Exception">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Property Name="ErrorCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="errorCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="NetworkInformationPermission" Type="System.Net.NetworkInformation.NetworkInformationPermission" BaseName="CodeAccessPermission" BaseType="System.Security.CodeAccessPermission">
      <ImplementedInterface Type="System.Security.IPermission" />
      <ImplementedInterface Type="System.Security.ISecurityEncodable" />
      <ImplementedInterface Type="System.Security.IStackWalk" />
      <ImplementedInterface Type="System.Security.Permissions.IUnrestrictedPermission" />
      <Property Name="Access" Type="System.Net.NetworkInformation.NetworkInformationAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="access" Type="System.Net.NetworkInformation.NetworkInformationAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="AddPermission" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="access" Type="System.Net.NetworkInformation.NetworkInformationAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Copy" Type="System.Security.IPermission" IsInterface="True" />
      <Method Name="FromXml" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Intersect" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsSubsetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsUnrestricted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToXml" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      <Method Name="Union" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="NetworkInformationPermissionAttribute" Type="System.Net.NetworkInformation.NetworkInformationPermissionAttribute" BaseName="CodeAccessSecurityAttribute" BaseType="System.Security.Permissions.CodeAccessSecurityAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Access" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="CreatePermission" Type="System.Security.IPermission" IsInterface="True" />
    </Class>
    <Class Name="NetworkInterface" Type="System.Net.NetworkInformation.NetworkInterface" BaseName="Object" BaseType="System.Object">
      <Property Name="Description" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Id" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="IPv6LoopbackInterfaceIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="IsReceiveOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="LoopbackInterfaceIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="NetworkInterfaceType" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="OperationalStatus" Type="System.Net.NetworkInformation.OperationalStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Speed" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SupportsMulticast" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="GetAllNetworkInterfaces" Type="System.Net.NetworkInformation.NetworkInterface[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.NetworkInformation.NetworkInterface" IsStatic="True" />
      <Method Name="GetIPProperties" Type="System.Net.NetworkInformation.IPInterfaceProperties" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetIPStatistics" Type="System.Net.NetworkInformation.IPInterfaceStatistics" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetIPv4Statistics" Type="System.Net.NetworkInformation.IPv4InterfaceStatistics" BaseName="Object" BaseType="System.Object" />
      <Method Name="GetIsNetworkAvailable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" />
      <Method Name="GetPhysicalAddress" Type="System.Net.NetworkInformation.PhysicalAddress" BaseName="Object" BaseType="System.Object" />
      <Method Name="Supports" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="networkInterfaceComponent" Type="System.Net.NetworkInformation.NetworkInterfaceComponent" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
    </Class>
    <Enumeration Name="NetworkInterfaceComponent" Type="System.Net.NetworkInformation.NetworkInterfaceComponent" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="IPv4" Type="System.Net.NetworkInformation.NetworkInterfaceComponent" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="IPv6" Type="System.Net.NetworkInformation.NetworkInterfaceComponent" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Enumeration Name="NetworkInterfaceType" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AsymmetricDsl" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="94" />
      <Field Name="Atm" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="37" />
      <Field Name="BasicIsdn" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="20" />
      <Field Name="Ethernet" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Ethernet3Megabit" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="26" />
      <Field Name="FastEthernetFx" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="69" />
      <Field Name="FastEthernetT" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="62" />
      <Field Name="Fddi" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="15" />
      <Field Name="GenericModem" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="48" />
      <Field Name="GigabitEthernet" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="117" />
      <Field Name="HighPerformanceSerialBus" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="144" />
      <Field Name="IPOverAtm" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="114" />
      <Field Name="Isdn" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="63" />
      <Field Name="Loopback" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="24" />
      <Field Name="MultiRateSymmetricDsl" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="143" />
      <Field Name="Ppp" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="23" />
      <Field Name="PrimaryIsdn" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="21" />
      <Field Name="RateAdaptDsl" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="95" />
      <Field Name="Slip" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="28" />
      <Field Name="SymmetricDsl" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="96" />
      <Field Name="TokenRing" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9" />
      <Field Name="Tunnel" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="131" />
      <Field Name="Unknown" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="VeryHighSpeedDsl" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="97" />
      <Field Name="Wireless80211" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="71" />
      <Field Name="Wman" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="237" />
      <Field Name="Wwanpp" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="243" />
      <Field Name="Wwanpp2" Type="System.Net.NetworkInformation.NetworkInterfaceType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="244" />
    </Enumeration>
    <Enumeration Name="OperationalStatus" Type="System.Net.NetworkInformation.OperationalStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Dormant" Type="System.Net.NetworkInformation.OperationalStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="Down" Type="System.Net.NetworkInformation.OperationalStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="LowerLayerDown" Type="System.Net.NetworkInformation.OperationalStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="NotPresent" Type="System.Net.NetworkInformation.OperationalStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Testing" Type="System.Net.NetworkInformation.OperationalStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Unknown" Type="System.Net.NetworkInformation.OperationalStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Up" Type="System.Net.NetworkInformation.OperationalStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="PhysicalAddress" Type="System.Net.NetworkInformation.PhysicalAddress" BaseName="Object" BaseType="System.Object">
      <Field Name="None" Type="System.Net.NetworkInformation.PhysicalAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Constructor>
        <Parameter Name="address" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="comparand" Type="System.Object" />
      </Method>
      <Method Name="GetAddressBytes" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Parse" Type="System.Net.NetworkInformation.PhysicalAddress" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="address" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="Ping" Type="System.Net.NetworkInformation.Ping" BaseName="Component" BaseType="System.ComponentModel.Component">
      <ImplementedInterface Type="System.ComponentModel.IComponent" />
      <ImplementedInterface Type="System.IDisposable" />
      <Method Name="Send" Type="System.Net.NetworkInformation.PingReply" BaseName="Object" BaseType="System.Object">
        <Parameter Name="hostNameOrAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Send" Type="System.Net.NetworkInformation.PingReply" BaseName="Object" BaseType="System.Object">
        <Parameter Name="hostNameOrAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Send" Type="System.Net.NetworkInformation.PingReply" BaseName="Object" BaseType="System.Object">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Send" Type="System.Net.NetworkInformation.PingReply" BaseName="Object" BaseType="System.Object">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Send" Type="System.Net.NetworkInformation.PingReply" BaseName="Object" BaseType="System.Object">
        <Parameter Name="hostNameOrAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="Send" Type="System.Net.NetworkInformation.PingReply" BaseName="Object" BaseType="System.Object">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="Send" Type="System.Net.NetworkInformation.PingReply" BaseName="Object" BaseType="System.Object">
        <Parameter Name="hostNameOrAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Send" Type="System.Net.NetworkInformation.PingReply" BaseName="Object" BaseType="System.Object">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SendAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="hostNameOrAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="SendAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="hostNameOrAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="SendAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="SendAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="SendAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="hostNameOrAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="SendAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="SendAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="hostNameOrAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="SendAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="SendAsyncCancel" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="SendPingAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.NetworkInformation.PingReply&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.NetworkInformation.PingReply" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SendPingAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.NetworkInformation.PingReply&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.NetworkInformation.PingReply" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="hostNameOrAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SendPingAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.NetworkInformation.PingReply&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.NetworkInformation.PingReply" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SendPingAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.NetworkInformation.PingReply&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.NetworkInformation.PingReply" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="hostNameOrAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SendPingAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.NetworkInformation.PingReply&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.NetworkInformation.PingReply" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="SendPingAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.NetworkInformation.PingReply&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.NetworkInformation.PingReply" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="hostNameOrAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="SendPingAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.NetworkInformation.PingReply&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.NetworkInformation.PingReply" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SendPingAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.NetworkInformation.PingReply&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.NetworkInformation.PingReply" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="hostNameOrAddress" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Event Name="PingCompleted" Type="System.Net.NetworkInformation.PingCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.NetworkInformation.PingCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Event>
    </Class>
    <Class Name="PingCompletedEventArgs" Type="System.Net.NetworkInformation.PingCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs">
      <Property Name="Reply" Type="System.Net.NetworkInformation.PingReply" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Class Name="PingCompletedEventHandler" Type="System.Net.NetworkInformation.PingCompletedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.NetworkInformation.PingCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.NetworkInformation.PingCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Method>
    </Class>
    <Class Name="PingException" Type="System.Net.NetworkInformation.PingException" BaseName="InvalidOperationException" BaseType="System.InvalidOperationException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="PingOptions" Type="System.Net.NetworkInformation.PingOptions" BaseName="Object" BaseType="System.Object">
      <Property Name="DontFragment" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Ttl" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="ttl" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="dontFragment" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="PingReply" Type="System.Net.NetworkInformation.PingReply" BaseName="Object" BaseType="System.Object">
      <Property Name="Address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" />
      <Property Name="Options" Type="System.Net.NetworkInformation.PingOptions" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="RoundtripTime" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Status" Type="System.Net.NetworkInformation.IPStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
    </Class>
    <Enumeration Name="PrefixOrigin" Type="System.Net.NetworkInformation.PrefixOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Dhcp" Type="System.Net.NetworkInformation.PrefixOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Manual" Type="System.Net.NetworkInformation.PrefixOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Other" Type="System.Net.NetworkInformation.PrefixOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="RouterAdvertisement" Type="System.Net.NetworkInformation.PrefixOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="WellKnown" Type="System.Net.NetworkInformation.PrefixOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Enumeration Name="ScopeLevel" Type="System.Net.NetworkInformation.ScopeLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Admin" Type="System.Net.NetworkInformation.ScopeLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Global" Type="System.Net.NetworkInformation.ScopeLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="14" />
      <Field Name="Interface" Type="System.Net.NetworkInformation.ScopeLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Link" Type="System.Net.NetworkInformation.ScopeLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="None" Type="System.Net.NetworkInformation.ScopeLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Organization" Type="System.Net.NetworkInformation.ScopeLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="Site" Type="System.Net.NetworkInformation.ScopeLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="Subnet" Type="System.Net.NetworkInformation.ScopeLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
    </Enumeration>
    <Enumeration Name="SuffixOrigin" Type="System.Net.NetworkInformation.SuffixOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="LinkLayerAddress" Type="System.Net.NetworkInformation.SuffixOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Manual" Type="System.Net.NetworkInformation.SuffixOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="OriginDhcp" Type="System.Net.NetworkInformation.SuffixOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Other" Type="System.Net.NetworkInformation.SuffixOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Random" Type="System.Net.NetworkInformation.SuffixOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="WellKnown" Type="System.Net.NetworkInformation.SuffixOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Class Name="TcpConnectionInformation" Type="System.Net.NetworkInformation.TcpConnectionInformation" BaseName="Object" BaseType="System.Object">
      <Property Name="LocalEndPoint" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" IsReadable="True" />
      <Property Name="RemoteEndPoint" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" IsReadable="True" />
      <Property Name="State" Type="System.Net.NetworkInformation.TcpState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
    </Class>
    <Enumeration Name="TcpState" Type="System.Net.NetworkInformation.TcpState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Closed" Type="System.Net.NetworkInformation.TcpState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="CloseWait" Type="System.Net.NetworkInformation.TcpState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="Closing" Type="System.Net.NetworkInformation.TcpState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9" />
      <Field Name="DeleteTcb" Type="System.Net.NetworkInformation.TcpState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="12" />
      <Field Name="Established" Type="System.Net.NetworkInformation.TcpState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="FinWait1" Type="System.Net.NetworkInformation.TcpState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="FinWait2" Type="System.Net.NetworkInformation.TcpState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="LastAck" Type="System.Net.NetworkInformation.TcpState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10" />
      <Field Name="Listen" Type="System.Net.NetworkInformation.TcpState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="SynReceived" Type="System.Net.NetworkInformation.TcpState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="SynSent" Type="System.Net.NetworkInformation.TcpState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="TimeWait" Type="System.Net.NetworkInformation.TcpState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11" />
      <Field Name="Unknown" Type="System.Net.NetworkInformation.TcpState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="TcpStatistics" Type="System.Net.NetworkInformation.TcpStatistics" BaseName="Object" BaseType="System.Object">
      <Property Name="ConnectionsAccepted" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ConnectionsInitiated" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CumulativeConnections" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CurrentConnections" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ErrorsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="FailedConnectionAttempts" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MaximumConnections" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MaximumTransmissionTimeout" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MinimumTransmissionTimeout" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ResetConnections" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ResetsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SegmentsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SegmentsResent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SegmentsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="UdpStatistics" Type="System.Net.NetworkInformation.UdpStatistics" BaseName="Object" BaseType="System.Object">
      <Property Name="DatagramsReceived" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="DatagramsSent" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IncomingDatagramsDiscarded" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IncomingDatagramsWithErrors" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="UdpListeners" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="UnicastIPAddressInformation" Type="System.Net.NetworkInformation.UnicastIPAddressInformation" BaseName="IPAddressInformation" BaseType="System.Net.NetworkInformation.IPAddressInformation">
      <Property Name="AddressPreferredLifetime" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="AddressValidLifetime" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="DhcpLeaseLifetime" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="DuplicateAddressDetectionState" Type="System.Net.NetworkInformation.DuplicateAddressDetectionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="IPv4Mask" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="PrefixLength" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PrefixOrigin" Type="System.Net.NetworkInformation.PrefixOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="SuffixOrigin" Type="System.Net.NetworkInformation.SuffixOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
    </Class>
    <Class Name="UnicastIPAddressInformationCollection" Type="System.Net.NetworkInformation.UnicastIPAddressInformationCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Net.NetworkInformation.UnicastIPAddressInformation&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Net.NetworkInformation.UnicastIPAddressInformation&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="get_Item" Type="System.Net.NetworkInformation.UnicastIPAddressInformation" BaseName="IPAddressInformation" BaseType="System.Net.NetworkInformation.IPAddressInformation">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.NetworkInformation.UnicastIPAddressInformation" BaseName="IPAddressInformation" BaseType="System.Net.NetworkInformation.IPAddressInformation" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.NetworkInformation.UnicastIPAddressInformation" BaseName="IPAddressInformation" BaseType="System.Net.NetworkInformation.IPAddressInformation" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Net.NetworkInformation.UnicastIPAddressInformation[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.NetworkInformation.UnicastIPAddressInformation" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.Generic.IEnumerator`1&lt;System.Net.NetworkInformation.UnicastIPAddressInformation&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.NetworkInformation.UnicastIPAddressInformation" BaseName="IPAddressInformation" BaseType="System.Net.NetworkInformation.IPAddressInformation" />
      </Method>
      <Method Name="Remove" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.NetworkInformation.UnicastIPAddressInformation" BaseName="IPAddressInformation" BaseType="System.Net.NetworkInformation.IPAddressInformation" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.Net.Security">
    <Class Name="AuthenticatedStream" Type="System.Net.Security.AuthenticatedStream" BaseName="Stream" BaseType="System.IO.Stream">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="IsAuthenticated" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsEncrypted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsMutuallyAuthenticated" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsServer" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSigned" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="LeaveInnerStreamOpen" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Enumeration Name="AuthenticationLevel" Type="System.Net.Security.AuthenticationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="MutualAuthRequested" Type="System.Net.Security.AuthenticationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="MutualAuthRequired" Type="System.Net.Security.AuthenticationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="None" Type="System.Net.Security.AuthenticationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Enumeration Name="EncryptionPolicy" Type="System.Net.Security.EncryptionPolicy" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AllowNoEncryption" Type="System.Net.Security.EncryptionPolicy" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="NoEncryption" Type="System.Net.Security.EncryptionPolicy" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="RequireEncryption" Type="System.Net.Security.EncryptionPolicy" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="LocalCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="targetHost" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="localCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
        <Parameter Name="remoteCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="acceptableIssuers" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="targetHost" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="localCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
        <Parameter Name="remoteCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="acceptableIssuers" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
      </Method>
    </Class>
    <Class Name="NegotiateStream" Type="System.Net.Security.NegotiateStream" BaseName="AuthenticatedStream" BaseType="System.Net.Security.AuthenticatedStream">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="CanRead" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CanSeek" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CanTimeout" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CanWrite" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="IsAuthenticated" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsEncrypted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsMutuallyAuthenticated" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsServer" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSigned" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Length" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Position" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ReadTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="RemoteIdentity" Type="System.Security.Principal.IIdentity" IsInterface="True" IsReadable="True" />
      <Property Name="WriteTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="innerStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="innerStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="AuthenticateAsClient" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="AuthenticateAsClient" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="targetName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AuthenticateAsClient" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
        <Parameter Name="targetName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AuthenticateAsClient" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="targetName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="AuthenticateAsClient" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
        <Parameter Name="targetName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="AuthenticateAsClientAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object" />
      <Method Name="AuthenticateAsClientAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="targetName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AuthenticateAsClientAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="targetName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="AuthenticateAsClientAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
        <Parameter Name="targetName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AuthenticateAsClientAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
        <Parameter Name="targetName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="AuthenticateAsServer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="AuthenticateAsServer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AuthenticateAsServer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="AuthenticateAsServer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="AuthenticateAsServerAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object" />
      <Method Name="AuthenticateAsServerAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AuthenticateAsServerAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="AuthenticateAsServerAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="BeginAuthenticateAsClient" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginAuthenticateAsClient" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="targetName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginAuthenticateAsClient" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
        <Parameter Name="targetName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginAuthenticateAsClient" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="targetName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginAuthenticateAsClient" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
        <Parameter Name="targetName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginAuthenticateAsServer" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginAuthenticateAsServer" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginAuthenticateAsServer" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginAuthenticateAsServer" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="credential" Type="System.Net.NetworkCredential" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginRead" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginWrite" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="EndAuthenticateAsClient" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndAuthenticateAsServer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndRead" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndWrite" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Flush" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Read" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Seek" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="offset" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="SetLength" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Enumeration Name="ProtectionLevel" Type="System.Net.Security.ProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="EncryptAndSign" Type="System.Net.Security.ProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="None" Type="System.Net.Security.ProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Sign" Type="System.Net.Security.ProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="RemoteCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="chain" Type="System.Security.Cryptography.X509Certificates.X509Chain" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="sslPolicyErrors" Type="System.Net.Security.SslPolicyErrors" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="chain" Type="System.Security.Cryptography.X509Certificates.X509Chain" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="sslPolicyErrors" Type="System.Net.Security.SslPolicyErrors" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
    </Class>
    <Enumeration Name="SslPolicyErrors" Type="System.Net.Security.SslPolicyErrors" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="None" Type="System.Net.Security.SslPolicyErrors" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="RemoteCertificateChainErrors" Type="System.Net.Security.SslPolicyErrors" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="RemoteCertificateNameMismatch" Type="System.Net.Security.SslPolicyErrors" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="RemoteCertificateNotAvailable" Type="System.Net.Security.SslPolicyErrors" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="SslStream" Type="System.Net.Security.SslStream" BaseName="AuthenticatedStream" BaseType="System.Net.Security.AuthenticatedStream">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="CanRead" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CanSeek" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CanTimeout" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CanWrite" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CheckCertRevocationStatus" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CipherAlgorithm" Type="System.Security.Authentication.CipherAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="CipherStrength" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="HashAlgorithm" Type="System.Security.Authentication.HashAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="HashStrength" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsAuthenticated" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsEncrypted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsMutuallyAuthenticated" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsServer" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSigned" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="KeyExchangeAlgorithm" Type="System.Security.Authentication.ExchangeAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="KeyExchangeStrength" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Length" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="LocalCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Position" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ReadTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="RemoteCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SslProtocol" Type="System.Security.Authentication.SslProtocols" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="TransportContext" Type="System.Net.TransportContext" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="WriteTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="innerStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="userCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="innerStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="userCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="encryptionPolicy" Type="System.Net.Security.EncryptionPolicy" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="innerStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
      </Constructor>
      <Constructor>
        <Parameter Name="innerStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="innerStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
      </Constructor>
      <Method Name="AuthenticateAsClient" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="targetHost" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AuthenticateAsClient" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="targetHost" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AuthenticateAsClient" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="targetHost" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AuthenticateAsClientAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="targetHost" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AuthenticateAsClientAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="targetHost" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AuthenticateAsClientAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="targetHost" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AuthenticateAsServer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AuthenticateAsServer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AuthenticateAsServer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AuthenticateAsServerAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AuthenticateAsServerAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="AuthenticateAsServerAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="BeginAuthenticateAsClient" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="targetHost" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginAuthenticateAsClient" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="targetHost" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginAuthenticateAsClient" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="targetHost" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginAuthenticateAsServer" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginAuthenticateAsServer" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginAuthenticateAsServer" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginRead" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="BeginWrite" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Method>
      <Method Name="EndAuthenticateAsClient" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndAuthenticateAsServer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndRead" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndWrite" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Flush" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Read" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Seek" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="offset" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="SetLength" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ShutdownAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object" />
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.Net.Sockets">
    <Enumeration Name="AddressFamily" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AppleTalk" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="Atm" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="22" />
      <Field Name="Banyan" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="21" />
      <Field Name="Ccitt" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10" />
      <Field Name="Chaos" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="Cluster" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="24" />
      <Field Name="DataKit" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9" />
      <Field Name="DataLink" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="13" />
      <Field Name="DecNet" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="12" />
      <Field Name="Ecma" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="FireFox" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="19" />
      <Field Name="HyperChannel" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="15" />
      <Field Name="Ieee12844" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="25" />
      <Field Name="ImpLink" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="InterNetwork" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="InterNetworkV6" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="23" />
      <Field Name="Ipx" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Irda" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="26" />
      <Field Name="Iso" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="Lat" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="14" />
      <Field Name="Max" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="29" />
      <Field Name="NetBios" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="17" />
      <Field Name="NetworkDesigners" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="28" />
      <Field Name="NS" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Osi" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="Pup" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Sna" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11" />
      <Field Name="Unix" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Unknown" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
      <Field Name="Unspecified" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="VoiceView" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="18" />
    </Enumeration>
    <Enumeration Name="IOControlCode" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AbsorbRouterAlert" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2550136837" />
      <Field Name="AddMulticastGroupOnInterface" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2550136842" />
      <Field Name="AddressListChange" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="671088663" />
      <Field Name="AddressListQuery" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1207959574" />
      <Field Name="AddressListSort" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3355443225" />
      <Field Name="AssociateHandle" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2281701377" />
      <Field Name="AsyncIO" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2147772029" />
      <Field Name="BindToInterface" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2550136840" />
      <Field Name="DataToRead" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1074030207" />
      <Field Name="DeleteMulticastGroupFromInterface" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2550136843" />
      <Field Name="EnableCircularQueuing" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="671088642" />
      <Field Name="Flush" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="671088644" />
      <Field Name="GetBroadcastAddress" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1207959557" />
      <Field Name="GetExtensionFunctionPointer" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3355443206" />
      <Field Name="GetGroupQos" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3355443208" />
      <Field Name="GetQos" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3355443207" />
      <Field Name="KeepAliveValues" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2550136836" />
      <Field Name="LimitBroadcasts" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2550136839" />
      <Field Name="MulticastInterface" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2550136841" />
      <Field Name="MulticastScope" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2281701386" />
      <Field Name="MultipointLoopback" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2281701385" />
      <Field Name="NamespaceChange" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2281701401" />
      <Field Name="NonBlockingIO" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2147772030" />
      <Field Name="OobDataRead" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1074033415" />
      <Field Name="QueryTargetPnpHandle" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1207959576" />
      <Field Name="ReceiveAll" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2550136833" />
      <Field Name="ReceiveAllIgmpMulticast" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2550136835" />
      <Field Name="ReceiveAllMulticast" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2550136834" />
      <Field Name="RoutingInterfaceChange" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2281701397" />
      <Field Name="RoutingInterfaceQuery" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3355443220" />
      <Field Name="SetGroupQos" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2281701388" />
      <Field Name="SetQos" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2281701387" />
      <Field Name="TranslateHandle" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3355443213" />
      <Field Name="UnicastInterface" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2550136838" />
    </Enumeration>
    <Struct Name="IPPacketInformation" Type="System.Net.Sockets.IPPacketInformation" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
      <Property Name="Address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Interface" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="comparand" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="op_Equality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="packetInformation1" Type="System.Net.Sockets.IPPacketInformation" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="packetInformation2" Type="System.Net.Sockets.IPPacketInformation" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="op_Inequality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="packetInformation1" Type="System.Net.Sockets.IPPacketInformation" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="packetInformation2" Type="System.Net.Sockets.IPPacketInformation" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Struct>
    <Enumeration Name="IPProtectionLevel" Type="System.Net.Sockets.IPProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="EdgeRestricted" Type="System.Net.Sockets.IPProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="20" />
      <Field Name="Restricted" Type="System.Net.Sockets.IPProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="30" />
      <Field Name="Unrestricted" Type="System.Net.Sockets.IPProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10" />
      <Field Name="Unspecified" Type="System.Net.Sockets.IPProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
    </Enumeration>
    <Class Name="IPv6MulticastOption" Type="System.Net.Sockets.IPv6MulticastOption" BaseName="Object" BaseType="System.Object">
      <Property Name="Group" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="InterfaceIndex" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="group" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ifindex" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="group" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="LingerOption" Type="System.Net.Sockets.LingerOption" BaseName="Object" BaseType="System.Object">
      <Property Name="Enabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="LingerTime" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="enable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="seconds" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="MulticastOption" Type="System.Net.Sockets.MulticastOption" BaseName="Object" BaseType="System.Object">
      <Property Name="Group" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="InterfaceIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="LocalAddress" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="group" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="mcint" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="group" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="interfaceIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="group" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="NetworkStream" Type="System.Net.Sockets.NetworkStream" BaseName="Stream" BaseType="System.IO.Stream">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="CanRead" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CanSeek" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CanTimeout" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="CanWrite" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="DataAvailable" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Length" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Position" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ReadTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="WriteTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ownsSocket" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="access" Type="System.IO.FileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="access" Type="System.IO.FileAccess" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="ownsSocket" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginRead" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginWrite" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="EndRead" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndWrite" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Flush" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="FlushAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Read" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Seek" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="offset" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="SetLength" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Write" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Enumeration Name="ProtocolFamily" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AppleTalk" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="Atm" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="22" />
      <Field Name="Banyan" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="21" />
      <Field Name="Ccitt" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10" />
      <Field Name="Chaos" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="Cluster" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="24" />
      <Field Name="DataKit" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9" />
      <Field Name="DataLink" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="13" />
      <Field Name="DecNet" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="12" />
      <Field Name="Ecma" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="FireFox" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="19" />
      <Field Name="HyperChannel" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="15" />
      <Field Name="Ieee12844" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="25" />
      <Field Name="ImpLink" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="InterNetwork" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="InterNetworkV6" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="23" />
      <Field Name="Ipx" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Irda" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="26" />
      <Field Name="Iso" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="Lat" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="14" />
      <Field Name="Max" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="29" />
      <Field Name="NetBios" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="17" />
      <Field Name="NetworkDesigners" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="28" />
      <Field Name="NS" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Osi" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="Pup" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Sna" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11" />
      <Field Name="Unix" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Unknown" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
      <Field Name="Unspecified" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="VoiceView" Type="System.Net.Sockets.ProtocolFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="18" />
    </Enumeration>
    <Enumeration Name="ProtocolType" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Ggp" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Icmp" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="IcmpV6" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="58" />
      <Field Name="Idp" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="22" />
      <Field Name="Igmp" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="IP" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="IPSecAuthenticationHeader" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="51" />
      <Field Name="IPSecEncapsulatingSecurityPayload" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="50" />
      <Field Name="IPv4" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="IPv6" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="41" />
      <Field Name="IPv6DestinationOptions" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="60" />
      <Field Name="IPv6FragmentHeader" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="44" />
      <Field Name="IPv6HopByHopOptions" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="IPv6NoNextHeader" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="59" />
      <Field Name="IPv6RoutingHeader" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="43" />
      <Field Name="Ipx" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1000" />
      <Field Name="ND" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="77" />
      <Field Name="Pup" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="12" />
      <Field Name="Raw" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="255" />
      <Field Name="Spx" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1256" />
      <Field Name="SpxII" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1257" />
      <Field Name="Tcp" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Udp" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="17" />
      <Field Name="Unknown" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
      <Field Name="Unspecified" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Enumeration Name="SelectMode" Type="System.Net.Sockets.SelectMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="SelectError" Type="System.Net.Sockets.SelectMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="SelectRead" Type="System.Net.Sockets.SelectMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="SelectWrite" Type="System.Net.Sockets.SelectMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="SendPacketsElement" Type="System.Net.Sockets.SendPacketsElement" BaseName="Object" BaseType="System.Object">
      <Property Name="Buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="EndOfPacket" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="FilePath" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="filepath" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="filepath" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="filepath" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="endOfPacket" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Constructor>
      <Constructor>
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="endOfPacket" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="Socket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="AddressFamily" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Available" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Blocking" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Connected" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="DontFragment" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="DualMode" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="EnableBroadcast" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ExclusiveAddressUse" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Handle" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsBound" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="LingerState" Type="System.Net.Sockets.LingerOption" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="LocalEndPoint" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="MulticastLoopback" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="NoDelay" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="OSSupportsIPv4" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="OSSupportsIPv6" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="ProtocolType" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="ReceiveBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ReceiveTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="RemoteEndPoint" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SendBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="SendTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="SocketType" Type="System.Net.Sockets.SocketType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="SupportsIPv4" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="SupportsIPv6" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="Ttl" Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="UseOnlyOverlappedIO" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="socketType" Type="System.Net.Sockets.SocketType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="protocolType" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="addressFamily" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="socketType" Type="System.Net.Sockets.SocketType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="protocolType" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="socketInformation" Type="System.Net.Sockets.SocketInformation" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Accept" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
      <Method Name="AcceptAsync" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
      <Method Name="BeginAccept" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginAccept" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="receiveSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginAccept" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="acceptSocket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="receiveSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginConnect" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginConnect" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="host" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginConnect" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginConnect" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginDisconnect" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="reuseSocket" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginReceive" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginReceive" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError&amp;" IsByRef="True" ElementType="System.Net.Sockets.SocketError" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginReceive" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffers" Type="System.Collections.Generic.IList`1&lt;System.ArraySegment`1&lt;System.Byte&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginReceive" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffers" Type="System.Collections.Generic.IList`1&lt;System.ArraySegment`1&lt;System.Byte&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError&amp;" IsByRef="True" ElementType="System.Net.Sockets.SocketError" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginReceiveFrom" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint&amp;" IsByRef="True" ElementType="System.Net.EndPoint" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginReceiveMessageFrom" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint&amp;" IsByRef="True" ElementType="System.Net.EndPoint" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginSend" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginSend" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError&amp;" IsByRef="True" ElementType="System.Net.Sockets.SocketError" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginSend" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffers" Type="System.Collections.Generic.IList`1&lt;System.ArraySegment`1&lt;System.Byte&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginSend" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffers" Type="System.Collections.Generic.IList`1&lt;System.ArraySegment`1&lt;System.Byte&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError&amp;" IsByRef="True" ElementType="System.Net.Sockets.SocketError" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginSendFile" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginSendFile" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="preBuffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="postBuffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="flags" Type="System.Net.Sockets.TransmitFileOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginSendTo" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="Bind" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="localEP" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CancelConnectAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="timeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Connect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Connect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Connect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="host" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Connect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ConnectAsync" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
      <Method Name="ConnectAsync" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="socketType" Type="System.Net.Sockets.SocketType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="protocolType" Type="System.Net.Sockets.ProtocolType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
      <Method Name="Disconnect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="reuseSocket" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="DisconnectAsync" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="DuplicateAndClose" Type="System.Net.Sockets.SocketInformation" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="targetProcessId" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="EndAccept" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndAccept" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object">
        <Parameter Name="buffer" Type="System.Byte[]&amp;" IsByRef="True" ElementType="System.Byte[]" />
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndAccept" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object">
        <Parameter Name="buffer" Type="System.Byte[]&amp;" IsByRef="True" ElementType="System.Byte[]" />
        <Parameter Name="bytesTransferred" Type="System.Int32&amp;" IsByRef="True" ElementType="System.Int32" />
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndConnect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndDisconnect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndReceive" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndReceive" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError&amp;" IsByRef="True" ElementType="System.Net.Sockets.SocketError" />
      </Method>
      <Method Name="EndReceiveFrom" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
        <Parameter Name="endPoint" Type="System.Net.EndPoint&amp;" IsByRef="True" ElementType="System.Net.EndPoint" />
      </Method>
      <Method Name="EndReceiveMessageFrom" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags&amp;" IsByRef="True" ElementType="System.Net.Sockets.SocketFlags" />
        <Parameter Name="endPoint" Type="System.Net.EndPoint&amp;" IsByRef="True" ElementType="System.Net.EndPoint" />
        <Parameter Name="ipPacketInformation" Type="System.Net.Sockets.IPPacketInformation&amp;" IsByRef="True" ElementType="System.Net.Sockets.IPPacketInformation" />
      </Method>
      <Method Name="EndSend" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndSend" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError&amp;" IsByRef="True" ElementType="System.Net.Sockets.SocketError" />
      </Method>
      <Method Name="EndSendFile" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndSendTo" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="GetSocketOption" Type="System.Object">
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="GetSocketOption" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="optionValue" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="GetSocketOption" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="optionLength" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IOControl" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="ioControlCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="optionInValue" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="optionOutValue" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="IOControl" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="ioControlCode" Type="System.Net.Sockets.IOControlCode" IsValueType="True" UnderlyingType="System.Int64" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="optionInValue" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="optionOutValue" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="Listen" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="backlog" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Poll" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="microSeconds" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="mode" Type="System.Net.Sockets.SelectMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Receive" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Receive" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Receive" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="Receive" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Receive" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError&amp;" IsByRef="True" ElementType="System.Net.Sockets.SocketError" />
      </Method>
      <Method Name="Receive" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffers" Type="System.Collections.Generic.IList`1&lt;System.ArraySegment`1&lt;System.Byte&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Receive" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffers" Type="System.Collections.Generic.IList`1&lt;System.ArraySegment`1&lt;System.Byte&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Receive" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffers" Type="System.Collections.Generic.IList`1&lt;System.ArraySegment`1&lt;System.Byte&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError&amp;" IsByRef="True" ElementType="System.Net.Sockets.SocketError" />
      </Method>
      <Method Name="ReceiveAsync" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
      <Method Name="ReceiveFrom" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint&amp;" IsByRef="True" ElementType="System.Net.EndPoint" />
      </Method>
      <Method Name="ReceiveFrom" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint&amp;" IsByRef="True" ElementType="System.Net.EndPoint" />
      </Method>
      <Method Name="ReceiveFrom" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint&amp;" IsByRef="True" ElementType="System.Net.EndPoint" />
      </Method>
      <Method Name="ReceiveFrom" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint&amp;" IsByRef="True" ElementType="System.Net.EndPoint" />
      </Method>
      <Method Name="ReceiveFromAsync" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
      <Method Name="ReceiveMessageFrom" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags&amp;" IsByRef="True" ElementType="System.Net.Sockets.SocketFlags" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint&amp;" IsByRef="True" ElementType="System.Net.EndPoint" />
        <Parameter Name="ipPacketInformation" Type="System.Net.Sockets.IPPacketInformation&amp;" IsByRef="True" ElementType="System.Net.Sockets.IPPacketInformation" />
      </Method>
      <Method Name="ReceiveMessageFromAsync" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
      <Method Name="Select" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="checkRead" Type="System.Collections.IList" IsInterface="True" />
        <Parameter Name="checkWrite" Type="System.Collections.IList" IsInterface="True" />
        <Parameter Name="checkError" Type="System.Collections.IList" IsInterface="True" />
        <Parameter Name="microSeconds" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Send" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Send" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Send" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="Send" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffers" Type="System.Collections.Generic.IList`1&lt;System.ArraySegment`1&lt;System.Byte&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="Send" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffers" Type="System.Collections.Generic.IList`1&lt;System.ArraySegment`1&lt;System.Byte&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Send" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffers" Type="System.Collections.Generic.IList`1&lt;System.ArraySegment`1&lt;System.Byte&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError&amp;" IsByRef="True" ElementType="System.Net.Sockets.SocketError" />
      </Method>
      <Method Name="Send" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Send" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError&amp;" IsByRef="True" ElementType="System.Net.Sockets.SocketError" />
      </Method>
      <Method Name="SendAsync" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
      <Method Name="SendFile" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SendFile" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="preBuffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="postBuffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="flags" Type="System.Net.Sockets.TransmitFileOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="SendPacketsAsync" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
      <Method Name="SendTo" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SendTo" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SendTo" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SendTo" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SendToAsync" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
      <Method Name="SetIPProtectionLevel" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="level" Type="System.Net.Sockets.IPProtectionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="SetSocketOption" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="optionValue" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SetSocketOption" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="optionValue" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="SetSocketOption" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="optionValue" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SetSocketOption" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="optionValue" Type="System.Object" />
      </Method>
      <Method Name="Shutdown" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="how" Type="System.Net.Sockets.SocketShutdown" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
    </Class>
    <Class Name="SocketAsyncEventArgs" Type="System.Net.Sockets.SocketAsyncEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="AcceptSocket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" />
      <Property Name="BufferList" Type="System.Collections.Generic.IList`1&lt;System.ArraySegment`1&lt;System.Byte&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True" IsWritable="True">
        <GenericTypeArgument Type="System.ArraySegment`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" />
      </Property>
      <Property Name="BytesTransferred" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ConnectByNameError" Type="System.Exception" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ConnectSocket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="DisconnectReuseSocket" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="LastOperation" Type="System.Net.Sockets.SocketAsyncOperation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ReceiveMessageFromPacketInfo" Type="System.Net.Sockets.IPPacketInformation" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="RemoteEndPoint" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="SendPacketsElements" Type="System.Net.Sockets.SendPacketsElement[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.Sockets.SendPacketsElement" IsReadable="True" IsWritable="True" />
      <Property Name="SendPacketsFlags" Type="System.Net.Sockets.TransmitFileOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="SendPacketsSendSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="SocketClientAccessPolicyProtocol" Type="System.Net.Sockets.SocketClientAccessPolicyProtocol" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="SocketError" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="SocketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="UserToken" Type="System.Object" IsReadable="True" IsWritable="True" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="SetBuffer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SetBuffer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Event Name="Completed" Type="System.EventHandler`1&lt;System.Net.Sockets.SocketAsyncEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.Sockets.SocketAsyncEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Enumeration Name="SocketAsyncOperation" Type="System.Net.Sockets.SocketAsyncOperation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Accept" Type="System.Net.Sockets.SocketAsyncOperation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Connect" Type="System.Net.Sockets.SocketAsyncOperation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Disconnect" Type="System.Net.Sockets.SocketAsyncOperation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="None" Type="System.Net.Sockets.SocketAsyncOperation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Receive" Type="System.Net.Sockets.SocketAsyncOperation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="ReceiveFrom" Type="System.Net.Sockets.SocketAsyncOperation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="ReceiveMessageFrom" Type="System.Net.Sockets.SocketAsyncOperation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Send" Type="System.Net.Sockets.SocketAsyncOperation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="SendPackets" Type="System.Net.Sockets.SocketAsyncOperation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="SendTo" Type="System.Net.Sockets.SocketAsyncOperation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9" />
    </Enumeration>
    <Enumeration Name="SocketClientAccessPolicyProtocol" Type="System.Net.Sockets.SocketClientAccessPolicyProtocol" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Http" Type="System.Net.Sockets.SocketClientAccessPolicyProtocol" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Tcp" Type="System.Net.Sockets.SocketClientAccessPolicyProtocol" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Enumeration Name="SocketError" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AccessDenied" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10013" />
      <Field Name="AddressAlreadyInUse" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10048" />
      <Field Name="AddressFamilyNotSupported" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10047" />
      <Field Name="AddressNotAvailable" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10049" />
      <Field Name="AlreadyInProgress" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10037" />
      <Field Name="ConnectionAborted" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10053" />
      <Field Name="ConnectionRefused" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10061" />
      <Field Name="ConnectionReset" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10054" />
      <Field Name="DestinationAddressRequired" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10039" />
      <Field Name="Disconnecting" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10101" />
      <Field Name="Fault" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10014" />
      <Field Name="HostDown" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10064" />
      <Field Name="HostNotFound" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11001" />
      <Field Name="HostUnreachable" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10065" />
      <Field Name="InProgress" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10036" />
      <Field Name="Interrupted" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10004" />
      <Field Name="InvalidArgument" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10022" />
      <Field Name="IOPending" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="997" />
      <Field Name="IsConnected" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10056" />
      <Field Name="MessageSize" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10040" />
      <Field Name="NetworkDown" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10050" />
      <Field Name="NetworkReset" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10052" />
      <Field Name="NetworkUnreachable" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10051" />
      <Field Name="NoBufferSpaceAvailable" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10055" />
      <Field Name="NoData" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11004" />
      <Field Name="NoRecovery" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11003" />
      <Field Name="NotConnected" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10057" />
      <Field Name="NotInitialized" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10093" />
      <Field Name="NotSocket" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10038" />
      <Field Name="OperationAborted" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="995" />
      <Field Name="OperationNotSupported" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10045" />
      <Field Name="ProcessLimit" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10067" />
      <Field Name="ProtocolFamilyNotSupported" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10046" />
      <Field Name="ProtocolNotSupported" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10043" />
      <Field Name="ProtocolOption" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10042" />
      <Field Name="ProtocolType" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10041" />
      <Field Name="Shutdown" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10058" />
      <Field Name="SocketError" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
      <Field Name="SocketNotSupported" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10044" />
      <Field Name="Success" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="SystemNotReady" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10091" />
      <Field Name="TimedOut" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10060" />
      <Field Name="TooManyOpenSockets" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10024" />
      <Field Name="TryAgain" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11002" />
      <Field Name="TypeNotFound" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10109" />
      <Field Name="VersionNotSupported" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10092" />
      <Field Name="WouldBlock" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10035" />
    </Enumeration>
    <Class Name="SocketException" Type="System.Net.Sockets.SocketException" BaseName="Win32Exception" BaseType="System.ComponentModel.Win32Exception">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Property Name="ErrorCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Message" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SocketErrorCode" Type="System.Net.Sockets.SocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="errorCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Enumeration Name="SocketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Broadcast" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1024" />
      <Field Name="ControlDataTruncated" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="512" />
      <Field Name="DontRoute" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="MaxIOVectorLength" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="Multicast" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2048" />
      <Field Name="None" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="OutOfBand" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Partial" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32768" />
      <Field Name="Peek" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Truncated" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="256" />
    </Enumeration>
    <Struct Name="SocketInformation" Type="System.Net.Sockets.SocketInformation" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
      <Property Name="Options" Type="System.Net.Sockets.SocketInformationOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="ProtocolInformation" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
    </Struct>
    <Enumeration Name="SocketInformationOptions" Type="System.Net.Sockets.SocketInformationOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Connected" Type="System.Net.Sockets.SocketInformationOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Listening" Type="System.Net.Sockets.SocketInformationOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="NonBlocking" Type="System.Net.Sockets.SocketInformationOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="UseOnlyOverlappedIO" Type="System.Net.Sockets.SocketInformationOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
    </Enumeration>
    <Enumeration Name="SocketOptionLevel" Type="System.Net.Sockets.SocketOptionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="IP" Type="System.Net.Sockets.SocketOptionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="IPv6" Type="System.Net.Sockets.SocketOptionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="41" />
      <Field Name="Socket" Type="System.Net.Sockets.SocketOptionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="65535" />
      <Field Name="Tcp" Type="System.Net.Sockets.SocketOptionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Udp" Type="System.Net.Sockets.SocketOptionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="17" />
    </Enumeration>
    <Enumeration Name="SocketOptionName" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AcceptConnection" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="AddMembership" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="12" />
      <Field Name="AddSourceMembership" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="15" />
      <Field Name="BlockSource" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="17" />
      <Field Name="Broadcast" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="BsdUrgent" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="ChecksumCoverage" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="20" />
      <Field Name="Debug" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="DontFragment" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="14" />
      <Field Name="DontLinger" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-129" />
      <Field Name="DontRoute" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="DropMembership" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="13" />
      <Field Name="DropSourceMembership" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="Error" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4103" />
      <Field Name="ExclusiveAddressUse" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-5" />
      <Field Name="Expedited" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="HeaderIncluded" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="HopLimit" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="21" />
      <Field Name="IPOptions" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="IPProtectionLevel" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="23" />
      <Field Name="IpTimeToLive" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="IPv6Only" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="27" />
      <Field Name="KeepAlive" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="Linger" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="128" />
      <Field Name="MaxConnections" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2147483647" />
      <Field Name="MulticastInterface" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9" />
      <Field Name="MulticastLoopback" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11" />
      <Field Name="MulticastTimeToLive" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10" />
      <Field Name="NoChecksum" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="NoDelay" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="OutOfBandInline" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="256" />
      <Field Name="PacketInformation" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="19" />
      <Field Name="ReceiveBuffer" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4098" />
      <Field Name="ReceiveLowWater" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4100" />
      <Field Name="ReceiveTimeout" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4102" />
      <Field Name="ReuseAddress" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="ReuseUnicastPort" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="12295" />
      <Field Name="SendBuffer" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4097" />
      <Field Name="SendLowWater" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4099" />
      <Field Name="SendTimeout" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4101" />
      <Field Name="Type" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4104" />
      <Field Name="TypeOfService" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="UnblockSource" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="18" />
      <Field Name="UpdateAcceptContext" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="28683" />
      <Field Name="UpdateConnectContext" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="28688" />
      <Field Name="UseLoopback" Type="System.Net.Sockets.SocketOptionName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
    </Enumeration>
    <Struct Name="SocketReceiveFromResult" Type="System.Net.Sockets.SocketReceiveFromResult" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
      <Field Name="ReceivedBytes" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Field Name="RemoteEndPoint" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
    </Struct>
    <Struct Name="SocketReceiveMessageFromResult" Type="System.Net.Sockets.SocketReceiveMessageFromResult" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
      <Field Name="PacketInformation" Type="System.Net.Sockets.IPPacketInformation" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Field Name="ReceivedBytes" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Field Name="RemoteEndPoint" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Field Name="SocketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
    </Struct>
    <Enumeration Name="SocketShutdown" Type="System.Net.Sockets.SocketShutdown" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Both" Type="System.Net.Sockets.SocketShutdown" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Receive" Type="System.Net.Sockets.SocketShutdown" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Send" Type="System.Net.Sockets.SocketShutdown" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="SocketTaskExtensions" Type="System.Net.Sockets.SocketTaskExtensions" BaseName="Object" BaseType="System.Object">
      <Method Name="AcceptAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.Sockets.Socket&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AcceptAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.Sockets.Socket&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="acceptSocket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ConnectAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ConnectAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ConnectAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ConnectAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="host" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ReceiveAsync" Type="System.Threading.Tasks.Task`1&lt;System.Int32&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="buffer" Type="System.ArraySegment`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="ReceiveAsync" Type="System.Threading.Tasks.Task`1&lt;System.Int32&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="buffers" Type="System.Collections.Generic.IList`1&lt;System.ArraySegment`1&lt;System.Byte&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="ReceiveFromAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.Sockets.SocketReceiveFromResult&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Net.Sockets.SocketReceiveFromResult" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="buffer" Type="System.ArraySegment`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="remoteEndPoint" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ReceiveMessageFromAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.Sockets.SocketReceiveMessageFromResult&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Net.Sockets.SocketReceiveMessageFromResult" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="buffer" Type="System.ArraySegment`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="remoteEndPoint" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SendAsync" Type="System.Threading.Tasks.Task`1&lt;System.Int32&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="buffer" Type="System.ArraySegment`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="SendAsync" Type="System.Threading.Tasks.Task`1&lt;System.Int32&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="buffers" Type="System.Collections.Generic.IList`1&lt;System.ArraySegment`1&lt;System.Byte&gt;&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="SendToAsync" Type="System.Threading.Tasks.Task`1&lt;System.Int32&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="buffer" Type="System.ArraySegment`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Enumeration Name="SocketType" Type="System.Net.Sockets.SocketType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Dgram" Type="System.Net.Sockets.SocketType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Raw" Type="System.Net.Sockets.SocketType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Rdm" Type="System.Net.Sockets.SocketType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Seqpacket" Type="System.Net.Sockets.SocketType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="Stream" Type="System.Net.Sockets.SocketType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Unknown" Type="System.Net.Sockets.SocketType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="-1" />
    </Enumeration>
    <Class Name="TcpClient" Type="System.Net.Sockets.TcpClient" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Available" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Client" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Connected" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ExclusiveAddressUse" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="LingerState" Type="System.Net.Sockets.LingerOption" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="NoDelay" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ReceiveBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ReceiveTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="SendBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="SendTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" />
      </Constructor>
      <Constructor>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="hostname" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginConnect" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="host" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginConnect" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginConnect" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Connect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="hostname" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Connect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Connect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" />
      </Method>
      <Method Name="Connect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="ipAddresses" Type="System.Net.IPAddress[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ConnectAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ConnectAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="host" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ConnectAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="EndConnect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="GetStream" Type="System.Net.Sockets.NetworkStream" BaseName="Stream" BaseType="System.IO.Stream" />
    </Class>
    <Class Name="TcpListener" Type="System.Net.Sockets.TcpListener" BaseName="Object" BaseType="System.Object">
      <Property Name="ExclusiveAddressUse" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="LocalEndpoint" Type="System.Net.EndPoint" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Server" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" />
      </Constructor>
      <Constructor>
        <Parameter Name="localaddr" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="AcceptSocket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
      <Method Name="AcceptSocketAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.Sockets.Socket&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AcceptTcpClient" Type="System.Net.Sockets.TcpClient" BaseName="Object" BaseType="System.Object" />
      <Method Name="AcceptTcpClientAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.Sockets.TcpClient&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.Sockets.TcpClient" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AllowNatTraversal" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="allowed" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="BeginAcceptSocket" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginAcceptTcpClient" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="Create" Type="System.Net.Sockets.TcpListener" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="EndAcceptSocket" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndAcceptTcpClient" Type="System.Net.Sockets.TcpClient" BaseName="Object" BaseType="System.Object">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Pending" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Start" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Start" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="backlog" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Stop" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Enumeration Name="TransmitFileOptions" Type="System.Net.Sockets.TransmitFileOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Disconnect" Type="System.Net.Sockets.TransmitFileOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="ReuseSocket" Type="System.Net.Sockets.TransmitFileOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="UseDefaultWorkerThread" Type="System.Net.Sockets.TransmitFileOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="UseKernelApc" Type="System.Net.Sockets.TransmitFileOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="UseSystemThread" Type="System.Net.Sockets.TransmitFileOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="WriteBehind" Type="System.Net.Sockets.TransmitFileOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
    </Enumeration>
    <Class Name="UdpClient" Type="System.Net.Sockets.UdpClient" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Available" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Client" Type="System.Net.Sockets.Socket" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="DontFragment" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="EnableBroadcast" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ExclusiveAddressUse" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="MulticastLoopback" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Ttl" Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" />
      </Constructor>
      <Constructor>
        <Parameter Name="hostname" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="AllowNatTraversal" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="allowed" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="BeginReceive" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="requestCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginSend" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="datagram" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="bytes" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginSend" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="datagram" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="bytes" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="hostname" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginSend" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="datagram" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="bytes" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Connect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="hostname" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Connect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="addr" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Connect" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="DropMulticastGroup" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="DropMulticastGroup" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ifindex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="EndReceive" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint&amp;" IsByRef="True" ElementType="System.Net.IPEndPoint" />
      </Method>
      <Method Name="EndSend" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asyncResult" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="JoinMulticastGroup" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="JoinMulticastGroup" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="localAddress" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="JoinMulticastGroup" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="ifindex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="JoinMulticastGroup" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="timeToLive" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Receive" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint&amp;" IsByRef="True" ElementType="System.Net.IPEndPoint" />
      </Method>
      <Method Name="ReceiveAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.Sockets.UdpReceiveResult&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.Sockets.UdpReceiveResult" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Send" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="dgram" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="bytes" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" />
      </Method>
      <Method Name="Send" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="dgram" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="bytes" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="hostname" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Send" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="dgram" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="bytes" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SendAsync" Type="System.Threading.Tasks.Task`1&lt;System.Int32&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="datagram" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="bytes" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SendAsync" Type="System.Threading.Tasks.Task`1&lt;System.Int32&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="datagram" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="bytes" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" />
      </Method>
      <Method Name="SendAsync" Type="System.Threading.Tasks.Task`1&lt;System.Int32&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="datagram" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="bytes" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="hostname" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Struct Name="UdpReceiveResult" Type="System.Net.Sockets.UdpReceiveResult" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
      <ImplementedInterface Type="System.IEquatable`1&lt;System.Net.Sockets.UdpReceiveResult&gt;" />
      <Property Name="Buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" />
      <Property Name="RemoteEndPoint" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" IsReadable="True" />
      <Constructor>
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="remoteEndPoint" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="other" Type="System.Net.Sockets.UdpReceiveResult" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="op_Equality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="left" Type="System.Net.Sockets.UdpReceiveResult" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="right" Type="System.Net.Sockets.UdpReceiveResult" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="op_Inequality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="left" Type="System.Net.Sockets.UdpReceiveResult" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="right" Type="System.Net.Sockets.UdpReceiveResult" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Struct>
  </Namespace>
  <Namespace Name="System.Net.WebSockets">
    <Class Name="ClientWebSocket" Type="System.Net.WebSockets.ClientWebSocket" BaseName="WebSocket" BaseType="System.Net.WebSockets.WebSocket">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="CloseStatus" Type="System.Nullable`1&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Net.WebSockets.WebSocketCloseStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Property>
      <Property Name="CloseStatusDescription" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Options" Type="System.Net.WebSockets.ClientWebSocketOptions" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="State" Type="System.Net.WebSockets.WebSocketState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="SubProtocol" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="Abort" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="CloseAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="statusDescription" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CloseOutputAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="statusDescription" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ConnectAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="uri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ReceiveAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.WebSockets.WebSocketReceiveResult" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="buffer" Type="System.ArraySegment`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SendAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="buffer" Type="System.ArraySegment`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="endOfMessage" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="ClientWebSocketOptions" Type="System.Net.WebSockets.ClientWebSocketOptions" BaseName="Object" BaseType="System.Object">
      <Property Name="ClientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" IsReadable="True" IsWritable="True" />
      <Property Name="Cookies" Type="System.Net.CookieContainer" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Credentials" Type="System.Net.ICredentials" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Property Name="KeepAliveInterval" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Proxy" Type="System.Net.IWebProxy" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Property Name="UseDefaultCredentials" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Method Name="AddSubProtocol" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="subProtocol" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SetBuffer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="receiveBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="sendBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SetBuffer" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="receiveBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="sendBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="buffer" Type="System.ArraySegment`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="SetRequestHeader" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="headerName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="headerValue" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="HttpListenerWebSocketContext" Type="System.Net.WebSockets.HttpListenerWebSocketContext" BaseName="WebSocketContext" BaseType="System.Net.WebSockets.WebSocketContext">
      <Property Name="CookieCollection" Type="System.Net.CookieCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Headers" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" IsReadable="True" />
      <Property Name="IsAuthenticated" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsLocal" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSecureConnection" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Origin" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="RequestUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SecWebSocketKey" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SecWebSocketProtocols" Type="System.Collections.Generic.IEnumerable`1&lt;System.String&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="SecWebSocketVersion" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="User" Type="System.Security.Principal.IPrincipal" IsInterface="True" IsReadable="True" />
      <Property Name="WebSocket" Type="System.Net.WebSockets.WebSocket" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Class Name="WebSocket" Type="System.Net.WebSockets.WebSocket" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="CloseStatus" Type="System.Nullable`1&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.Net.WebSockets.WebSocketCloseStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Property>
      <Property Name="CloseStatusDescription" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="DefaultKeepAliveInterval" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="State" Type="System.Net.WebSockets.WebSocketState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="SubProtocol" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="Abort" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="CloseAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="statusDescription" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CloseOutputAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="statusDescription" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CreateClientBuffer" Type="System.ArraySegment`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="receiveBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="sendBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CreateClientWebSocket" Type="System.Net.WebSockets.WebSocket" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="innerStream" Type="System.IO.Stream" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
        <Parameter Name="subProtocol" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="receiveBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="sendBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="useZeroMaskingKey" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="internalBuffer" Type="System.ArraySegment`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
      <Method Name="CreateServerBuffer" Type="System.ArraySegment`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsStatic="True">
        <GenericTypeArgument Type="System.Byte" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="receiveBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsApplicationTargeting45" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" />
      <Method Name="ReceiveAsync" Type="System.Threading.Tasks.Task`1&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;" BaseName="Task" BaseType="System.Threading.Tasks.Task" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.WebSockets.WebSocketReceiveResult" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="buffer" Type="System.ArraySegment`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="RegisterPrefixes" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True" />
      <Method Name="SendAsync" Type="System.Threading.Tasks.Task" BaseName="Object" BaseType="System.Object">
        <Parameter Name="buffer" Type="System.ArraySegment`1&lt;System.Byte&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="endOfMessage" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Enumeration Name="WebSocketCloseStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Empty" Type="System.Net.WebSockets.WebSocketCloseStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1005" />
      <Field Name="EndpointUnavailable" Type="System.Net.WebSockets.WebSocketCloseStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1001" />
      <Field Name="InternalServerError" Type="System.Net.WebSockets.WebSocketCloseStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1011" />
      <Field Name="InvalidMessageType" Type="System.Net.WebSockets.WebSocketCloseStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1003" />
      <Field Name="InvalidPayloadData" Type="System.Net.WebSockets.WebSocketCloseStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1007" />
      <Field Name="MandatoryExtension" Type="System.Net.WebSockets.WebSocketCloseStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1010" />
      <Field Name="MessageTooBig" Type="System.Net.WebSockets.WebSocketCloseStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1009" />
      <Field Name="NormalClosure" Type="System.Net.WebSockets.WebSocketCloseStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1000" />
      <Field Name="PolicyViolation" Type="System.Net.WebSockets.WebSocketCloseStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1008" />
      <Field Name="ProtocolError" Type="System.Net.WebSockets.WebSocketCloseStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1002" />
    </Enumeration>
    <Class Name="WebSocketContext" Type="System.Net.WebSockets.WebSocketContext" BaseName="Object" BaseType="System.Object">
      <Property Name="CookieCollection" Type="System.Net.CookieCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Headers" Type="System.Collections.Specialized.NameValueCollection" BaseName="NameObjectCollectionBase" BaseType="System.Collections.Specialized.NameObjectCollectionBase" IsReadable="True" />
      <Property Name="IsAuthenticated" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsLocal" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSecureConnection" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Origin" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="RequestUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SecWebSocketKey" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SecWebSocketProtocols" Type="System.Collections.Generic.IEnumerable`1&lt;System.String&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True">
        <GenericTypeArgument Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Property>
      <Property Name="SecWebSocketVersion" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="User" Type="System.Security.Principal.IPrincipal" IsInterface="True" IsReadable="True" />
      <Property Name="WebSocket" Type="System.Net.WebSockets.WebSocket" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Enumeration Name="WebSocketError" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="ConnectionClosedPrematurely" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="Faulted" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="HeaderError" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="InvalidMessageType" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="InvalidState" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9" />
      <Field Name="NativeError" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="NotAWebSocket" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Success" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="UnsupportedProtocol" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="UnsupportedVersion" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
    </Enumeration>
    <Class Name="WebSocketException" Type="System.Net.WebSockets.WebSocketException" BaseName="Win32Exception" BaseType="System.ComponentModel.Win32Exception">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Property Name="ErrorCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="WebSocketErrorCode" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="error" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="error" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="error" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="error" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="nativeError" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="nativeError" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="nativeError" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="error" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="nativeError" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="error" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="nativeError" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="error" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="nativeError" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="error" Type="System.Net.WebSockets.WebSocketError" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="nativeError" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="GetObjectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Enumeration Name="WebSocketMessageType" Type="System.Net.WebSockets.WebSocketMessageType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Binary" Type="System.Net.WebSockets.WebSocketMessageType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Close" Type="System.Net.WebSockets.WebSocketMessageType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Text" Type="System.Net.WebSockets.WebSocketMessageType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="WebSocketReceiveResult" Type="System.Net.WebSockets.WebSocketReceiveResult" BaseName="Object" BaseType="System.Object">
      <Property Name="CloseStatus" Type="System.Nullable`1&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" IsReadable="True" IsWritable="True">
        <GenericTypeArgument Type="System.Net.WebSockets.WebSocketCloseStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Property>
      <Property Name="CloseStatusDescription" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="EndOfMessage" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="MessageType" Type="System.Net.WebSockets.WebSocketMessageType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="endOfMessage" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="endOfMessage" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="closeStatus" Type="System.Nullable`1&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsGenericType="True" IsConstructedGenericType="True" />
        <Parameter Name="closeStatusDescription" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Enumeration Name="WebSocketState" Type="System.Net.WebSockets.WebSocketState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Aborted" Type="System.Net.WebSockets.WebSocketState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="Closed" Type="System.Net.WebSockets.WebSocketState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="CloseReceived" Type="System.Net.WebSockets.WebSocketState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="CloseSent" Type="System.Net.WebSockets.WebSocketState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Connecting" Type="System.Net.WebSockets.WebSocketState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="None" Type="System.Net.WebSockets.WebSocketState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Open" Type="System.Net.WebSockets.WebSocketState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.Reflection">
    <Interface Name="ICustomTypeProvider" Type="System.Reflection.ICustomTypeProvider" IsInterface="True">
      <Method Name="GetCustomType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
    </Interface>
  </Namespace>
  <Namespace Name="System.Runtime.InteropServices">
    <Class Name="DefaultParameterValueAttribute" Type="System.Runtime.InteropServices.DefaultParameterValueAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Value" Type="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="value" Type="System.Object" />
      </Constructor>
    </Class>
    <Class Name="HandleCollector" Type="System.Runtime.InteropServices.HandleCollector" BaseName="Object" BaseType="System.Object">
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="InitialThreshold" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="MaximumThreshold" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="initialThreshold" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="initialThreshold" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="maximumThreshold" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="StandardOleMarshalObject" Type="System.Runtime.InteropServices.StandardOleMarshalObject" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject" />
  </Namespace>
  <Namespace Name="System.Runtime.InteropServices.ComTypes">
    <Enumeration Name="ADVF" Type="System.Runtime.InteropServices.ComTypes.ADVF" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="ADVF_DATAONSTOP" Type="System.Runtime.InteropServices.ComTypes.ADVF" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
      <Field Name="ADVF_NODATA" Type="System.Runtime.InteropServices.ComTypes.ADVF" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="ADVF_ONLYONCE" Type="System.Runtime.InteropServices.ComTypes.ADVF" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="ADVF_PRIMEFIRST" Type="System.Runtime.InteropServices.ComTypes.ADVF" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="ADVFCACHE_FORCEBUILTIN" Type="System.Runtime.InteropServices.ComTypes.ADVF" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="ADVFCACHE_NOHANDLER" Type="System.Runtime.InteropServices.ComTypes.ADVF" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="ADVFCACHE_ONSAVE" Type="System.Runtime.InteropServices.ComTypes.ADVF" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
    </Enumeration>
    <Enumeration Name="DATADIR" Type="System.Runtime.InteropServices.ComTypes.DATADIR" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="DATADIR_GET" Type="System.Runtime.InteropServices.ComTypes.DATADIR" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="DATADIR_SET" Type="System.Runtime.InteropServices.ComTypes.DATADIR" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Enumeration Name="DVASPECT" Type="System.Runtime.InteropServices.ComTypes.DVASPECT" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="DVASPECT_CONTENT" Type="System.Runtime.InteropServices.ComTypes.DVASPECT" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="DVASPECT_DOCPRINT" Type="System.Runtime.InteropServices.ComTypes.DVASPECT" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="DVASPECT_ICON" Type="System.Runtime.InteropServices.ComTypes.DVASPECT" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="DVASPECT_THUMBNAIL" Type="System.Runtime.InteropServices.ComTypes.DVASPECT" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Struct Name="FORMATETC" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
      <Field Name="cfFormat" Type="System.Int16" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Field Name="dwAspect" Type="System.Runtime.InteropServices.ComTypes.DVASPECT" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Field Name="lindex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Field Name="ptd" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Field Name="tymed" Type="System.Runtime.InteropServices.ComTypes.TYMED" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
    </Struct>
    <Interface Name="IAdviseSink" Type="System.Runtime.InteropServices.ComTypes.IAdviseSink" IsInterface="True">
      <Method Name="OnClose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="OnDataChange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="format" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" IsByRef="True" ElementType="System.Runtime.InteropServices.ComTypes.FORMATETC" />
        <Parameter Name="stgmedium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" IsByRef="True" ElementType="System.Runtime.InteropServices.ComTypes.STGMEDIUM" />
      </Method>
      <Method Name="OnRename" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="moniker" Type="System.Runtime.InteropServices.ComTypes.IMoniker" IsInterface="True" />
      </Method>
      <Method Name="OnSave" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="OnViewChange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="aspect" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Interface>
    <Interface Name="IDataObject" Type="System.Runtime.InteropServices.ComTypes.IDataObject" IsInterface="True">
      <Method Name="DAdvise" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="pFormatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" IsByRef="True" ElementType="System.Runtime.InteropServices.ComTypes.FORMATETC" />
        <Parameter Name="advf" Type="System.Runtime.InteropServices.ComTypes.ADVF" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="adviseSink" Type="System.Runtime.InteropServices.ComTypes.IAdviseSink" IsInterface="True" />
        <Parameter Name="connection" Type="System.Int32&amp;" IsByRef="True" ElementType="System.Int32" />
      </Method>
      <Method Name="DUnadvise" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="connection" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="EnumDAdvise" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="enumAdvise" Type="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp;" IsByRef="True" ElementType="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" />
      </Method>
      <Method Name="EnumFormatEtc" Type="System.Runtime.InteropServices.ComTypes.IEnumFORMATETC" IsInterface="True">
        <Parameter Name="direction" Type="System.Runtime.InteropServices.ComTypes.DATADIR" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="GetCanonicalFormatEtc" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="formatIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" IsByRef="True" ElementType="System.Runtime.InteropServices.ComTypes.FORMATETC" />
        <Parameter Name="formatOut" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" IsByRef="True" ElementType="System.Runtime.InteropServices.ComTypes.FORMATETC" />
      </Method>
      <Method Name="GetData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="format" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" IsByRef="True" ElementType="System.Runtime.InteropServices.ComTypes.FORMATETC" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" IsByRef="True" ElementType="System.Runtime.InteropServices.ComTypes.STGMEDIUM" />
      </Method>
      <Method Name="GetDataHere" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="format" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" IsByRef="True" ElementType="System.Runtime.InteropServices.ComTypes.FORMATETC" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" IsByRef="True" ElementType="System.Runtime.InteropServices.ComTypes.STGMEDIUM" />
      </Method>
      <Method Name="QueryGetData" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="format" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" IsByRef="True" ElementType="System.Runtime.InteropServices.ComTypes.FORMATETC" />
      </Method>
      <Method Name="SetData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="formatIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" IsByRef="True" ElementType="System.Runtime.InteropServices.ComTypes.FORMATETC" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" IsByRef="True" ElementType="System.Runtime.InteropServices.ComTypes.STGMEDIUM" />
        <Parameter Name="release" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Interface>
    <Interface Name="IEnumFORMATETC" Type="System.Runtime.InteropServices.ComTypes.IEnumFORMATETC" IsInterface="True">
      <Method Name="Clone" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="newEnum" Type="System.Runtime.InteropServices.ComTypes.IEnumFORMATETC&amp;" IsByRef="True" ElementType="System.Runtime.InteropServices.ComTypes.IEnumFORMATETC" />
      </Method>
      <Method Name="Next" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="celt" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="rgelt" Type="System.Runtime.InteropServices.ComTypes.FORMATETC[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Runtime.InteropServices.ComTypes.FORMATETC" />
        <Parameter Name="pceltFetched" Type="System.Int32[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Int32" />
      </Method>
      <Method Name="Reset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Skip" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="celt" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Interface>
    <Interface Name="IEnumSTATDATA" Type="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" IsInterface="True">
      <Method Name="Clone" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="newEnum" Type="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp;" IsByRef="True" ElementType="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" />
      </Method>
      <Method Name="Next" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="celt" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="rgelt" Type="System.Runtime.InteropServices.ComTypes.STATDATA[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Runtime.InteropServices.ComTypes.STATDATA" />
        <Parameter Name="pceltFetched" Type="System.Int32[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Int32" />
      </Method>
      <Method Name="Reset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Skip" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="celt" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Interface>
    <Struct Name="STATDATA" Type="System.Runtime.InteropServices.ComTypes.STATDATA" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
      <Field Name="advf" Type="System.Runtime.InteropServices.ComTypes.ADVF" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Field Name="advSink" Type="System.Runtime.InteropServices.ComTypes.IAdviseSink" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Field Name="connection" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Field Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
    </Struct>
    <Struct Name="STGMEDIUM" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
      <Field Name="pUnkForRelease" Type="System.Object" IsReadable="True" IsWritable="True" />
      <Field Name="tymed" Type="System.Runtime.InteropServices.ComTypes.TYMED" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Field Name="unionmember" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
    </Struct>
    <Enumeration Name="TYMED" Type="System.Runtime.InteropServices.ComTypes.TYMED" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="TYMED_ENHMF" Type="System.Runtime.InteropServices.ComTypes.TYMED" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
      <Field Name="TYMED_FILE" Type="System.Runtime.InteropServices.ComTypes.TYMED" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="TYMED_GDI" Type="System.Runtime.InteropServices.ComTypes.TYMED" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="TYMED_HGLOBAL" Type="System.Runtime.InteropServices.ComTypes.TYMED" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="TYMED_ISTORAGE" Type="System.Runtime.InteropServices.ComTypes.TYMED" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="TYMED_ISTREAM" Type="System.Runtime.InteropServices.ComTypes.TYMED" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="TYMED_MFPICT" Type="System.Runtime.InteropServices.ComTypes.TYMED" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="TYMED_NULL" Type="System.Runtime.InteropServices.ComTypes.TYMED" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.Runtime.Versioning">
    <Class Name="FrameworkName" Type="System.Runtime.Versioning.FrameworkName" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IEquatable`1&lt;System.Runtime.Versioning.FrameworkName&gt;" />
      <Property Name="FullName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Identifier" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Profile" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Version" Type="System.Version" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="identifier" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="version" Type="System.Version" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="identifier" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="version" Type="System.Version" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="profile" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="frameworkName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="other" Type="System.Runtime.Versioning.FrameworkName" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="op_Equality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="left" Type="System.Runtime.Versioning.FrameworkName" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Runtime.Versioning.FrameworkName" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="op_Inequality" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="left" Type="System.Runtime.Versioning.FrameworkName" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="right" Type="System.Runtime.Versioning.FrameworkName" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
  </Namespace>
  <Namespace Name="System.Security">
    <Class Name="SecureStringMarshal" Type="System.Security.SecureStringMarshal" BaseName="Object" BaseType="System.Object">
      <Method Name="SecureStringToCoTaskMemAnsi" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="s" Type="System.Security.SecureString" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SecureStringToCoTaskMemUnicode" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="s" Type="System.Security.SecureString" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SecureStringToGlobalAllocAnsi" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="s" Type="System.Security.SecureString" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SecureStringToGlobalAllocUnicode" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="s" Type="System.Security.SecureString" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.Security.AccessControl">
    <Class Name="SemaphoreAccessRule" Type="System.Security.AccessControl.SemaphoreAccessRule" BaseName="AccessRule" BaseType="System.Security.AccessControl.AccessRule">
      <Property Name="SemaphoreRights" Type="System.Security.AccessControl.SemaphoreRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.SemaphoreRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="identity" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.SemaphoreRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
    </Class>
    <Class Name="SemaphoreAuditRule" Type="System.Security.AccessControl.SemaphoreAuditRule" BaseName="AuditRule" BaseType="System.Security.AccessControl.AuditRule">
      <Property Name="SemaphoreRights" Type="System.Security.AccessControl.SemaphoreRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.SemaphoreRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
    </Class>
    <Enumeration Name="SemaphoreRights" Type="System.Security.AccessControl.SemaphoreRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="ChangePermissions" Type="System.Security.AccessControl.SemaphoreRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="262144" />
      <Field Name="Delete" Type="System.Security.AccessControl.SemaphoreRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="65536" />
      <Field Name="FullControl" Type="System.Security.AccessControl.SemaphoreRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2031619" />
      <Field Name="Modify" Type="System.Security.AccessControl.SemaphoreRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="ReadPermissions" Type="System.Security.AccessControl.SemaphoreRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="131072" />
      <Field Name="Synchronize" Type="System.Security.AccessControl.SemaphoreRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1048576" />
      <Field Name="TakeOwnership" Type="System.Security.AccessControl.SemaphoreRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="524288" />
    </Enumeration>
    <Class Name="SemaphoreSecurity" Type="System.Security.AccessControl.SemaphoreSecurity" BaseName="NativeObjectSecurity" BaseType="System.Security.AccessControl.NativeObjectSecurity">
      <Property Name="AccessRightType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="AccessRuleType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="AuditRuleType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Constructor>
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="AccessRuleFactory" Type="System.Security.AccessControl.AccessRule" BaseName="AuthorizationRule" BaseType="System.Security.AccessControl.AuthorizationRule">
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="accessMask" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="isInherited" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="AddAccessRule" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" BaseName="AccessRule" BaseType="System.Security.AccessControl.AccessRule" />
      </Method>
      <Method Name="AddAuditRule" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" BaseName="AuditRule" BaseType="System.Security.AccessControl.AuditRule" />
      </Method>
      <Method Name="AuditRuleFactory" Type="System.Security.AccessControl.AuditRule" BaseName="AuthorizationRule" BaseType="System.Security.AccessControl.AuthorizationRule">
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="accessMask" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="isInherited" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="RemoveAccessRule" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" BaseName="AccessRule" BaseType="System.Security.AccessControl.AccessRule" />
      </Method>
      <Method Name="RemoveAccessRuleAll" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" BaseName="AccessRule" BaseType="System.Security.AccessControl.AccessRule" />
      </Method>
      <Method Name="RemoveAccessRuleSpecific" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" BaseName="AccessRule" BaseType="System.Security.AccessControl.AccessRule" />
      </Method>
      <Method Name="RemoveAuditRule" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" BaseName="AuditRule" BaseType="System.Security.AccessControl.AuditRule" />
      </Method>
      <Method Name="RemoveAuditRuleAll" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" BaseName="AuditRule" BaseType="System.Security.AccessControl.AuditRule" />
      </Method>
      <Method Name="RemoveAuditRuleSpecific" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" BaseName="AuditRule" BaseType="System.Security.AccessControl.AuditRule" />
      </Method>
      <Method Name="ResetAccessRule" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" BaseName="AccessRule" BaseType="System.Security.AccessControl.AccessRule" />
      </Method>
      <Method Name="SetAccessRule" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" BaseName="AccessRule" BaseType="System.Security.AccessControl.AccessRule" />
      </Method>
      <Method Name="SetAuditRule" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" BaseName="AuditRule" BaseType="System.Security.AccessControl.AuditRule" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.Security.Authentication">
    <Class Name="AuthenticationException" Type="System.Security.Authentication.AuthenticationException" BaseName="SystemException" BaseType="System.SystemException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Enumeration Name="CipherAlgorithmType" Type="System.Security.Authentication.CipherAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Aes" Type="System.Security.Authentication.CipherAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="26129" />
      <Field Name="Aes128" Type="System.Security.Authentication.CipherAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="26126" />
      <Field Name="Aes192" Type="System.Security.Authentication.CipherAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="26127" />
      <Field Name="Aes256" Type="System.Security.Authentication.CipherAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="26128" />
      <Field Name="Des" Type="System.Security.Authentication.CipherAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="26113" />
      <Field Name="None" Type="System.Security.Authentication.CipherAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Null" Type="System.Security.Authentication.CipherAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="24576" />
      <Field Name="Rc2" Type="System.Security.Authentication.CipherAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="26114" />
      <Field Name="Rc4" Type="System.Security.Authentication.CipherAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="26625" />
      <Field Name="TripleDes" Type="System.Security.Authentication.CipherAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="26115" />
    </Enumeration>
    <Enumeration Name="ExchangeAlgorithmType" Type="System.Security.Authentication.ExchangeAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="DiffieHellman" Type="System.Security.Authentication.ExchangeAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="43522" />
      <Field Name="None" Type="System.Security.Authentication.ExchangeAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="RsaKeyX" Type="System.Security.Authentication.ExchangeAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="41984" />
      <Field Name="RsaSign" Type="System.Security.Authentication.ExchangeAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9216" />
    </Enumeration>
    <Enumeration Name="HashAlgorithmType" Type="System.Security.Authentication.HashAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Md5" Type="System.Security.Authentication.HashAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32771" />
      <Field Name="None" Type="System.Security.Authentication.HashAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Sha1" Type="System.Security.Authentication.HashAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32772" />
      <Field Name="Sha256" Type="System.Security.Authentication.HashAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32780" />
      <Field Name="Sha384" Type="System.Security.Authentication.HashAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32781" />
      <Field Name="Sha512" Type="System.Security.Authentication.HashAlgorithmType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32782" />
    </Enumeration>
    <Class Name="InvalidCredentialException" Type="System.Security.Authentication.InvalidCredentialException" BaseName="AuthenticationException" BaseType="System.Security.Authentication.AuthenticationException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Enumeration Name="SslProtocols" Type="System.Security.Authentication.SslProtocols" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Default" Type="System.Security.Authentication.SslProtocols" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="240" />
      <Field Name="None" Type="System.Security.Authentication.SslProtocols" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Ssl2" Type="System.Security.Authentication.SslProtocols" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="12" />
      <Field Name="Ssl3" Type="System.Security.Authentication.SslProtocols" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="48" />
      <Field Name="Tls" Type="System.Security.Authentication.SslProtocols" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="192" />
      <Field Name="Tls11" Type="System.Security.Authentication.SslProtocols" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="768" />
      <Field Name="Tls12" Type="System.Security.Authentication.SslProtocols" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3072" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.Security.Authentication.ExtendedProtection">
    <Class Name="ChannelBinding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Size" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Enumeration Name="ChannelBindingKind" Type="System.Security.Authentication.ExtendedProtection.ChannelBindingKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Endpoint" Type="System.Security.Authentication.ExtendedProtection.ChannelBindingKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="26" />
      <Field Name="Unique" Type="System.Security.Authentication.ExtendedProtection.ChannelBindingKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="25" />
      <Field Name="Unknown" Type="System.Security.Authentication.ExtendedProtection.ChannelBindingKind" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="ExtendedProtectionPolicy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Property Name="CustomChannelBinding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" IsReadable="True" />
      <Property Name="CustomServiceNames" Type="System.Security.Authentication.ExtendedProtection.ServiceNameCollection" BaseName="ReadOnlyCollectionBase" BaseType="System.Collections.ReadOnlyCollectionBase" IsReadable="True" />
      <Property Name="OSSupportsExtendedProtection" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="PolicyEnforcement" Type="System.Security.Authentication.ExtendedProtection.PolicyEnforcement" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="ProtectionScenario" Type="System.Security.Authentication.ExtendedProtection.ProtectionScenario" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="policyEnforcement" Type="System.Security.Authentication.ExtendedProtection.PolicyEnforcement" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="protectionScenario" Type="System.Security.Authentication.ExtendedProtection.ProtectionScenario" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="customServiceNames" Type="System.Security.Authentication.ExtendedProtection.ServiceNameCollection" BaseName="ReadOnlyCollectionBase" BaseType="System.Collections.ReadOnlyCollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="policyEnforcement" Type="System.Security.Authentication.ExtendedProtection.PolicyEnforcement" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="protectionScenario" Type="System.Security.Authentication.ExtendedProtection.ProtectionScenario" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="customServiceNames" Type="System.Collections.ICollection" IsInterface="True" />
      </Constructor>
      <Constructor>
        <Parameter Name="policyEnforcement" Type="System.Security.Authentication.ExtendedProtection.PolicyEnforcement" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="customChannelBinding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
      </Constructor>
      <Constructor>
        <Parameter Name="policyEnforcement" Type="System.Security.Authentication.ExtendedProtection.PolicyEnforcement" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="ExtendedProtectionPolicyTypeConverter" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter" BaseName="TypeConverter" BaseType="System.ComponentModel.TypeConverter">
      <Method Name="CanConvertTo" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
      <Method Name="ConvertTo" Type="System.Object">
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" IsInterface="True" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Method>
    </Class>
    <Enumeration Name="PolicyEnforcement" Type="System.Security.Authentication.ExtendedProtection.PolicyEnforcement" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Always" Type="System.Security.Authentication.ExtendedProtection.PolicyEnforcement" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Never" Type="System.Security.Authentication.ExtendedProtection.PolicyEnforcement" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="WhenSupported" Type="System.Security.Authentication.ExtendedProtection.PolicyEnforcement" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Enumeration Name="ProtectionScenario" Type="System.Security.Authentication.ExtendedProtection.ProtectionScenario" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="TransportSelected" Type="System.Security.Authentication.ExtendedProtection.ProtectionScenario" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="TrustedProxy" Type="System.Security.Authentication.ExtendedProtection.ProtectionScenario" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="ServiceNameCollection" Type="System.Security.Authentication.ExtendedProtection.ServiceNameCollection" BaseName="ReadOnlyCollectionBase" BaseType="System.Collections.ReadOnlyCollectionBase">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Constructor>
        <Parameter Name="items" Type="System.Collections.ICollection" IsInterface="True" />
      </Constructor>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="searchServiceName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Merge" Type="System.Security.Authentication.ExtendedProtection.ServiceNameCollection" BaseName="ReadOnlyCollectionBase" BaseType="System.Collections.ReadOnlyCollectionBase">
        <Parameter Name="serviceName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Merge" Type="System.Security.Authentication.ExtendedProtection.ServiceNameCollection" BaseName="ReadOnlyCollectionBase" BaseType="System.Collections.ReadOnlyCollectionBase">
        <Parameter Name="serviceNames" Type="System.Collections.IEnumerable" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="TokenBinding" Type="System.Security.Authentication.ExtendedProtection.TokenBinding" BaseName="Object" BaseType="System.Object">
      <Property Name="BindingType" Type="System.Security.Authentication.ExtendedProtection.TokenBindingType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Method Name="GetRawTokenBindingId" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
    </Class>
    <Enumeration Name="TokenBindingType" Type="System.Security.Authentication.ExtendedProtection.TokenBindingType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Provided" Type="System.Security.Authentication.ExtendedProtection.TokenBindingType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Referred" Type="System.Security.Authentication.ExtendedProtection.TokenBindingType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.Security.Authentication.ExtendedProtection.Configuration">
    <Class Name="ExtendedProtectionPolicyElement" Type="System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="CustomServiceNames" Type="System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" BaseName="ConfigurationElementCollection" BaseType="System.Configuration.ConfigurationElementCollection" IsReadable="True" />
      <Property Name="PolicyEnforcement" Type="System.Security.Authentication.ExtendedProtection.PolicyEnforcement" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="ProtectionScenario" Type="System.Security.Authentication.ExtendedProtection.ProtectionScenario" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Method Name="BuildPolicy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="ServiceNameElement" Type="System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="ServiceNameElementCollection" Type="System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" BaseName="ConfigurationElementCollection" BaseType="System.Configuration.ConfigurationElementCollection">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="get_Item" Type="System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="value" Type="System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="element" Type="System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Clear" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="element" Type="System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="element" Type="System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" BaseName="ConfigurationElement" BaseType="System.Configuration.ConfigurationElement" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="RemoveAt" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.Security.Claims">
    <Class Name="DynamicRoleClaimProvider" Type="System.Security.Claims.DynamicRoleClaimProvider" BaseName="Object" BaseType="System.Object">
      <Method Name="AddDynamicRoleClaims" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable`1&lt;System.Security.Claims.Claim&gt;" IsInterface="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.Security.Cryptography">
    <Class Name="AsnEncodedData" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object">
      <Property Name="Oid" Type="System.Security.Cryptography.Oid" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="RawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="rawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Constructor>
      <Constructor>
        <Parameter Name="oid" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="rawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Constructor>
      <Constructor>
        <Parameter Name="oid" Type="System.Security.Cryptography.Oid" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="rawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Constructor>
      <Constructor>
        <Parameter Name="asnEncodedData" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="CopyFrom" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asnEncodedData" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Format" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="multiLine" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="AsnEncodedDataCollection" Type="System.Security.Cryptography.AsnEncodedDataCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSynchronized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SyncRoot" Type="System.Object" IsReadable="True" />
      <Method Name="get_Item" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Constructor>
        <Parameter Name="asnEncodedData" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asnEncodedData" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Security.Cryptography.AsnEncodedData[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Security.Cryptography.AsnEncodedData" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Security.Cryptography.AsnEncodedDataEnumerator" BaseName="Object" BaseType="System.Object" />
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asnEncodedData" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="AsnEncodedDataEnumerator" Type="System.Security.Cryptography.AsnEncodedDataEnumerator" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.IEnumerator" />
      <Property Name="Current" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="MoveNext" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Reset" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="Oid" Type="System.Security.Cryptography.Oid" BaseName="Object" BaseType="System.Object">
      <Property Name="FriendlyName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Value" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="oid" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="friendlyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="oid" Type="System.Security.Cryptography.Oid" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="FromFriendlyName" Type="System.Security.Cryptography.Oid" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="friendlyName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="group" Type="System.Security.Cryptography.OidGroup" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="FromOidValue" Type="System.Security.Cryptography.Oid" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="oidValue" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="group" Type="System.Security.Cryptography.OidGroup" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
    </Class>
    <Class Name="OidCollection" Type="System.Security.Cryptography.OidCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSynchronized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SyncRoot" Type="System.Object" IsReadable="True" />
      <Method Name="get_Item" Type="System.Security.Cryptography.Oid" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="get_Item" Type="System.Security.Cryptography.Oid" BaseName="Object" BaseType="System.Object">
        <Parameter Name="oid" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="oid" Type="System.Security.Cryptography.Oid" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Security.Cryptography.Oid[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Security.Cryptography.Oid" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Security.Cryptography.OidEnumerator" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="OidEnumerator" Type="System.Security.Cryptography.OidEnumerator" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.IEnumerator" />
      <Property Name="Current" Type="System.Security.Cryptography.Oid" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="MoveNext" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Reset" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Enumeration Name="OidGroup" Type="System.Security.Cryptography.OidGroup" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="All" Type="System.Security.Cryptography.OidGroup" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Attribute" Type="System.Security.Cryptography.OidGroup" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="EncryptionAlgorithm" Type="System.Security.Cryptography.OidGroup" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="EnhancedKeyUsage" Type="System.Security.Cryptography.OidGroup" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="ExtensionOrAttribute" Type="System.Security.Cryptography.OidGroup" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="HashAlgorithm" Type="System.Security.Cryptography.OidGroup" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="KeyDerivationFunction" Type="System.Security.Cryptography.OidGroup" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10" />
      <Field Name="Policy" Type="System.Security.Cryptography.OidGroup" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="PublicKeyAlgorithm" Type="System.Security.Cryptography.OidGroup" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="SignatureAlgorithm" Type="System.Security.Cryptography.OidGroup" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Template" Type="System.Security.Cryptography.OidGroup" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.Security.Cryptography.X509Certificates">
    <Enumeration Name="OpenFlags" Type="System.Security.Cryptography.X509Certificates.OpenFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="IncludeArchived" Type="System.Security.Cryptography.X509Certificates.OpenFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="MaxAllowed" Type="System.Security.Cryptography.X509Certificates.OpenFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="OpenExistingOnly" Type="System.Security.Cryptography.X509Certificates.OpenFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="ReadOnly" Type="System.Security.Cryptography.X509Certificates.OpenFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="ReadWrite" Type="System.Security.Cryptography.X509Certificates.OpenFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="PublicKey" Type="System.Security.Cryptography.X509Certificates.PublicKey" BaseName="Object" BaseType="System.Object">
      <Property Name="EncodedKeyValue" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="EncodedParameters" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Key" Type="System.Security.Cryptography.AsymmetricAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Oid" Type="System.Security.Cryptography.Oid" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="oid" Type="System.Security.Cryptography.Oid" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="parameters" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="keyValue" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Enumeration Name="StoreLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="CurrentUser" Type="System.Security.Cryptography.X509Certificates.StoreLocation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="LocalMachine" Type="System.Security.Cryptography.X509Certificates.StoreLocation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Enumeration Name="StoreName" Type="System.Security.Cryptography.X509Certificates.StoreName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AddressBook" Type="System.Security.Cryptography.X509Certificates.StoreName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="AuthRoot" Type="System.Security.Cryptography.X509Certificates.StoreName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="CertificateAuthority" Type="System.Security.Cryptography.X509Certificates.StoreName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Disallowed" Type="System.Security.Cryptography.X509Certificates.StoreName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="My" Type="System.Security.Cryptography.X509Certificates.StoreName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="Root" Type="System.Security.Cryptography.X509Certificates.StoreName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="TrustedPeople" Type="System.Security.Cryptography.X509Certificates.StoreName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="TrustedPublisher" Type="System.Security.Cryptography.X509Certificates.StoreName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
    </Enumeration>
    <Class Name="X500DistinguishedName" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedName" BaseName="AsnEncodedData" BaseType="System.Security.Cryptography.AsnEncodedData">
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="encodedDistinguishedName" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Constructor>
      <Constructor>
        <Parameter Name="encodedDistinguishedName" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="distinguishedName" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedName" BaseName="AsnEncodedData" BaseType="System.Security.Cryptography.AsnEncodedData" />
      </Constructor>
      <Constructor>
        <Parameter Name="distinguishedName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="distinguishedName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="flag" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Decode" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="flag" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Format" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="multiLine" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Enumeration Name="X500DistinguishedNameFlags" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="DoNotUsePlusSign" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="DoNotUseQuotes" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
      <Field Name="ForceUTF8Encoding" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16384" />
      <Field Name="None" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Reversed" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="UseCommas" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="128" />
      <Field Name="UseNewLines" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="256" />
      <Field Name="UseSemicolons" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="UseT61Encoding" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8192" />
      <Field Name="UseUTF8Encoding" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4096" />
    </Enumeration>
    <Class Name="X509BasicConstraintsExtension" Type="System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" BaseName="X509Extension" BaseType="System.Security.Cryptography.X509Certificates.X509Extension">
      <Property Name="CertificateAuthority" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="HasPathLengthConstraint" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PathLengthConstraint" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="certificateAuthority" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="hasPathLengthConstraint" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="pathLengthConstraint" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="critical" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="encodedBasicConstraints" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="critical" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="CopyFrom" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asnEncodedData" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="X509Certificate2" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate">
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Runtime.Serialization.IDeserializationCallback" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Property Name="Archived" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Extensions" Type="System.Security.Cryptography.X509Certificates.X509ExtensionCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="FriendlyName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="HasPrivateKey" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IssuerName" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedName" BaseName="AsnEncodedData" BaseType="System.Security.Cryptography.AsnEncodedData" IsReadable="True" />
      <Property Name="NotAfter" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="NotBefore" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PrivateKey" Type="System.Security.Cryptography.AsymmetricAlgorithm" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="PublicKey" Type="System.Security.Cryptography.X509Certificates.PublicKey" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="RawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" />
      <Property Name="SerialNumber" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SignatureAlgorithm" Type="System.Security.Cryptography.Oid" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="SubjectName" Type="System.Security.Cryptography.X509Certificates.X500DistinguishedName" BaseName="AsnEncodedData" BaseType="System.Security.Cryptography.AsnEncodedData" IsReadable="True" />
      <Property Name="Thumbprint" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Version" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="rawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Constructor>
      <Constructor>
        <Parameter Name="rawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="password" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="rawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="password" Type="System.Security.SecureString" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="rawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="password" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="rawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="password" Type="System.Security.SecureString" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="password" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="password" Type="System.Security.SecureString" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="password" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="password" Type="System.Security.SecureString" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="handle" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="GetCertContentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsStatic="True">
        <Parameter Name="rawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="GetCertContentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsStatic="True">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetNameInfo" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="nameType" Type="System.Security.Cryptography.X509Certificates.X509NameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="forIssuer" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Import" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="Import" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="password" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Import" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="password" Type="System.Security.SecureString" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Import" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Import" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="password" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Import" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="password" Type="System.Security.SecureString" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Reset" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="verbose" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Verify" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="X509Certificate2Collection" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" BaseName="X509CertificateCollection" BaseType="System.Security.Cryptography.X509Certificates.X509CertificateCollection">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Method>
      <Constructor>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Constructor>
      <Constructor>
        <Parameter Name="certificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" BaseName="X509CertificateCollection" BaseType="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
      </Constructor>
      <Constructor>
        <Parameter Name="certificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="certificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="certificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" BaseName="X509CertificateCollection" BaseType="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Method>
      <Method Name="Export" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="contentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Export" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte">
        <Parameter Name="contentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="password" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Find" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" BaseName="X509CertificateCollection" BaseType="System.Security.Cryptography.X509Certificates.X509CertificateCollection">
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="findValue" Type="System.Object" />
        <Parameter Name="validOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator" BaseName="Object" BaseType="System.Object" />
      <Method Name="Import" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="Import" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="rawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="password" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Import" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Import" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="fileName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="password" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Method>
      <Method Name="RemoveRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="certificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Method>
      <Method Name="RemoveRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="certificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" BaseName="X509CertificateCollection" BaseType="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
      </Method>
    </Class>
    <Class Name="X509Certificate2Enumerator" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.IEnumerator" />
      <Property Name="Current" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" IsReadable="True" />
      <Method Name="MoveNext" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Reset" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="X509CertificateCollection" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase">
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Method Name="get_Item" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="set_Item" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Constructor>
        <Parameter Name="value" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Constructor>
      <Constructor>
        <Parameter Name="value" Type="System.Security.Cryptography.X509Certificates.X509Certificate[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Constructor>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Security.Cryptography.X509Certificates.X509Certificate[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Method>
      <Method Name="Contains" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Security.Cryptography.X509Certificates.X509Certificate[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection+X509CertificateEnumerator" BaseName="Object" BaseType="System.Object" IsNested="True" />
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IndexOf" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Insert" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="value" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="value" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="X509CertificateCollection.X509CertificateEnumerator" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection+X509CertificateEnumerator" BaseName="Object" BaseType="System.Object" IsNested="True">
      <ImplementedInterface Type="System.Collections.IEnumerator" />
      <Property Name="Current" Type="System.Security.Cryptography.X509Certificates.X509Certificate" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="mappings" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" BaseName="CollectionBase" BaseType="System.Collections.CollectionBase" />
      </Constructor>
      <Method Name="MoveNext" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Reset" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="X509Chain" Type="System.Security.Cryptography.X509Certificates.X509Chain" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="ChainContext" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ChainElements" Type="System.Security.Cryptography.X509Certificates.X509ChainElementCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ChainPolicy" Type="System.Security.Cryptography.X509Certificates.X509ChainPolicy" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="ChainStatus" Type="System.Security.Cryptography.X509Certificates.X509ChainStatus[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Security.Cryptography.X509Certificates.X509ChainStatus" IsReadable="True" />
      <Property Name="SafeHandle" Type="Microsoft.Win32.SafeHandles.SafeX509ChainHandle" BaseName="SafeHandleZeroOrMinusOneIsInvalid" BaseType="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" IsReadable="True" />
      <Constructor>
        <Parameter Name="useMachineContext" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="chainContext" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Build" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Method>
      <Method Name="Create" Type="System.Security.Cryptography.X509Certificates.X509Chain" BaseName="Object" BaseType="System.Object" IsStatic="True" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Reset" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="X509ChainElement" Type="System.Security.Cryptography.X509Certificates.X509ChainElement" BaseName="Object" BaseType="System.Object">
      <Property Name="Certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" IsReadable="True" />
      <Property Name="ChainElementStatus" Type="System.Security.Cryptography.X509Certificates.X509ChainStatus[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Security.Cryptography.X509Certificates.X509ChainStatus" IsReadable="True" />
      <Property Name="Information" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Class Name="X509ChainElementCollection" Type="System.Security.Cryptography.X509Certificates.X509ChainElementCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSynchronized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SyncRoot" Type="System.Object" IsReadable="True" />
      <Method Name="get_Item" Type="System.Security.Cryptography.X509Certificates.X509ChainElement" BaseName="Object" BaseType="System.Object">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Security.Cryptography.X509Certificates.X509ChainElement[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Security.Cryptography.X509Certificates.X509ChainElement" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="X509ChainElementEnumerator" Type="System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.IEnumerator" />
      <Property Name="Current" Type="System.Security.Cryptography.X509Certificates.X509ChainElement" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="MoveNext" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Reset" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="X509ChainPolicy" Type="System.Security.Cryptography.X509Certificates.X509ChainPolicy" BaseName="Object" BaseType="System.Object">
      <Property Name="ApplicationPolicy" Type="System.Security.Cryptography.OidCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="CertificatePolicy" Type="System.Security.Cryptography.OidCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="ExtraStore" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" BaseName="X509CertificateCollection" BaseType="System.Security.Cryptography.X509Certificates.X509CertificateCollection" IsReadable="True" />
      <Property Name="RevocationFlag" Type="System.Security.Cryptography.X509Certificates.X509RevocationFlag" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="RevocationMode" Type="System.Security.Cryptography.X509Certificates.X509RevocationMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="UrlRetrievalTimeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="VerificationFlags" Type="System.Security.Cryptography.X509Certificates.X509VerificationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="VerificationTime" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Method Name="Reset" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Struct Name="X509ChainStatus" Type="System.Security.Cryptography.X509Certificates.X509ChainStatus" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
      <Property Name="Status" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="StatusInformation" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
    </Struct>
    <Enumeration Name="X509ChainStatusFlags" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="CtlNotSignatureValid" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="262144" />
      <Field Name="CtlNotTimeValid" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="131072" />
      <Field Name="CtlNotValidForUsage" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="524288" />
      <Field Name="Cyclic" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="128" />
      <Field Name="ExplicitDistrust" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="67108864" />
      <Field Name="HasExcludedNameConstraint" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32768" />
      <Field Name="HasNotDefinedNameConstraint" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8192" />
      <Field Name="HasNotPermittedNameConstraint" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16384" />
      <Field Name="HasNotSupportedCriticalExtension" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="134217728" />
      <Field Name="HasNotSupportedNameConstraint" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4096" />
      <Field Name="HasWeakSignature" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1048576" />
      <Field Name="InvalidBasicConstraints" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1024" />
      <Field Name="InvalidExtension" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="256" />
      <Field Name="InvalidNameConstraints" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2048" />
      <Field Name="InvalidPolicyConstraints" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="512" />
      <Field Name="NoError" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="NoIssuanceChainPolicy" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="33554432" />
      <Field Name="NotSignatureValid" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="NotTimeNested" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="NotTimeValid" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="NotValidForUsage" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="OfflineRevocation" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16777216" />
      <Field Name="PartialChain" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="65536" />
      <Field Name="RevocationStatusUnknown" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
      <Field Name="Revoked" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="UntrustedRoot" Type="System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
    </Enumeration>
    <Class Name="X509EnhancedKeyUsageExtension" Type="System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension" BaseName="X509Extension" BaseType="System.Security.Cryptography.X509Certificates.X509Extension">
      <Property Name="EnhancedKeyUsages" Type="System.Security.Cryptography.OidCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="enhancedKeyUsages" Type="System.Security.Cryptography.OidCollection" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="critical" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="encodedEnhancedKeyUsages" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="critical" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="CopyFrom" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asnEncodedData" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="X509Extension" Type="System.Security.Cryptography.X509Certificates.X509Extension" BaseName="AsnEncodedData" BaseType="System.Security.Cryptography.AsnEncodedData">
      <Property Name="Critical" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="oid" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="rawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="critical" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="encodedExtension" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="critical" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="oid" Type="System.Security.Cryptography.Oid" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="rawData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="critical" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="CopyFrom" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asnEncodedData" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="X509ExtensionCollection" Type="System.Security.Cryptography.X509Certificates.X509ExtensionCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSynchronized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SyncRoot" Type="System.Object" IsReadable="True" />
      <Method Name="get_Item" Type="System.Security.Cryptography.X509Certificates.X509Extension" BaseName="AsnEncodedData" BaseType="System.Security.Cryptography.AsnEncodedData">
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="get_Item" Type="System.Security.Cryptography.X509Certificates.X509Extension" BaseName="AsnEncodedData" BaseType="System.Security.Cryptography.AsnEncodedData">
        <Parameter Name="oid" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Add" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="extension" Type="System.Security.Cryptography.X509Certificates.X509Extension" BaseName="AsnEncodedData" BaseType="System.Security.Cryptography.AsnEncodedData" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Security.Cryptography.X509Certificates.X509Extension[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Security.Cryptography.X509Certificates.X509Extension" />
        <Parameter Name="index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="X509ExtensionEnumerator" Type="System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.IEnumerator" />
      <Property Name="Current" Type="System.Security.Cryptography.X509Certificates.X509Extension" BaseName="AsnEncodedData" BaseType="System.Security.Cryptography.AsnEncodedData" IsReadable="True" />
      <Method Name="MoveNext" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Reset" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Enumeration Name="X509FindType" Type="System.Security.Cryptography.X509Certificates.X509FindType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="FindByApplicationPolicy" Type="System.Security.Cryptography.X509Certificates.X509FindType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="10" />
      <Field Name="FindByCertificatePolicy" Type="System.Security.Cryptography.X509Certificates.X509FindType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="11" />
      <Field Name="FindByExtension" Type="System.Security.Cryptography.X509Certificates.X509FindType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="12" />
      <Field Name="FindByIssuerDistinguishedName" Type="System.Security.Cryptography.X509Certificates.X509FindType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="FindByIssuerName" Type="System.Security.Cryptography.X509Certificates.X509FindType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="FindByKeyUsage" Type="System.Security.Cryptography.X509Certificates.X509FindType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="13" />
      <Field Name="FindBySerialNumber" Type="System.Security.Cryptography.X509Certificates.X509FindType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="FindBySubjectDistinguishedName" Type="System.Security.Cryptography.X509Certificates.X509FindType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="FindBySubjectKeyIdentifier" Type="System.Security.Cryptography.X509Certificates.X509FindType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="14" />
      <Field Name="FindBySubjectName" Type="System.Security.Cryptography.X509Certificates.X509FindType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="FindByTemplateName" Type="System.Security.Cryptography.X509Certificates.X509FindType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="9" />
      <Field Name="FindByThumbprint" Type="System.Security.Cryptography.X509Certificates.X509FindType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="FindByTimeExpired" Type="System.Security.Cryptography.X509Certificates.X509FindType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="FindByTimeNotYetValid" Type="System.Security.Cryptography.X509Certificates.X509FindType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="FindByTimeValid" Type="System.Security.Cryptography.X509Certificates.X509FindType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
    </Enumeration>
    <Enumeration Name="X509IncludeOption" Type="System.Security.Cryptography.X509Certificates.X509IncludeOption" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="EndCertOnly" Type="System.Security.Cryptography.X509Certificates.X509IncludeOption" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="ExcludeRoot" Type="System.Security.Cryptography.X509Certificates.X509IncludeOption" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="None" Type="System.Security.Cryptography.X509Certificates.X509IncludeOption" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="WholeChain" Type="System.Security.Cryptography.X509Certificates.X509IncludeOption" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
    </Enumeration>
    <Class Name="X509KeyUsageExtension" Type="System.Security.Cryptography.X509Certificates.X509KeyUsageExtension" BaseName="X509Extension" BaseType="System.Security.Cryptography.X509Certificates.X509Extension">
      <Property Name="KeyUsages" Type="System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Constructor>
        <Parameter Name="keyUsages" Type="System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="critical" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="encodedKeyUsage" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="critical" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="CopyFrom" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asnEncodedData" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Enumeration Name="X509KeyUsageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="CrlSign" Type="System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="DataEncipherment" Type="System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="DecipherOnly" Type="System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32768" />
      <Field Name="DigitalSignature" Type="System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="128" />
      <Field Name="EncipherOnly" Type="System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="KeyAgreement" Type="System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="KeyCertSign" Type="System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="KeyEncipherment" Type="System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="None" Type="System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="NonRepudiation" Type="System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
    </Enumeration>
    <Enumeration Name="X509NameType" Type="System.Security.Cryptography.X509Certificates.X509NameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="DnsFromAlternativeName" Type="System.Security.Cryptography.X509Certificates.X509NameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="DnsName" Type="System.Security.Cryptography.X509Certificates.X509NameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="EmailName" Type="System.Security.Cryptography.X509Certificates.X509NameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="SimpleName" Type="System.Security.Cryptography.X509Certificates.X509NameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="UpnName" Type="System.Security.Cryptography.X509Certificates.X509NameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="UrlName" Type="System.Security.Cryptography.X509Certificates.X509NameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
    </Enumeration>
    <Enumeration Name="X509RevocationFlag" Type="System.Security.Cryptography.X509Certificates.X509RevocationFlag" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="EndCertificateOnly" Type="System.Security.Cryptography.X509Certificates.X509RevocationFlag" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="EntireChain" Type="System.Security.Cryptography.X509Certificates.X509RevocationFlag" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="ExcludeRoot" Type="System.Security.Cryptography.X509Certificates.X509RevocationFlag" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Enumeration Name="X509RevocationMode" Type="System.Security.Cryptography.X509Certificates.X509RevocationMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="NoCheck" Type="System.Security.Cryptography.X509Certificates.X509RevocationMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Offline" Type="System.Security.Cryptography.X509Certificates.X509RevocationMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Online" Type="System.Security.Cryptography.X509Certificates.X509RevocationMode" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="X509Store" Type="System.Security.Cryptography.X509Certificates.X509Store" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="Certificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" BaseName="X509CertificateCollection" BaseType="System.Security.Cryptography.X509Certificates.X509CertificateCollection" IsReadable="True" />
      <Property Name="Location" Type="System.Security.Cryptography.X509Certificates.StoreLocation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="StoreHandle" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="storeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="storeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="storeHandle" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="Add" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Method>
      <Method Name="AddRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="certificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" BaseName="X509CertificateCollection" BaseType="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
      </Method>
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Open" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="flags" Type="System.Security.Cryptography.X509Certificates.OpenFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Remove" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Method>
      <Method Name="RemoveRange" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="certificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" BaseName="X509CertificateCollection" BaseType="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
      </Method>
    </Class>
    <Class Name="X509SubjectKeyIdentifierExtension" Type="System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension" BaseName="X509Extension" BaseType="System.Security.Cryptography.X509Certificates.X509Extension">
      <Property Name="SubjectKeyIdentifier" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="subjectKeyIdentifier" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="critical" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="subjectKeyIdentifier" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="critical" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="encodedSubjectKeyIdentifier" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="critical" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="key" Type="System.Security.Cryptography.X509Certificates.PublicKey" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="critical" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="key" Type="System.Security.Cryptography.X509Certificates.PublicKey" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="algorithm" Type="System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="critical" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="CopyFrom" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="asnEncodedData" Type="System.Security.Cryptography.AsnEncodedData" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Enumeration Name="X509SubjectKeyIdentifierHashAlgorithm" Type="System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="CapiSha1" Type="System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="Sha1" Type="System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="ShortSha1" Type="System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Enumeration Name="X509VerificationFlags" Type="System.Security.Cryptography.X509Certificates.X509VerificationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AllFlags" Type="System.Security.Cryptography.X509Certificates.X509VerificationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4095" />
      <Field Name="AllowUnknownCertificateAuthority" Type="System.Security.Cryptography.X509Certificates.X509VerificationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="IgnoreCertificateAuthorityRevocationUnknown" Type="System.Security.Cryptography.X509Certificates.X509VerificationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1024" />
      <Field Name="IgnoreCtlNotTimeValid" Type="System.Security.Cryptography.X509Certificates.X509VerificationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="IgnoreCtlSignerRevocationUnknown" Type="System.Security.Cryptography.X509Certificates.X509VerificationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="512" />
      <Field Name="IgnoreEndRevocationUnknown" Type="System.Security.Cryptography.X509Certificates.X509VerificationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="256" />
      <Field Name="IgnoreInvalidBasicConstraints" Type="System.Security.Cryptography.X509Certificates.X509VerificationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="IgnoreInvalidName" Type="System.Security.Cryptography.X509Certificates.X509VerificationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
      <Field Name="IgnoreInvalidPolicy" Type="System.Security.Cryptography.X509Certificates.X509VerificationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="128" />
      <Field Name="IgnoreNotTimeNested" Type="System.Security.Cryptography.X509Certificates.X509VerificationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="IgnoreNotTimeValid" Type="System.Security.Cryptography.X509Certificates.X509VerificationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="IgnoreRootRevocationUnknown" Type="System.Security.Cryptography.X509Certificates.X509VerificationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2048" />
      <Field Name="IgnoreWrongUsage" Type="System.Security.Cryptography.X509Certificates.X509VerificationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="NoFlag" Type="System.Security.Cryptography.X509Certificates.X509VerificationFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.Security.Permissions">
    <Class Name="ResourcePermissionBase" Type="System.Security.Permissions.ResourcePermissionBase" BaseName="CodeAccessPermission" BaseType="System.Security.CodeAccessPermission">
      <ImplementedInterface Type="System.Security.IPermission" />
      <ImplementedInterface Type="System.Security.ISecurityEncodable" />
      <ImplementedInterface Type="System.Security.IStackWalk" />
      <ImplementedInterface Type="System.Security.Permissions.IUnrestrictedPermission" />
      <Field Name="Any" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="*" />
      <Field Name="Local" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="." />
      <Method Name="Copy" Type="System.Security.IPermission" IsInterface="True" />
      <Method Name="FromXml" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Intersect" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsSubsetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsUnrestricted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToXml" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      <Method Name="Union" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="ResourcePermissionBaseEntry" Type="System.Security.Permissions.ResourcePermissionBaseEntry" BaseName="Object" BaseType="System.Object">
      <Property Name="PermissionAccess" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PermissionAccessPath" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" IsReadable="True" />
      <Constructor>
        <Parameter Name="permissionAccess" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="permissionAccessPath" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
      </Constructor>
    </Class>
    <Class Name="StorePermission" Type="System.Security.Permissions.StorePermission" BaseName="CodeAccessPermission" BaseType="System.Security.CodeAccessPermission">
      <ImplementedInterface Type="System.Security.IPermission" />
      <ImplementedInterface Type="System.Security.ISecurityEncodable" />
      <ImplementedInterface Type="System.Security.IStackWalk" />
      <ImplementedInterface Type="System.Security.Permissions.IUnrestrictedPermission" />
      <Property Name="Flags" Type="System.Security.Permissions.StorePermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="flag" Type="System.Security.Permissions.StorePermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Copy" Type="System.Security.IPermission" IsInterface="True" />
      <Method Name="FromXml" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Intersect" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsSubsetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsUnrestricted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToXml" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      <Method Name="Union" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="StorePermissionAttribute" Type="System.Security.Permissions.StorePermissionAttribute" BaseName="CodeAccessSecurityAttribute" BaseType="System.Security.Permissions.CodeAccessSecurityAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="AddToStore" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="CreateStore" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="DeleteStore" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="EnumerateCertificates" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="EnumerateStores" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Flags" Type="System.Security.Permissions.StorePermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="OpenStore" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="RemoveFromStore" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="CreatePermission" Type="System.Security.IPermission" IsInterface="True" />
    </Class>
    <Enumeration Name="StorePermissionFlags" Type="System.Security.Permissions.StorePermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AddToStore" Type="System.Security.Permissions.StorePermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="AllFlags" Type="System.Security.Permissions.StorePermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="247" />
      <Field Name="CreateStore" Type="System.Security.Permissions.StorePermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="DeleteStore" Type="System.Security.Permissions.StorePermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="EnumerateCertificates" Type="System.Security.Permissions.StorePermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="128" />
      <Field Name="EnumerateStores" Type="System.Security.Permissions.StorePermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="NoFlags" Type="System.Security.Permissions.StorePermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="OpenStore" Type="System.Security.Permissions.StorePermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
      <Field Name="RemoveFromStore" Type="System.Security.Permissions.StorePermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
    </Enumeration>
    <Class Name="TypeDescriptorPermission" Type="System.Security.Permissions.TypeDescriptorPermission" BaseName="CodeAccessPermission" BaseType="System.Security.CodeAccessPermission">
      <ImplementedInterface Type="System.Security.IPermission" />
      <ImplementedInterface Type="System.Security.ISecurityEncodable" />
      <ImplementedInterface Type="System.Security.IStackWalk" />
      <ImplementedInterface Type="System.Security.Permissions.IUnrestrictedPermission" />
      <Property Name="Flags" Type="System.Security.Permissions.TypeDescriptorPermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="flag" Type="System.Security.Permissions.TypeDescriptorPermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Copy" Type="System.Security.IPermission" IsInterface="True" />
      <Method Name="FromXml" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Intersect" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsSubsetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsUnrestricted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToXml" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      <Method Name="Union" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="TypeDescriptorPermissionAttribute" Type="System.Security.Permissions.TypeDescriptorPermissionAttribute" BaseName="CodeAccessSecurityAttribute" BaseType="System.Security.Permissions.CodeAccessSecurityAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Flags" Type="System.Security.Permissions.TypeDescriptorPermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="RestrictedRegistrationAccess" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="CreatePermission" Type="System.Security.IPermission" IsInterface="True" />
    </Class>
    <Enumeration Name="TypeDescriptorPermissionFlags" Type="System.Security.Permissions.TypeDescriptorPermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="NoFlags" Type="System.Security.Permissions.TypeDescriptorPermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="RestrictedRegistrationAccess" Type="System.Security.Permissions.TypeDescriptorPermissionFlags" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.Text.RegularExpressions">
    <Class Name="Capture" Type="System.Text.RegularExpressions.Capture" BaseName="Object" BaseType="System.Object">
      <Property Name="Index" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Length" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Value" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="CaptureCollection" Type="System.Text.RegularExpressions.CaptureCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSynchronized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SyncRoot" Type="System.Object" IsReadable="True" />
      <Method Name="get_Item" Type="System.Text.RegularExpressions.Capture" BaseName="Object" BaseType="System.Object">
        <Parameter Name="i" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Array" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arrayIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
    </Class>
    <Class Name="Group" Type="System.Text.RegularExpressions.Group" BaseName="Capture" BaseType="System.Text.RegularExpressions.Capture">
      <Property Name="Captures" Type="System.Text.RegularExpressions.CaptureCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Success" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="Synchronized" Type="System.Text.RegularExpressions.Group" BaseName="Capture" BaseType="System.Text.RegularExpressions.Capture" IsStatic="True">
        <Parameter Name="inner" Type="System.Text.RegularExpressions.Group" BaseName="Capture" BaseType="System.Text.RegularExpressions.Capture" />
      </Method>
    </Class>
    <Class Name="GroupCollection" Type="System.Text.RegularExpressions.GroupCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSynchronized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SyncRoot" Type="System.Object" IsReadable="True" />
      <Method Name="get_Item" Type="System.Text.RegularExpressions.Group" BaseName="Capture" BaseType="System.Text.RegularExpressions.Capture">
        <Parameter Name="groupnum" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="get_Item" Type="System.Text.RegularExpressions.Group" BaseName="Capture" BaseType="System.Text.RegularExpressions.Capture">
        <Parameter Name="groupname" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Array" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arrayIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
    </Class>
    <Class Name="Match" Type="System.Text.RegularExpressions.Match" BaseName="Group" BaseType="System.Text.RegularExpressions.Group">
      <Property Name="Empty" Type="System.Text.RegularExpressions.Match" BaseName="Group" BaseType="System.Text.RegularExpressions.Group" IsReadable="True" IsStatic="True" />
      <Property Name="Groups" Type="System.Text.RegularExpressions.GroupCollection" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Method Name="NextMatch" Type="System.Text.RegularExpressions.Match" BaseName="Group" BaseType="System.Text.RegularExpressions.Group" />
      <Method Name="Result" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="replacement" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Synchronized" Type="System.Text.RegularExpressions.Match" BaseName="Group" BaseType="System.Text.RegularExpressions.Group" IsStatic="True">
        <Parameter Name="inner" Type="System.Text.RegularExpressions.Match" BaseName="Group" BaseType="System.Text.RegularExpressions.Group" />
      </Method>
    </Class>
    <Class Name="MatchCollection" Type="System.Text.RegularExpressions.MatchCollection" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <Property Name="Count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsReadOnly" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="IsSynchronized" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="SyncRoot" Type="System.Object" IsReadable="True" />
      <Method Name="get_Item" Type="System.Text.RegularExpressions.Match" BaseName="Group" BaseType="System.Text.RegularExpressions.Group">
        <Parameter Name="i" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="CopyTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="array" Type="System.Array" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="arrayIndex" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetEnumerator" Type="System.Collections.IEnumerator" IsInterface="True" />
    </Class>
    <Class Name="MatchEvaluator" Type="System.Text.RegularExpressions.MatchEvaluator" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="match" Type="System.Text.RegularExpressions.Match" BaseName="Group" BaseType="System.Text.RegularExpressions.Group" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="match" Type="System.Text.RegularExpressions.Match" BaseName="Group" BaseType="System.Text.RegularExpressions.Group" />
      </Method>
    </Class>
    <Class Name="Regex" Type="System.Text.RegularExpressions.Regex" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Field Name="InfiniteMatchTimeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsStatic="True" />
      <Property Name="CacheSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="MatchTimeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Options" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="RightToLeft" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="CompileToAssembly" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="regexinfos" Type="System.Text.RegularExpressions.RegexCompilationInfo[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Text.RegularExpressions.RegexCompilationInfo" />
        <Parameter Name="assemblyname" Type="System.Reflection.AssemblyName" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CompileToAssembly" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="regexinfos" Type="System.Text.RegularExpressions.RegexCompilationInfo[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Text.RegularExpressions.RegexCompilationInfo" />
        <Parameter Name="assemblyname" Type="System.Reflection.AssemblyName" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="attributes" Type="System.Reflection.Emit.CustomAttributeBuilder[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Reflection.Emit.CustomAttributeBuilder" />
      </Method>
      <Method Name="CompileToAssembly" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="regexinfos" Type="System.Text.RegularExpressions.RegexCompilationInfo[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Text.RegularExpressions.RegexCompilationInfo" />
        <Parameter Name="assemblyname" Type="System.Reflection.AssemblyName" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="attributes" Type="System.Reflection.Emit.CustomAttributeBuilder[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Reflection.Emit.CustomAttributeBuilder" />
        <Parameter Name="resourceFile" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Escape" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="str" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetGroupNames" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" />
      <Method Name="GetGroupNumbers" Type="System.Int32[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Int32" />
      <Method Name="GroupNameFromNumber" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="i" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GroupNumberFromName" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="IsMatch" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="IsMatch" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="IsMatch" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="IsMatch" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="IsMatch" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="startat" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Match" Type="System.Text.RegularExpressions.Match" BaseName="Group" BaseType="System.Text.RegularExpressions.Group" IsStatic="True">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Match" Type="System.Text.RegularExpressions.Match" BaseName="Group" BaseType="System.Text.RegularExpressions.Group" IsStatic="True">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Match" Type="System.Text.RegularExpressions.Match" BaseName="Group" BaseType="System.Text.RegularExpressions.Group" IsStatic="True">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Match" Type="System.Text.RegularExpressions.Match" BaseName="Group" BaseType="System.Text.RegularExpressions.Group">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Match" Type="System.Text.RegularExpressions.Match" BaseName="Group" BaseType="System.Text.RegularExpressions.Group">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="startat" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Match" Type="System.Text.RegularExpressions.Match" BaseName="Group" BaseType="System.Text.RegularExpressions.Group">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="beginning" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="length" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Matches" Type="System.Text.RegularExpressions.MatchCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Matches" Type="System.Text.RegularExpressions.MatchCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Matches" Type="System.Text.RegularExpressions.MatchCollection" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Matches" Type="System.Text.RegularExpressions.MatchCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Matches" Type="System.Text.RegularExpressions.MatchCollection" BaseName="Object" BaseType="System.Object">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="startat" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Replace" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="replacement" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Replace" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="replacement" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Replace" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="replacement" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Replace" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="replacement" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Replace" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="replacement" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Replace" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="replacement" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="startat" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Replace" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
      </Method>
      <Method Name="Replace" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Replace" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Replace" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
      </Method>
      <Method Name="Replace" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Replace" Type="System.String" BaseName="Object" BaseType="System.Object">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="startat" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Split" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" IsStatic="True">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Split" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" IsStatic="True">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Split" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String" IsStatic="True">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Split" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Split" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Split" Type="System.String[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.String">
        <Parameter Name="input" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="startat" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="Unescape" Type="System.String" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="str" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="RegexCompilationInfo" Type="System.Text.RegularExpressions.RegexCompilationInfo" BaseName="Object" BaseType="System.Object">
      <Property Name="IsPublic" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="MatchTimeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Namespace" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Options" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="Pattern" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fullnamespace" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ispublic" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="pattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="fullnamespace" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="ispublic" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
    </Class>
    <Class Name="RegexMatchTimeoutException" Type="System.Text.RegularExpressions.RegexMatchTimeoutException" BaseName="TimeoutException" BaseType="System.TimeoutException">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Property Name="Input" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="MatchTimeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="Pattern" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="regexInput" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="regexPattern" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="inner" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Enumeration Name="RegexOptions" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Compiled" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="8" />
      <Field Name="CultureInvariant" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="512" />
      <Field Name="ECMAScript" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="256" />
      <Field Name="ExplicitCapture" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="IgnoreCase" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="IgnorePatternWhitespace" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="32" />
      <Field Name="Multiline" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="None" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="RightToLeft" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="64" />
      <Field Name="Singleline" Type="System.Text.RegularExpressions.RegexOptions" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="16" />
    </Enumeration>
    <Class Name="RegexRunner" Type="System.Text.RegularExpressions.RegexRunner" BaseName="Object" BaseType="System.Object" />
    <Class Name="RegexRunnerFactory" Type="System.Text.RegularExpressions.RegexRunnerFactory" BaseName="Object" BaseType="System.Object" />
  </Namespace>
  <Namespace Name="System.Threading">
    <Class Name="Barrier" Type="System.Threading.Barrier" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="CurrentPhaseNumber" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ParticipantCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="ParticipantsRemaining" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="participantCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="participantCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="postPhaseAction" Type="System.Action`1&lt;System.Threading.Barrier&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True" />
      </Constructor>
      <Method Name="AddParticipant" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="AddParticipants" Type="System.Int64" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="participantCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="RemoveParticipant" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="RemoveParticipants" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="participantCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SignalAndWait" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="SignalAndWait" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SignalAndWait" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="timeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SignalAndWait" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="timeout" Type="System.TimeSpan" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SignalAndWait" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="millisecondsTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SignalAndWait" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="millisecondsTimeout" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="BarrierPostPhaseException" Type="System.Threading.BarrierPostPhaseException" BaseName="Exception" BaseType="System.Exception">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="Semaphore" Type="System.Threading.Semaphore" BaseName="WaitHandle" BaseType="System.Threading.WaitHandle">
      <ImplementedInterface Type="System.IDisposable" />
      <Constructor>
        <Parameter Name="initialCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="maximumCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="initialCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="maximumCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="initialCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="maximumCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="createdNew" Type="System.Boolean&amp;" IsByRef="True" ElementType="System.Boolean" />
      </Constructor>
      <Constructor>
        <Parameter Name="initialCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="maximumCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="createdNew" Type="System.Boolean&amp;" IsByRef="True" ElementType="System.Boolean" />
        <Parameter Name="semaphoreSecurity" Type="System.Security.AccessControl.SemaphoreSecurity" BaseName="NativeObjectSecurity" BaseType="System.Security.AccessControl.NativeObjectSecurity" />
      </Constructor>
      <Method Name="GetAccessControl" Type="System.Security.AccessControl.SemaphoreSecurity" BaseName="NativeObjectSecurity" BaseType="System.Security.AccessControl.NativeObjectSecurity" />
      <Method Name="OpenExisting" Type="System.Threading.Semaphore" BaseName="WaitHandle" BaseType="System.Threading.WaitHandle" IsStatic="True">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="OpenExisting" Type="System.Threading.Semaphore" BaseName="WaitHandle" BaseType="System.Threading.WaitHandle" IsStatic="True">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="rights" Type="System.Security.AccessControl.SemaphoreRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="Release" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Release" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="releaseCount" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="SetAccessControl" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="semaphoreSecurity" Type="System.Security.AccessControl.SemaphoreSecurity" BaseName="NativeObjectSecurity" BaseType="System.Security.AccessControl.NativeObjectSecurity" />
      </Method>
      <Method Name="TryOpenExisting" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="result" Type="System.Threading.Semaphore&amp;" IsByRef="True" ElementType="System.Threading.Semaphore" />
      </Method>
      <Method Name="TryOpenExisting" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="name" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="rights" Type="System.Security.AccessControl.SemaphoreRights" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="result" Type="System.Threading.Semaphore&amp;" IsByRef="True" ElementType="System.Threading.Semaphore" />
      </Method>
    </Class>
    <Class Name="ThreadExceptionEventArgs" Type="System.Threading.ThreadExceptionEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Exception" Type="System.Exception" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="t" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Class Name="ThreadExceptionEventHandler" Type="System.Threading.ThreadExceptionEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Threading.ThreadExceptionEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Threading.ThreadExceptionEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
  </Namespace>
  <Namespace Name="System.Timers">
    <Class Name="ElapsedEventArgs" Type="System.Timers.ElapsedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="SignalTime" Type="System.DateTime" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
    </Class>
    <Class Name="ElapsedEventHandler" Type="System.Timers.ElapsedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Timers.ElapsedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Timers.ElapsedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Method>
    </Class>
    <Class Name="Timer" Type="System.Timers.Timer" BaseName="Component" BaseType="System.ComponentModel.Component">
      <ImplementedInterface Type="System.ComponentModel.IComponent" />
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.ComponentModel.ISupportInitialize" />
      <Property Name="AutoReset" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Enabled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Interval" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Site" Type="System.ComponentModel.ISite" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Property Name="SynchronizingObject" Type="System.ComponentModel.ISynchronizeInvoke" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="interval" Type="System.Double" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInit" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Close" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="EndInit" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Start" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Stop" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Event Name="Elapsed" Type="System.Timers.ElapsedEventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Timers.ElapsedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Class Name="TimersDescriptionAttribute" Type="System.Timers.TimersDescriptionAttribute" BaseName="DescriptionAttribute" BaseType="System.ComponentModel.DescriptionAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Description" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="description" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
  </Namespace>
  <Namespace Name="System.Web">
    <Class Name="AspNetHostingPermission" Type="System.Web.AspNetHostingPermission" BaseName="CodeAccessPermission" BaseType="System.Security.CodeAccessPermission">
      <ImplementedInterface Type="System.Security.IPermission" />
      <ImplementedInterface Type="System.Security.ISecurityEncodable" />
      <ImplementedInterface Type="System.Security.IStackWalk" />
      <ImplementedInterface Type="System.Security.Permissions.IUnrestrictedPermission" />
      <Property Name="Level" Type="System.Web.AspNetHostingPermissionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Constructor>
        <Parameter Name="level" Type="System.Web.AspNetHostingPermissionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Copy" Type="System.Security.IPermission" IsInterface="True" />
      <Method Name="FromXml" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Intersect" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsSubsetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsUnrestricted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToXml" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      <Method Name="Union" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="AspNetHostingPermissionAttribute" Type="System.Web.AspNetHostingPermissionAttribute" BaseName="CodeAccessSecurityAttribute" BaseType="System.Security.Permissions.CodeAccessSecurityAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="Level" Type="System.Web.AspNetHostingPermissionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="CreatePermission" Type="System.Security.IPermission" IsInterface="True" />
    </Class>
    <Enumeration Name="AspNetHostingPermissionLevel" Type="System.Web.AspNetHostingPermissionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="High" Type="System.Web.AspNetHostingPermissionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="500" />
      <Field Name="Low" Type="System.Web.AspNetHostingPermissionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="300" />
      <Field Name="Medium" Type="System.Web.AspNetHostingPermissionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="400" />
      <Field Name="Minimal" Type="System.Web.AspNetHostingPermissionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="200" />
      <Field Name="None" Type="System.Web.AspNetHostingPermissionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="100" />
      <Field Name="Unrestricted" Type="System.Web.AspNetHostingPermissionLevel" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="600" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.Windows.Input">
    <Interface Name="ICommand" Type="System.Windows.Input.ICommand" IsInterface="True">
      <Method Name="CanExecute" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="parameter" Type="System.Object" />
      </Method>
      <Method Name="Execute" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="parameter" Type="System.Object" />
      </Method>
      <Event Name="CanExecuteChanged" Type="System.EventHandler" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" BaseName="Object" BaseType="System.Object" />
      </Event>
    </Interface>
  </Namespace>
  <Namespace Name="System.Windows.Markup">
    <Class Name="ValueSerializerAttribute" Type="System.Windows.Markup.ValueSerializerAttribute" BaseName="Attribute" BaseType="System.Attribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Property Name="ValueSerializerType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" IsReadable="True" />
      <Property Name="ValueSerializerTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="valueSerializerType" Type="System.Type" BaseName="MemberInfo" BaseType="System.Reflection.MemberInfo" />
      </Constructor>
      <Constructor>
        <Parameter Name="valueSerializerTypeName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
  </Namespace>
</Assembly>