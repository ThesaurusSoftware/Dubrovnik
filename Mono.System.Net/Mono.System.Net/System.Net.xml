<?xml version="1.0" encoding="utf-8"?>
<Assembly Name="System.Net" FullName="System.Net, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Path="C:\Windows\Microsoft.NET\Framework\v4.0.30319\System.Net.dll">
  <Reference Name="mscorlib" FullName="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <Reference Name="System" FullName="System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <Namespace Name="System.Net">
    <Interface Name="INetworkProgress" Type="System.Net.INetworkProgress" IsInterface="True">
      <Event Name="ProgressChanged" Type="System.EventHandler`1&lt;System.Net.NetworkProgressChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.NetworkProgressChangedEventArgs" BaseName="ProgressChangedEventArgs" BaseType="System.ComponentModel.ProgressChangedEventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.NetworkProgressChangedEventArgs" BaseName="ProgressChangedEventArgs" BaseType="System.ComponentModel.ProgressChangedEventArgs" />
      </Event>
      <Event Name="ProgressCompleted" Type="System.EventHandler`1&lt;System.Net.NetworkProgressChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.NetworkProgressChangedEventArgs" BaseName="ProgressChangedEventArgs" BaseType="System.ComponentModel.ProgressChangedEventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.NetworkProgressChangedEventArgs" BaseName="ProgressChangedEventArgs" BaseType="System.ComponentModel.ProgressChangedEventArgs" />
      </Event>
      <Event Name="ProgressFailed" Type="System.EventHandler`1&lt;System.Net.NetworkProgressChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.NetworkProgressChangedEventArgs" BaseName="ProgressChangedEventArgs" BaseType="System.ComponentModel.ProgressChangedEventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.NetworkProgressChangedEventArgs" BaseName="ProgressChangedEventArgs" BaseType="System.ComponentModel.ProgressChangedEventArgs" />
      </Event>
    </Interface>
    <Class Name="IPEndPointCollection" Type="System.Net.IPEndPointCollection" BaseName="Collection`1&lt;IPEndPoint&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.IPEndPoint&gt;">
      <ImplementedInterface Type="System.Collections.Generic.IList`1&lt;System.Net.IPEndPoint&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Net.IPEndPoint&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Net.IPEndPoint&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyList`1&lt;System.Net.IPEndPoint&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Net.IPEndPoint&gt;" />
    </Class>
    <Interface Name="IUnsafeWebRequestCreate" Type="System.Net.IUnsafeWebRequestCreate" IsInterface="True">
      <Method Name="Create" Type="System.Net.WebRequest" BaseName="MarshalByRefObject" BaseType="System.MarshalByRefObject">
        <Parameter Name="uri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Interface>
    <Class Name="NetworkProgressChangedEventArgs" Type="System.Net.NetworkProgressChangedEventArgs" BaseName="ProgressChangedEventArgs" BaseType="System.ComponentModel.ProgressChangedEventArgs">
      <Property Name="ProcessedBytes" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="TotalBytes" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Constructor>
        <Parameter Name="percentage" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="processedBytes" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="totalBytes" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="userState" Type="System.Object" />
      </Constructor>
    </Class>
    <Class Name="UiSynchronizationContext" Type="System.Net.UiSynchronizationContext" BaseName="Object" BaseType="System.Object">
      <Property Name="Current" Type="System.Threading.SynchronizationContext" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="ManagedUiThreadId" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" IsStatic="True" />
    </Class>
  </Namespace>
  <Namespace Name="System.Net.PeerToPeer">
    <Class Name="Cloud" Type="System.Net.PeerToPeer.Cloud" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.IEquatable`1&lt;System.Net.PeerToPeer.Cloud&gt;" />
      <Field Name="AllLinkLocal" Type="System.Net.PeerToPeer.Cloud" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Field Name="Available" Type="System.Net.PeerToPeer.Cloud" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Global" Type="System.Net.PeerToPeer.Cloud" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Scope" Type="System.Net.PeerToPeer.PnrpScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="ScopeId" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="other" Type="System.Net.PeerToPeer.Cloud" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetAvailableClouds" Type="System.Net.PeerToPeer.CloudCollection" BaseName="Collection`1&lt;Cloud&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Cloud&gt;" IsStatic="True" />
      <Method Name="GetCloudByName" Type="System.Net.PeerToPeer.Cloud" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="cloudName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="CloudCollection" Type="System.Net.PeerToPeer.CloudCollection" BaseName="Collection`1&lt;Cloud&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Cloud&gt;">
      <ImplementedInterface Type="System.Collections.Generic.IList`1&lt;System.Net.PeerToPeer.Cloud&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Net.PeerToPeer.Cloud&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Net.PeerToPeer.Cloud&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyList`1&lt;System.Net.PeerToPeer.Cloud&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Net.PeerToPeer.Cloud&gt;" />
    </Class>
    <Class Name="PeerName" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.IEquatable`1&lt;System.Net.PeerToPeer.PeerName&gt;" />
      <Property Name="Authority" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="Classifier" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="IsSecured" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PeerHostName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="remotePeerName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="classifier" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="peerNameType" Type="System.Net.PeerToPeer.PeerNameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="CreateFromPeerHostName" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="peerHostName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateRelativePeerName" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" IsStatic="True">
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="classifier" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="other" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="PeerNameRecord" Type="System.Net.PeerToPeer.PeerNameRecord" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Property Name="Comment" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Property Name="EndPointCollection" Type="System.Net.IPEndPointCollection" BaseName="Collection`1&lt;IPEndPoint&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.IPEndPoint&gt;" IsReadable="True" />
      <Property Name="PeerName" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
    </Class>
    <Class Name="PeerNameRecordCollection" Type="System.Net.PeerToPeer.PeerNameRecordCollection" BaseName="Collection`1&lt;PeerNameRecord&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.PeerNameRecord&gt;">
      <ImplementedInterface Type="System.Collections.Generic.IList`1&lt;System.Net.PeerToPeer.PeerNameRecord&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Net.PeerToPeer.PeerNameRecord&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Net.PeerToPeer.PeerNameRecord&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyList`1&lt;System.Net.PeerToPeer.PeerNameRecord&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Net.PeerToPeer.PeerNameRecord&gt;" />
    </Class>
    <Class Name="PeerNameRegistration" Type="System.Net.PeerToPeer.PeerNameRegistration" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Property Name="Cloud" Type="System.Net.PeerToPeer.Cloud" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Comment" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Property Name="EndPointCollection" Type="System.Net.IPEndPointCollection" BaseName="Collection`1&lt;IPEndPoint&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.IPEndPoint&gt;" IsReadable="True" />
      <Property Name="PeerName" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="UseAutoEndPointSelection" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Constructor>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="port" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="IsRegistered" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Start" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Stop" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Update" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="PeerNameResolver" Type="System.Net.PeerToPeer.PeerNameResolver" BaseName="Object" BaseType="System.Object">
      <Method Name="Resolve" Type="System.Net.PeerToPeer.PeerNameRecordCollection" BaseName="Collection`1&lt;PeerNameRecord&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.PeerNameRecord&gt;">
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Resolve" Type="System.Net.PeerToPeer.PeerNameRecordCollection" BaseName="Collection`1&lt;PeerNameRecord&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.PeerNameRecord&gt;">
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Resolve" Type="System.Net.PeerToPeer.PeerNameRecordCollection" BaseName="Collection`1&lt;PeerNameRecord&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.PeerNameRecord&gt;">
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="maxRecords" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Resolve" Type="System.Net.PeerToPeer.PeerNameRecordCollection" BaseName="Collection`1&lt;PeerNameRecord&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.PeerNameRecord&gt;">
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="maxRecords" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="ResolveAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userState" Type="System.Object" />
      </Method>
      <Method Name="ResolveAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userState" Type="System.Object" />
      </Method>
      <Method Name="ResolveAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="maxRecords" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="userState" Type="System.Object" />
      </Method>
      <Method Name="ResolveAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="maxRecords" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="userState" Type="System.Object" />
      </Method>
      <Method Name="ResolveAsyncCancel" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="userState" Type="System.Object" />
      </Method>
      <Event Name="ResolveCompleted" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Event>
      <Event Name="ResolveProgressChanged" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" BaseName="ProgressChangedEventArgs" BaseType="System.ComponentModel.ProgressChangedEventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" BaseName="ProgressChangedEventArgs" BaseType="System.ComponentModel.ProgressChangedEventArgs" />
      </Event>
    </Class>
    <Enumeration Name="PeerNameType" Type="System.Net.PeerToPeer.PeerNameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Secured" Type="System.Net.PeerToPeer.PeerNameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Unsecured" Type="System.Net.PeerToPeer.PeerNameType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Class Name="PeerToPeerException" Type="System.Net.PeerToPeer.PeerToPeerException" BaseName="Exception" BaseType="System.Exception">
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.Runtime.InteropServices._Exception" />
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Constructor>
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="innerException" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="GetObjectData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
    </Class>
    <Class Name="PnrpPermission" Type="System.Net.PeerToPeer.PnrpPermission" BaseName="CodeAccessPermission" BaseType="System.Security.CodeAccessPermission">
      <ImplementedInterface Type="System.Security.IPermission" />
      <ImplementedInterface Type="System.Security.ISecurityEncodable" />
      <ImplementedInterface Type="System.Security.IStackWalk" />
      <ImplementedInterface Type="System.Security.Permissions.IUnrestrictedPermission" />
      <Constructor>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Copy" Type="System.Security.IPermission" IsInterface="True" />
      <Method Name="FromXml" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="e" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Intersect" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsSubsetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsUnrestricted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToXml" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      <Method Name="Union" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="PnrpPermissionAttribute" Type="System.Net.PeerToPeer.PnrpPermissionAttribute" BaseName="CodeAccessSecurityAttribute" BaseType="System.Security.Permissions.CodeAccessSecurityAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Constructor>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="CreatePermission" Type="System.Security.IPermission" IsInterface="True" />
    </Class>
    <Enumeration Name="PnrpScope" Type="System.Net.PeerToPeer.PnrpScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="All" Type="System.Net.PeerToPeer.PnrpScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Global" Type="System.Net.PeerToPeer.PnrpScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="LinkLocal" Type="System.Net.PeerToPeer.PnrpScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="SiteLocal" Type="System.Net.PeerToPeer.PnrpScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Class Name="ResolveCompletedEventArgs" Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs">
      <Property Name="PeerNameRecordCollection" Type="System.Net.PeerToPeer.PeerNameRecordCollection" BaseName="Collection`1&lt;PeerNameRecord&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.PeerNameRecord&gt;" IsReadable="True" />
      <Constructor>
        <Parameter Name="peerNameRecordCollection" Type="System.Net.PeerToPeer.PeerNameRecordCollection" BaseName="Collection`1&lt;PeerNameRecord&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.PeerNameRecord&gt;" />
        <Parameter Name="error" Type="System.Exception" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="canceled" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="userToken" Type="System.Object" />
      </Constructor>
    </Class>
    <Class Name="ResolveProgressChangedEventArgs" Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" BaseName="ProgressChangedEventArgs" BaseType="System.ComponentModel.ProgressChangedEventArgs">
      <Property Name="PeerNameRecord" Type="System.Net.PeerToPeer.PeerNameRecord" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="peerNameRecord" Type="System.Net.PeerToPeer.PeerNameRecord" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userToken" Type="System.Object" />
      </Constructor>
    </Class>
  </Namespace>
  <Namespace Name="System.Net.PeerToPeer.Collaboration">
    <Class Name="ApplicationChangedEventArgs" Type="System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="PeerApplication" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="PeerChangeType" Type="System.Net.PeerToPeer.Collaboration.PeerChangeType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="PeerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" IsReadable="True" />
      <Property Name="PeerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Class Name="ContactManager" Type="System.Net.PeerToPeer.Collaboration.ContactManager" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="LocalContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" IsReadable="True" IsStatic="True" />
      <Property Name="SynchronizingObject" Type="System.ComponentModel.ISynchronizeInvoke" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Method Name="AddContact" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="peerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" />
      </Method>
      <Method Name="CreateContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer">
        <Parameter Name="peerNearMe" Type="System.Net.PeerToPeer.Collaboration.PeerNearMe" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" />
      </Method>
      <Method Name="CreateContactAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="peerNearMe" Type="System.Net.PeerToPeer.Collaboration.PeerNearMe" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="DeleteContact" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="peerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" />
      </Method>
      <Method Name="DeleteContact" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer">
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetContacts" Type="System.Net.PeerToPeer.Collaboration.PeerContactCollection" BaseName="Collection`1&lt;PeerContact&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;" />
      <Method Name="UpdateContact" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="peerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" />
      </Method>
      <Event Name="ApplicationChanged" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="CreateContactCompleted" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Event>
      <Event Name="NameChanged" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="ObjectChanged" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="PresenceChanged" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="SubscriptionListChanged" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Class Name="CreateContactCompletedEventArgs" Type="System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs">
      <Property Name="PeerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" IsReadable="True" />
    </Class>
    <Class Name="InviteCompletedEventArgs" Type="System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs">
      <Property Name="InviteResponse" Type="System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Class Name="NameChangedEventArgs" Type="System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="PeerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" IsReadable="True" />
      <Property Name="PeerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Class Name="ObjectChangedEventArgs" Type="System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="PeerChangeType" Type="System.Net.PeerToPeer.Collaboration.PeerChangeType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="PeerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" IsReadable="True" />
      <Property Name="PeerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="PeerObject" Type="System.Net.PeerToPeer.Collaboration.PeerObject" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Class Name="Peer" Type="System.Net.PeerToPeer.Collaboration.Peer" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.IEquatable`1&lt;System.Net.PeerToPeer.Collaboration.Peer&gt;" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Property Name="IsOnline" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" />
      <Property Name="PeerEndPoints" Type="System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" BaseName="Collection`1&lt;PeerEndPoint&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerEndPoint&gt;" IsReadable="True" />
      <Property Name="SynchronizingObject" Type="System.ComponentModel.ISynchronizeInvoke" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.Peer" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetObjects" Type="System.Net.PeerToPeer.Collaboration.PeerObjectCollection" BaseName="Collection`1&lt;PeerObject&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerObject&gt;" />
      <Method Name="GetObjects" Type="System.Net.PeerToPeer.Collaboration.PeerObjectCollection" BaseName="Collection`1&lt;PeerObject&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerObject&gt;">
        <Parameter Name="objectId" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetPresenceInfo" Type="System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" BaseName="Object" BaseType="System.Object">
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Invite" Type="System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" BaseName="Object" BaseType="System.Object" />
      <Method Name="Invite" Type="System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" BaseName="Object" BaseType="System.Object">
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="invitationData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="InviteAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="InviteAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="invitationData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="InviteAsyncCancel" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Event Name="InviteCompleted" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Event>
    </Class>
    <Class Name="PeerApplication" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.IEquatable`1&lt;System.Net.PeerToPeer.Collaboration.PeerApplication&gt;" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Property Name="CommandLineArgs" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Property Name="Description" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="Id" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Path" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="PeerScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="SynchronizingObject" Type="System.ComponentModel.ISynchronizeInvoke" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="id" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="description" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="path" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="commandLineArgs" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="peerScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="objA" Type="System.Object" />
        <Parameter Name="objB" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Event Name="ApplicationChanged" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Class Name="PeerApplicationCollection" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" BaseName="Collection`1&lt;PeerApplication&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerApplication&gt;">
      <ImplementedInterface Type="System.Collections.Generic.IList`1&lt;System.Net.PeerToPeer.Collaboration.PeerApplication&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Net.PeerToPeer.Collaboration.PeerApplication&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Net.PeerToPeer.Collaboration.PeerApplication&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyList`1&lt;System.Net.PeerToPeer.Collaboration.PeerApplication&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Net.PeerToPeer.Collaboration.PeerApplication&gt;" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="PeerApplicationLaunchInfo" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" BaseName="Object" BaseType="System.Object">
      <Property Name="Data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Property Name="Message" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="PeerApplication" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="PeerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" IsReadable="True" IsWritable="True" />
      <Property Name="PeerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
    </Class>
    <Enumeration Name="PeerApplicationRegistrationType" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="AllUsers" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="CurrentUser" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Enumeration Name="PeerChangeType" Type="System.Net.PeerToPeer.Collaboration.PeerChangeType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Added" Type="System.Net.PeerToPeer.Collaboration.PeerChangeType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Deleted" Type="System.Net.PeerToPeer.Collaboration.PeerChangeType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Updated" Type="System.Net.PeerToPeer.Collaboration.PeerChangeType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Class Name="PeerCollaboration" Type="System.Net.PeerToPeer.Collaboration.PeerCollaboration" BaseName="Object" BaseType="System.Object">
      <Property Name="ApplicationLaunchInfo" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="ContactManager" Type="System.Net.PeerToPeer.Collaboration.ContactManager" BaseName="Object" BaseType="System.Object" IsReadable="True" IsStatic="True" />
      <Property Name="LocalEndPointName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="LocalPresenceInfo" Type="System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Property Name="SignInScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" />
      <Property Name="SynchronizingObject" Type="System.ComponentModel.ISynchronizeInvoke" IsInterface="True" IsReadable="True" IsWritable="True" IsStatic="True" />
      <Method Name="DeleteObject" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="peerObject" Type="System.Net.PeerToPeer.Collaboration.PeerObject" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetLocalRegisteredApplications" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" BaseName="Collection`1&lt;PeerApplication&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerApplication&gt;" IsStatic="True" />
      <Method Name="GetLocalRegisteredApplications" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" BaseName="Collection`1&lt;PeerApplication&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerApplication&gt;" IsStatic="True">
        <Parameter Name="type" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="GetLocalSetObjects" Type="System.Net.PeerToPeer.Collaboration.PeerObjectCollection" BaseName="Collection`1&lt;PeerObject&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerObject&gt;" IsStatic="True" />
      <Method Name="GetPeersNearMe" Type="System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" BaseName="Collection`1&lt;PeerNearMe&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerNearMe&gt;" IsStatic="True" />
      <Method Name="RegisterApplication" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="application" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="SetObject" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="peerObject" Type="System.Net.PeerToPeer.Collaboration.PeerObject" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="SignIn" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="peerScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="SignOut" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="peerScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Method Name="UnregisterApplication" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="application" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="type" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Method>
      <Event Name="LocalApplicationChanged" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="LocalNameChanged" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="LocalObjectChanged" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="LocalPresenceChanged" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Class Name="PeerCollaborationPermission" Type="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" BaseName="CodeAccessPermission" BaseType="System.Security.CodeAccessPermission">
      <ImplementedInterface Type="System.Security.IPermission" />
      <ImplementedInterface Type="System.Security.ISecurityEncodable" />
      <ImplementedInterface Type="System.Security.IStackWalk" />
      <ImplementedInterface Type="System.Security.Permissions.IUnrestrictedPermission" />
      <Constructor>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Copy" Type="System.Security.IPermission" IsInterface="True" />
      <Method Name="FromXml" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="e" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Intersect" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsSubsetOf" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
      <Method Name="IsUnrestricted" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToXml" Type="System.Security.SecurityElement" BaseName="Object" BaseType="System.Object" />
      <Method Name="Union" Type="System.Security.IPermission" IsInterface="True">
        <Parameter Name="target" Type="System.Security.IPermission" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="PeerCollaborationPermissionAttribute" Type="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" BaseName="CodeAccessSecurityAttribute" BaseType="System.Security.Permissions.CodeAccessSecurityAttribute">
      <ImplementedInterface Type="System.Runtime.InteropServices._Attribute" />
      <Constructor>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="CreatePermission" Type="System.Security.IPermission" IsInterface="True" />
    </Class>
    <Class Name="PeerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer">
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.IEquatable`1&lt;System.Net.PeerToPeer.Collaboration.Peer&gt;" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.IEquatable`1&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;" />
      <Property Name="Credentials" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" BaseName="X509Certificate" BaseType="System.Security.Cryptography.X509Certificates.X509Certificate" IsReadable="True" IsWritable="True" />
      <Property Name="DisplayName" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="EmailAddress" Type="System.Net.Mail.MailAddress" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="IsSubscribed" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="Nickname" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="PeerEndPoints" Type="System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" BaseName="Collection`1&lt;PeerEndPoint&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerEndPoint&gt;" IsReadable="True" />
      <Property Name="PeerName" Type="System.Net.PeerToPeer.PeerName" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="SubscribeAllowed" Type="System.Net.PeerToPeer.Collaboration.SubscriptionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="objA" Type="System.Object" />
        <Parameter Name="objB" Type="System.Object" />
      </Method>
      <Method Name="FromXml" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" IsStatic="True">
        <Parameter Name="peerContactXml" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetApplications" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" BaseName="Collection`1&lt;PeerApplication&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerApplication&gt;" />
      <Method Name="GetApplications" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" BaseName="Collection`1&lt;PeerApplication&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerApplication&gt;">
        <Parameter Name="applicationId" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetApplications" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" BaseName="Collection`1&lt;PeerApplication&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerApplication&gt;">
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetApplications" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" BaseName="Collection`1&lt;PeerApplication&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerApplication&gt;">
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="applicationId" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="GetObjects" Type="System.Net.PeerToPeer.Collaboration.PeerObjectCollection" BaseName="Collection`1&lt;PeerObject&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerObject&gt;">
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="GetObjects" Type="System.Net.PeerToPeer.Collaboration.PeerObjectCollection" BaseName="Collection`1&lt;PeerObject&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerObject&gt;">
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="objectId" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Method>
      <Method Name="Invite" Type="System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" BaseName="Object" BaseType="System.Object" />
      <Method Name="Invite" Type="System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" BaseName="Object" BaseType="System.Object">
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="invitationData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="Invite" Type="System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" BaseName="Object" BaseType="System.Object">
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Invite" Type="System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" BaseName="Object" BaseType="System.Object">
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="invitationData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="InviteAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="InviteAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="invitationData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="InviteAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="InviteAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="invitationData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="Subscribe" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="SubscribeAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="ToXml" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Method Name="Unsubscribe" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Event Name="ApplicationChanged" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="ObjectChanged" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="PresenceChanged" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="SubscribeCompleted" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Event>
    </Class>
    <Class Name="PeerContactCollection" Type="System.Net.PeerToPeer.Collaboration.PeerContactCollection" BaseName="Collection`1&lt;PeerContact&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;">
      <ImplementedInterface Type="System.Collections.Generic.IList`1&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyList`1&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="PeerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.IEquatable`1&lt;System.Net.PeerToPeer.Collaboration.PeerEndPoint&gt;" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Property Name="EndPoint" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" IsReadable="True" IsWritable="True" />
      <Property Name="Name" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="SynchronizingObject" Type="System.ComponentModel.ISynchronizeInvoke" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" />
      </Constructor>
      <Constructor>
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" />
        <Parameter Name="endPointName" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="objA" Type="System.Object" />
        <Parameter Name="objB" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Event Name="NameChanged" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Class Name="PeerEndPointCollection" Type="System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" BaseName="Collection`1&lt;PeerEndPoint&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerEndPoint&gt;">
      <ImplementedInterface Type="System.Collections.Generic.IList`1&lt;System.Net.PeerToPeer.Collaboration.PeerEndPoint&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Net.PeerToPeer.Collaboration.PeerEndPoint&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Net.PeerToPeer.Collaboration.PeerEndPoint&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyList`1&lt;System.Net.PeerToPeer.Collaboration.PeerEndPoint&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Net.PeerToPeer.Collaboration.PeerEndPoint&gt;" />
      <ImplementedInterface Type="System.IEquatable`1&lt;System.Net.PeerToPeer.Collaboration.PeerEndPointCollection&gt;" />
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" BaseName="Collection`1&lt;PeerEndPoint&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerEndPoint&gt;" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="PeerInvitationResponse" Type="System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" BaseName="Object" BaseType="System.Object">
      <Property Name="PeerInvitationResponseType" Type="System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
    </Class>
    <Enumeration Name="PeerInvitationResponseType" Type="System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Accepted" Type="System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Declined" Type="System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Expired" Type="System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
    </Enumeration>
    <Class Name="PeerNearMe" Type="System.Net.PeerToPeer.Collaboration.PeerNearMe" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer">
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.IEquatable`1&lt;System.Net.PeerToPeer.Collaboration.Peer&gt;" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <ImplementedInterface Type="System.IEquatable`1&lt;System.Net.PeerToPeer.Collaboration.PeerNearMe&gt;" />
      <Property Name="Nickname" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Method Name="AddToContactManager" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" />
      <Method Name="AddToContactManager" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer">
        <Parameter Name="displayName" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="nickname" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="emailAddress" Type="System.Net.Mail.MailAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="CreateFromPeerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerNearMe" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" IsStatic="True">
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.PeerNearMe" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="objA" Type="System.Object" />
        <Parameter Name="objB" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Invite" Type="System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" BaseName="Object" BaseType="System.Object">
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="invitationData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
      </Method>
      <Method Name="Invite" Type="System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" BaseName="Object" BaseType="System.Object" />
      <Method Name="InviteAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="InviteAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="message" Type="System.String" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="invitationData" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="RefreshData" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="RefreshDataAsync" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="userToken" Type="System.Object" />
      </Method>
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Event Name="PeerNearMeChanged" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
      <Event Name="RefreshDataCompleted" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs" />
      </Event>
    </Class>
    <Class Name="PeerNearMeChangedEventArgs" Type="System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="PeerChangeType" Type="System.Net.PeerToPeer.Collaboration.PeerChangeType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="PeerNearMe" Type="System.Net.PeerToPeer.Collaboration.PeerNearMe" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" IsReadable="True" />
    </Class>
    <Class Name="PeerNearMeCollection" Type="System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" BaseName="Collection`1&lt;PeerNearMe&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerNearMe&gt;">
      <ImplementedInterface Type="System.Collections.Generic.IList`1&lt;System.Net.PeerToPeer.Collaboration.PeerNearMe&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Net.PeerToPeer.Collaboration.PeerNearMe&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Net.PeerToPeer.Collaboration.PeerNearMe&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyList`1&lt;System.Net.PeerToPeer.Collaboration.PeerNearMe&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Net.PeerToPeer.Collaboration.PeerNearMe&gt;" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="PeerObject" Type="System.Net.PeerToPeer.Collaboration.PeerObject" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <ImplementedInterface Type="System.IEquatable`1&lt;System.Net.PeerToPeer.Collaboration.PeerObject&gt;" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Property Name="Data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" IsReadable="True" IsWritable="True" />
      <Property Name="Id" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="PeerScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Property Name="SynchronizingObject" Type="System.ComponentModel.ISynchronizeInvoke" IsInterface="True" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="Id" Type="System.Guid" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="data" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="peerScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
      </Constructor>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.PeerObject" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="obj" Type="System.Object" />
      </Method>
      <Method Name="Equals" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="objA" Type="System.Object" />
        <Parameter Name="objB" Type="System.Object" />
      </Method>
      <Method Name="GetHashCode" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
      <Event Name="ObjectChanged" Type="System.EventHandler`1&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" IsGenericType="True" IsConstructedGenericType="True">
        <GenericTypeArgument Type="System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs" />
      </Event>
    </Class>
    <Class Name="PeerObjectCollection" Type="System.Net.PeerToPeer.Collaboration.PeerObjectCollection" BaseName="Collection`1&lt;PeerObject&gt;" BaseType="System.Collections.ObjectModel.Collection`1&lt;System.Net.PeerToPeer.Collaboration.PeerObject&gt;">
      <ImplementedInterface Type="System.Collections.Generic.IList`1&lt;System.Net.PeerToPeer.Collaboration.PeerObject&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.ICollection`1&lt;System.Net.PeerToPeer.Collaboration.PeerObject&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IEnumerable`1&lt;System.Net.PeerToPeer.Collaboration.PeerObject&gt;" />
      <ImplementedInterface Type="System.Collections.IEnumerable" />
      <ImplementedInterface Type="System.Collections.IList" />
      <ImplementedInterface Type="System.Collections.ICollection" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyList`1&lt;System.Net.PeerToPeer.Collaboration.PeerObject&gt;" />
      <ImplementedInterface Type="System.Collections.Generic.IReadOnlyCollection`1&lt;System.Net.PeerToPeer.Collaboration.PeerObject&gt;" />
      <Method Name="ToString" Type="System.String" BaseName="Object" BaseType="System.Object" />
    </Class>
    <Class Name="PeerPresenceInfo" Type="System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" BaseName="Object" BaseType="System.Object">
      <Property Name="DescriptiveText" Type="System.String" BaseName="Object" BaseType="System.Object" IsReadable="True" IsWritable="True" />
      <Property Name="PresenceStatus" Type="System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="presenceStatus" Type="System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" />
        <Parameter Name="description" Type="System.String" BaseName="Object" BaseType="System.Object" />
      </Constructor>
    </Class>
    <Enumeration Name="PeerPresenceStatus" Type="System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Away" Type="System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="BeRightBack" Type="System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Busy" Type="System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="5" />
      <Field Name="Idle" Type="System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="4" />
      <Field Name="Offline" Type="System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
      <Field Name="Online" Type="System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="7" />
      <Field Name="OnThePhone" Type="System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="6" />
      <Field Name="OutToLunch" Type="System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
    </Enumeration>
    <Enumeration Name="PeerScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="All" Type="System.Net.PeerToPeer.Collaboration.PeerScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="3" />
      <Field Name="Internet" Type="System.Net.PeerToPeer.Collaboration.PeerScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="2" />
      <Field Name="NearMe" Type="System.Net.PeerToPeer.Collaboration.PeerScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="None" Type="System.Net.PeerToPeer.Collaboration.PeerScope" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
    <Class Name="PresenceChangedEventArgs" Type="System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="PeerChangeType" Type="System.Net.PeerToPeer.Collaboration.PeerChangeType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="PeerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" IsReadable="True" />
      <Property Name="PeerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Property Name="PeerPresenceInfo" Type="System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Class Name="RefreshDataCompletedEventArgs" Type="System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs">
      <Property Name="PeerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Class Name="SubscribeCompletedEventArgs" Type="System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" BaseName="AsyncCompletedEventArgs" BaseType="System.ComponentModel.AsyncCompletedEventArgs">
      <Property Name="PeerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" IsReadable="True" />
      <Property Name="PeerNearMe" Type="System.Net.PeerToPeer.Collaboration.PeerNearMe" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" IsReadable="True" />
    </Class>
    <Class Name="SubscriptionListChangedEventArgs" Type="System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" BaseName="EventArgs" BaseType="System.EventArgs">
      <Property Name="PeerChangeType" Type="System.Net.PeerToPeer.Collaboration.PeerChangeType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" />
      <Property Name="PeerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" BaseName="Peer" BaseType="System.Net.PeerToPeer.Collaboration.Peer" IsReadable="True" />
      <Property Name="PeerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" BaseName="Object" BaseType="System.Object" IsReadable="True" />
    </Class>
    <Enumeration Name="SubscriptionType" Type="System.Net.PeerToPeer.Collaboration.SubscriptionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum">
      <ImplementedInterface Type="System.IComparable" />
      <ImplementedInterface Type="System.IFormattable" />
      <ImplementedInterface Type="System.IConvertible" />
      <Field Name="Allowed" Type="System.Net.PeerToPeer.Collaboration.SubscriptionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="1" />
      <Field Name="Blocked" Type="System.Net.PeerToPeer.Collaboration.SubscriptionType" IsValueType="True" UnderlyingType="System.Int32" IsEnum="True" BaseName="Enum" BaseType="System.Enum" IsReadable="True" IsStatic="True" IsConstant="True" ConstantValue="0" />
    </Enumeration>
  </Namespace>
  <Namespace Name="System.Net.Sockets">
    <Class Name="HttpPolicyDownloaderProtocol" Type="System.Net.Sockets.HttpPolicyDownloaderProtocol" BaseName="Object" BaseType="System.Object">
      <Property Name="Result" Type="System.Net.Sockets.SocketPolicy" BaseName="Object" BaseType="System.Object" IsReadable="True" />
      <Constructor>
        <Parameter Name="appUri" Type="System.Uri" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="address" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Constructor>
      <Method Name="Abort" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="BeginDownload" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="callback" Type="System.Net.Sockets.SecurityCriticalAction" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
      </Method>
      <Method Name="DownloadCallback" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="ar" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="ReadCallback" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="ar" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="RegisterUnsafeWebRequestCreator" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" IsStatic="True">
        <Parameter Name="creator" Type="System.Net.IUnsafeWebRequestCreate" IsInterface="True" />
      </Method>
    </Class>
    <Class Name="SecurityCriticalAction" Type="System.Net.Sockets.SecurityCriticalAction" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True">
      <ImplementedInterface Type="System.ICloneable" />
      <ImplementedInterface Type="System.Runtime.Serialization.ISerializable" />
      <Constructor>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginInvoke" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="object" Type="System.Object" />
      </Method>
      <Method Name="EndInvoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="Invoke" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
    </Class>
    <Class Name="SocketPolicy" Type="System.Net.Sockets.SocketPolicy" BaseName="Object" BaseType="System.Object" />
    <Class Name="UdpAnySourceMulticastClient" Type="System.Net.Sockets.UdpAnySourceMulticastClient" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="MulticastLoopback" Type="System.Boolean" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="ReceiveBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="SendBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="localPort" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginJoinGroup" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginReceiveFromGroup" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginSendTo" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="remoteEndPoint" Type="System.Net.IPEndPoint" BaseName="EndPoint" BaseType="System.Net.EndPoint" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginSendToGroup" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BlockSource" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="EndJoinGroup" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndReceiveFromGroup" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
        <Parameter Name="source" Type="System.Net.IPEndPoint&amp;" IsByRef="True" ElementType="System.Net.IPEndPoint" />
      </Method>
      <Method Name="EndSendTo" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndSendToGroup" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="UnblockSource" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
      </Method>
    </Class>
    <Class Name="UdpSingleSourceMulticastClient" Type="System.Net.Sockets.UdpSingleSourceMulticastClient" BaseName="Object" BaseType="System.Object">
      <ImplementedInterface Type="System.IDisposable" />
      <Property Name="ReceiveBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Property Name="SendBufferSize" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" IsReadable="True" IsWritable="True" />
      <Constructor>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" BaseName="Object" BaseType="System.Object" />
        <Parameter Name="localPort" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
      </Constructor>
      <Method Name="BeginJoinGroup" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginReceiveFromSource" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="BeginSendToSource" Type="System.IAsyncResult" IsInterface="True">
        <Parameter Name="buffer" Type="System.Byte[]" BaseName="Array" BaseType="System.Array" IsArray="True" ArrayRank="1" ElementType="System.Byte" />
        <Parameter Name="offset" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="count" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="remotePort" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType" />
        <Parameter Name="callback" Type="System.AsyncCallback" BaseName="MulticastDelegate" BaseType="System.MulticastDelegate" IsDelegate="True" />
        <Parameter Name="state" Type="System.Object" />
      </Method>
      <Method Name="Dispose" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType" />
      <Method Name="EndJoinGroup" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
      <Method Name="EndReceiveFromSource" Type="System.Int32" IsValueType="True" IsPrimitive="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
        <Parameter Name="sourcePort" Type="System.Int32&amp;" IsByRef="True" ElementType="System.Int32" />
      </Method>
      <Method Name="EndSendToSource" Type="System.Void" IsValueType="True" BaseName="ValueType" BaseType="System.ValueType">
        <Parameter Name="result" Type="System.IAsyncResult" IsInterface="True" />
      </Method>
    </Class>
  </Namespace>
</Assembly>